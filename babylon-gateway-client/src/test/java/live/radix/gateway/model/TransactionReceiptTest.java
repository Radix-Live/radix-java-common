/*
 * Babylon Gateway API - RCnet V3
 * This API is exposed by the Babylon Radix Gateway to enable clients to efficiently query current and historic state on the RadixDLT ledger, and intelligently handle transaction submission.  It is designed for use by wallets and explorers. For simple use cases, you can typically use the Core API on a Node. A Gateway is only needed for reading historic snapshots of ledger states or a more robust set-up.  The Gateway API is implemented by the [Network Gateway](https://github.com/radixdlt/babylon-gateway), which is configured to read from [full node(s)](https://github.com/radixdlt/babylon-node) to extract and index data from the network.  This document is an API reference documentation, visit [User Guide](https://docs-babylon.radixdlt.com/) to learn more about how to run a Gateway of your own.  ## Migration guide  Please see [the latest release notes](https://github.com/radixdlt/babylon-gateway/releases).  ## Integration and forward compatibility guarantees  We give no guarantees that other endpoints will not change before Babylon mainnet launch, although changes are expected to be minimal. 
 *
 * The version of the OpenAPI document: 0.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package live.radix.gateway.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for TransactionReceipt
 */
public class TransactionReceiptTest {
    private final TransactionReceipt model = new TransactionReceipt();

    /**
     * Model tests for TransactionReceipt
     */
    @Test
    public void testTransactionReceipt() {
        // TODO: test TransactionReceipt
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'feeSummary'
     */
    @Test
    public void feeSummaryTest() {
        // TODO: test feeSummary
    }

    /**
     * Test the property 'costingParameters'
     */
    @Test
    public void costingParametersTest() {
        // TODO: test costingParameters
    }

    /**
     * Test the property 'feeDestination'
     */
    @Test
    public void feeDestinationTest() {
        // TODO: test feeDestination
    }

    /**
     * Test the property 'feeSource'
     */
    @Test
    public void feeSourceTest() {
        // TODO: test feeSource
    }

    /**
     * Test the property 'stateUpdates'
     */
    @Test
    public void stateUpdatesTest() {
        // TODO: test stateUpdates
    }

    /**
     * Test the property 'nextEpoch'
     */
    @Test
    public void nextEpochTest() {
        // TODO: test nextEpoch
    }

    /**
     * Test the property 'output'
     */
    @Test
    public void outputTest() {
        // TODO: test output
    }

    /**
     * Test the property 'events'
     */
    @Test
    public void eventsTest() {
        // TODO: test events
    }

    /**
     * Test the property 'errorMessage'
     */
    @Test
    public void errorMessageTest() {
        // TODO: test errorMessage
    }

}
