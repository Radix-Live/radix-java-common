openapi: 3.0.0
info:
  description: |
    This API is exposed by the Babylon Radix Gateway to enable clients to efficiently query current and historic
    state on the RadixDLT ledger, and intelligently handle transaction submission.

    It is designed for use by wallets and explorers, and for light queries from front-end dApps.
    For exchange/asset integrations, back-end dApp integrations, or simple use cases, you should consider using
    the Core API on a Node. A Gateway is only needed for reading historic snapshots of ledger states or a more robust set-up.

    The Gateway API is implemented by the [Network Gateway](https://github.com/radixdlt/babylon-gateway),
    which is configured to read from [full node(s)](https://github.com/radixdlt/babylon-node) to extract
    and index data from the network.

    This document is an API reference documentation, visit [User Guide](https://docs.radixdlt.com/) to learn more
    about how to run a Gateway of your own.

    ## Migration guide

    Please see [the latest release notes](https://github.com/radixdlt/babylon-gateway/releases).

    ## Integration and forward compatibility guarantees

    All responses may have additional fields added at any release, so clients are advised to use JSON parsers which
    ignore unknown fields on JSON objects.

    When the Radix protocol is updated, new functionality may be added, and so discriminated unions returned by the
    API may need to be updated to have new variants added, corresponding to the updated data. Clients may need to update
    in advance to be able to handle these new variants when a protocol update comes out.

    On the very rare occasions we need to make breaking changes to the API, these will be warned in advance with
    deprecation notices on previous versions. These deprecation notices will include a safe migration path.
    Deprecation notes or breaking changes will be flagged clearly in release notes for new versions of the Gateway.

    The Gateway DB schema is not subject to any compatibility guarantees, and may be changed at any release. DB changes
    will be flagged in the release notes so clients doing custom DB integrations can prepare.
  license:
    name: "The Radix License, Version 1.0"
    url: https://www.radixfoundation.org/licenses/license-v1
  title: Radix Gateway API - Babylon
  version: v1.9.0-L
  x-logo:
    url: https://cdn.document360.io/50e78792-5410-4ac9-aa43-4612b4d33953/Images/Documentation/radix-logo-banner.png
    href: https://docs.radixdlt.com
servers:
- url: https://gateway.radix.live
- url: https://stokenet-gateway.radix.live
tags:
- description: |
    The Gateway API is split into 5 sub APIs:
    - **Status** (`/status/*`) - For status and configuration details for the Gateway / Network.
    - **Transaction** (`/transaction/*`) - For transaction construction, preview, submission, and monitoring the status of an individual transaction.
    - **Stream** (`/transaction/*`) - For reading committed transactions.
    - **State** (`/state/*`) - For reading the current or past ledger state of the network.
    - **Statistics** (`/statistics/*`) - For calculating particular statistics against the current or past ledger state of the network.
    - **Extensions** (`/Extensions/*`) - For endpoints that do not fit into other categories, for example, they may not support historic state.
  name: SubAPIs
  x-displayName: Sub-APIs
  x-traitTag: true
- description: |
    Interacting with this API effectively may require knowledge about the Radix Babylon Transaction Model and the State Model.

    We share some very high-level details below, but please see the [official documentation](http://docs.radixdlt.com) for more details on this.

    ## Transactions and the Gateway

    User transactions are formed of a core "intent", which is then signed by 0+ signatories, before being notarized. The output is called a notarized payload.
    It is this notarized transaction payload which is submitted to the network.

    For most users, this construction process will generally happen in their Radix Wallet. If you wish to construct transactions programmatically or offline,
    you will need to integrate the Radix Engine Toolkit into your application for construction and finalization.

    Once submitted, a transaction payload can end up being either rejected or committed. Transactions get rejected if they fail to pass certain criteria at the given time.
    A transaction payload can be marked as a:
    - **Permanent Rejection** if it is never possible for it to be committed (eg it's statically invalid, or only valid up until epoch 100 and it's now epoch 101)
    - **Temporary Rejection** if it still may be possible that the transaction payload could be committed

    A given intent typically is only part of one submitted notarized payload, but it's possible for a notary to notarize and submit multiple payloads for the same intent.
    The Radix Engine ensures that any intent can only be committed once.

    A committed transaction is either committed with an outcome of "Success" or "Failure":
    - **Committed Failure** will result in fees being paid up until the failure point, but all other changes will be discarded.
    - **Committed Success** will result in all changes being committed.

    Only committed transactions appear on ledger.

    The gateway will attempt to submit your transaction to nodes on the network.
    If it gets temporarily rejected, the error message will be recorded against the transaction, but the Gateway will
    retry submission for a limited time. During this time, the status will be reported as pending.

    ## State Model

    The Radix Engine consists of "global entities".
    A global entity has a Bech32m Address, with a human-readable-prefix (and prefix byte) matching the entity type.

    As an example, entities include concepts like Components, Packages, Vaults, Resource Managers and Key-Value Stores.

    Each entity owns substates which store data, and these substates can own other entities.
    For example, an Account Component has a struct substate which owns a Key-Value Store. This Key-Value store has an
    entry for each resoure the Account owns, and each Key-Value Store Entry owns a corresponding Vault.

    For each global entity, the Gateway aggregates its owned resources by looking at the contents of Vaults in the
    subtree of entities under that global entity.
  name: Concepts
  x-displayName: Concepts
  x-traitTag: true
- description: |
    ## Request-Response Format

    The API is designed in a JSON-RPC-like style, using HTTP as a transport layer, which means that:
    - Requests always use the HTTP POST method.
    - There is no HTTP cache involved.
    - Client-originated errors result in HTTP 4xx error responses.
    - Server-originated errors result in HTTP 5xx error responses:
        - The error object contains an HTTP-like `code`
        - The error object also contains a structured/typed properties, with a `type` discriminator, allowing for structured error interpretation in client software.

    ## Pagination Model

    Many collections have dynamic length, so these are exposed through a pagination model.
    The Gateway API uses cursor-based pagination model where the existence of the cursor indicates that next chunk (page) of the underlying collection is
    available, and can be used in a subsequent request to query for it.

    ```
    collection {
      int64? total_count,
      string? next_cursor,
      T[] items
    }
    ```

    - `total_count` *(optional)* if present indicates the overall size of the underlying collection,
    - `next_cursor` *(optional)* if present indicates that the next chunk (page) exists and can be fetched using collection-specific endpoint and cursor value,
    - `items` a chunk (page) of underlying collection items.

    To provide consistent reads when querying for the next pages, it's required to provide the `at_ledger_state` parameter. It will enforce that data returned for all pages is generated using the same ledger state.

    ## State consistency and versioning

    Each response from a state endpoint returns data from a single "snapshot" of the ledger. By default, the latest available ledger version is used.
    All state responses include a `ledger_state` property in their root object, which captures which ledger version was used by the gateway to generate the response.

    Because the state of entities constantly changes, the `ledger_state` object makes it clear which state was used to generate the response.
    The `ledger_state` object includes the `state_version` (ie the unique ID of that state version, which can also be used to uniquely identify the last transaction which brought the
    ledger to that state version), the `timestamp` (which may be shared by neighbouring transactions, but does not decrease) and the epoch and round in that epoch
    when the transaction was committed (again, the pair `(epoch, round)` may be shared by neighbouring transactions).

    ## Browsing historical data

    All endpoints with an `at_ledger_state` parameter allow you to request a particular snapshot is used for generating the response. In this way, you can browse historical state at a given point in time.

    You can specify one of:
    - `state_version`
    - `timestamp` - which will query against the nearest state version before that timestamp
    - `epoch` - which will query against the result of the first transaction in that epoch
    - A pair of `epoch` and `round` - which will query against the result of the first transaction in that epoch and round

    For example, the following request will return the current state (at the current tip of the ledger) for the entity with address: `resource_rdx1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxradxrd` (ie XRD).

    ```
    /state/entity/details

    {
      "addresses": [
        "resource_rdx1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxradxrd"
      ]
    }
    ```

    Whereas the following request will return the state of XRD as it was at state version 1000, near the start of the Babylon ledger:
    ```
    /state/entity/details

    {
      "addresses": [
        "resource_rdx1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxradxrd"
      ],
      "at_ledger_state": {
        "state_version": 1000
      }
    }
    ```

    ## Consistent reads

    As described in [Browsing historical data](#section/Browsing-historical-data) it is possible to specify the exact ledger state by providing the `at_ledger_state` parameter.

    It can be used to browse historical data but it also allows consistent reads when making multiple requests (either when paginating or when collecting data from multiple endpoints).

    Imagine a situation when your key value store contains 128 keys. To fetch all the keys and it is data you would need to make at least 4 requests (2 to paginate through all keys and 2 to fetch all the data). Using the same `at_ledger_state` parameter value it is guaranteed that you are fetching all the data from exactly the same ledger state.

    Example requests:

    First page of keys:
    ```
    /state/key-value-store/keys

    {
      "key_value_store_address": "internal_keyvaluestore_rdx1kprq4hx5892fuezay6tyajyu0gr2jeu8j7alauxen46xu8ufzvecph"
    }
    ```

    Response:
    ```
    {
      "ledger_state": {
        "network": "mainnet",
        "state_version": 50576725,
        "proposer_round_timestamp": "2024-02-20T16:46:22.343Z",
        "epoch": 74324,
        "round": 84
      },
      "total_count": 128,
      "next_cursor": "eyJvIjoxMDB9",
      "items": [...]
    }
    ```

    Second page of keys:
    ```
    /state/key-value-store/keys

    {
      "key_value_store_address": "internal_keyvaluestore_rdx1kprq4hx5892fuezay6tyajyu0gr2jeu8j7alauxen46xu8ufzvecph",
      "cursor": "eyJvIjoxMDB9",
      "at_ledger_state": {
        "state_version": 50576725
      }
    }
    ```

    Response:
    ```
    {
      "ledger_state": {
        "network": "mainnet",
        "state_version": 50576725,
        "proposer_round_timestamp": "2024-02-20T16:46:22.343Z",
        "epoch": 74324,
        "round": 84
      },
      "total_count": 128,
      "items": []
    }
    ```

    Get data for one of the keys:
    ```
    /state/key-value-store/data

    {
      "key_value_store_address": "internal_keyvaluestore_rdx1kprq4hx5892fuezay6tyajyu0gr2jeu8j7alauxen46xu8ufzvecph",
      "keys": [
        {
          "key_hex": "5c80c0c72cd2cbca7263e84e9ec83a6c9cee2121d466bf3cc8640d4d06909af6"
        }
      ],
      "at_ledger_state": {
        "state_version": 50576725
      }
    }
    ```

    Response:
    ```
    {
      "ledger_state": {
        "network": "mainnet",
        "state_version": 50577454,
        "proposer_round_timestamp": "2024-02-20T16:49:22.861Z",
        "epoch": 74324,
        "round": 795
      },
      "key_value_store_address": "internal_keyvaluestore_rdx1kprq4hx5892fuezay6tyajyu0gr2jeu8j7alauxen46xu8ufzvecph",
      "entries": [
        {
          "key": {
              ...
            }
          },
          "value": {
            ...
          },
          "last_updated_at_state_version": 1351581,
          "is_locked": false
        }
      ]
    }
    ```

    All the above requests were executed against exactly the same ledger snapshot (state version `50577454`).

    ## Using endpoints with opt-in features

    To reduce bandwith and wasted work, some properties in certain endpoints are optional.

    Most opt-ins default to `false` if not provided, and you can ask for the supplementary data by explicitly setting the corresponding opt-in property to `true`.

    Some opt-ins for backwards-compatibility default to `true`. In these cases, explicitly providing a value of `false` will opt out of the data and save bandwidth.

    Endpoints that currently support opt-ins include the following. Check out the request schemas under the endpoints themselves for more detail on how to request opt-ins:

    ```
    /transaction/committed-details
    /stream/transactions
    /state/entity/details
    /state/entity/page/fungibles/
    /state/entity/page/non-fungibles/
    /state/entity/page/non-fungible-vaults/
    ```

    For example, the following request will return a simple, short response with opt-ins disabled:

    ```
    /transaction/committed-details

    {
      "intent_hash": "txid_rdx1t44y7lrqtrmn0pq4gxgsmn035lh5glws273h0lsff37jnzj2ylls3aeumn"
    }
    ```
    ```
    // Response
    {
      "ledger_state": {
        "network": "mainnet",
        "state_version": 5151578,
        "proposer_round_timestamp": "2023-10-11T07:21:03.167Z",
        "epoch": 36452,
        "round": 1060
      },
      "transaction": {
        "transaction_status": "CommittedSuccess",
        "state_version": 5150877,
        "epoch": 36452,
        "round": 362,
        "round_timestamp": "2023-10-11T07:18:30.417Z",
        "payload_hash": "notarizedtransaction_rdx1hjlstgpadgpyeulp5yahrcz56ymkmsukmrjv42nwzvygfl9nyfhsxccm42",
        "intent_hash": "txid_rdx1t44y7lrqtrmn0pq4gxgsmn035lh5glws273h0lsff37jnzj2ylls3aeumn",
        "fee_paid": "0.25417642453",
        "confirmed_at": "2023-10-11T07:18:30.417Z",
        "receipt": {
          "status": "CommittedSuccess",
          "output": [
            {
              "hex": "5c2100",
              "programmatic_json": null
            },
            {
              "hex": "5c90f8ef824eb480c16bbceebcc36d0e263b9ebf287cdcab710332344104f11c",
              "programmatic_json": null
            },
            {
              "hex": "5c2100",
              "programmatic_json": null
            },
            {
              "hex": "5c2100",
              "programmatic_json": null
            }
          ]
        }
      }
    }
    ```

    Or, if we're interested in the raw transaction payload, we can enable it in the response by requesting the `"raw_hex"` opt-in,
    which will result in the `raw_hex` property being returned:

    ```
    /transaction/committed-details
    {
      "intent_hash": "txid_rdx1t44y7lrqtrmn0pq4gxgsmn035lh5glws273h0lsff37jnzj2ylls3aeumn",
      "opt_ins": {
        "raw_hex": true
      }
    }
    ```
    ```
    // Response
    {
      "ledger_state": {
        "network": "mainnet",
        "state_version": 5152002,
        "proposer_round_timestamp": "2023-10-11T07:22:45.886Z",
        "epoch": 36453,
        "round": 152
      },
      "transaction": {
        "transaction_status": "CommittedSuccess",
        "state_version": 5150877,
        "epoch": 36452,
        "round": 362,
        "round_timestamp": "2023-10-11T07:18:30.417Z",
        "payload_hash": "notarizedtransaction_rdx1hjlstgpadgpyeulp5yahrcz56ymkmsukmrjv42nwzvygfl9nyfhsxccm42",
        "intent_hash": "txid_rdx1t44y7lrqtrmn0pq4gxgsmn035lh5glws273h0lsff37jnzj2ylls3aeumn",
        "fee_paid": "0.25417642453",
        "confirmed_at": "2023-10-11T07:18:30.417Z",
        "raw_hex": "4d22030221022104210707010a648e0000000000000a6e8e000000000000090b86dca62201012007208df9fdf4b8325fffdf300b0c68492ebc0fbe9f17c7fc811c68e6cb16a6eaf5f9010008000020220441038000d1f20f6eaff22df7090ddc21cf738ba70cd700c6e6854ea349ebec4530e80c086c6f636b5f666565210185e08f4fb23e2e21050000000000000000000000000000000041038000d1f20f6eaff22df7090ddc21cf738ba70cd700c6e6854ea349ebec4530e80c087769746864726177210280005da66318c6318c61f5a61b4c6318c6318cf794aa8d295f14e6318c6318c68500003468c609860bac140000000000000000000000000000000280005da66318c6318c61f5a61b4c6318c6318cf794aa8d295f14e6318c6318c68500003468c609860bac14000000000000000000000000000041038000d1f742847eb59027497d466b7404f6b6e3c3f0458c5a7da3eb54858c49ed0c147472795f6465706f7369745f6f725f61626f72742102810000000022000020200022000020220100012101200741017c16c54cf8ba3e3d3487172424b40502404812a7a9ceeda5aa544baa1c2d0f0c1e6cfbb3dd6af5b6aa047231d918e5288e1139d397064326ac4f63283da6686f2201012101200740e82f9e9a002a64cb3dbb2154e7912ef25720c92e0b86a7b0d090ff4c9d9992ef435b5c6d08e577f50423f8a9b831b3fbb9faecf16399a386b8412d2a53f3450f",
        "receipt": {
          "status": "CommittedSuccess",
          "output": [
            {
              "hex": "5c2100",
              "programmatic_json": null
            },
            {
              "hex": "5c90f8ef824eb480c16bbceebcc36d0e263b9ebf287cdcab710332344104f11c",
              "programmatic_json": null
            },
            {
              "hex": "5c2100",
              "programmatic_json": null
            },
            {
              "hex": "5c2100",
              "programmatic_json": null
            }
          ]
        }
      }
    }
    ```
  name: Architecture
  x-traitTag: true
- description: |
    ## Querying for entity data, including fungible and non-fungible resources.

    The Gateway API has different entry points which can be used to fetch entity data.

    The `/state/entity/details` is the main endpoint - it takes a list of entity addresses, and returns various details for those entities, which differs per entity type. A detailed specification of the response model for each entity is given in the response schema for the endpoint later in this doc. The endpoint also also supports a number of opt-ins detailed below. Many of these opt-ins return a "first page" of related data for each entity. Further pages can be requested from the `/page/` endpoints.

    The entity details endpoint is supplemented by various paged endpoints, which return collections:

    * `/state/entity/page/metadata` &rarr; returns entity metadata, and can be used as entry point for further pagination with the cursor returned from `/state/entity/details`

    * `/state/entity/page/schemas` &rarr; returns entity schemas, and can be used as an entry point for further pagination from a cursor returned from `/state/entity/details`

    * `/state/entity/page/fungibles/` &rarr; can be used as an entry point to fetch fungible resources under a given global entity or for further pagination with the cursor returned from `/state/entity/details`

    * `/state/entity/page/fungible-vaults/` &rarr; can be used as an entry point to fetch fungible vaults of a given resource under a given global entity or for further pagination with a cursor returned from `/state/entity/details`

    * `/state/entity/page/non-fungibles/` &rarr; can be used as an entry point to fetch non-fungible resources under a given global entity or for further pagination with a cursor returned from `/state/entity/details`

    * `/state/entity/page/non-fungible-vaults/` &rarr; can be used as an entry point to fetch non-fungible vaults of a given resource under a given global entity or for further pagination with a cursor returned from `/state/entity/details`

    * `/state/entity/page/non-fungible-vault/ids` &rarr; can be used as an entry point to fetch non fungible-ids in a given vault or for further pagination from a cursor returned from `/state/entity/details`

    * `/state/package/page/blueprints` &rarr; can be used as an entry point to fetch blueprints of a given package entity or for further pagination with a cursor returned from `/state/entity/details`

    * `/state/package/page/codes` &rarr; can be used as an entry point to fetch codes of a given package entity or for further pagination with a cursor returned from `/state/entity/details`

    ### Metadata

    `/state/entity/details` endpoint returns only the first page of metadata. If the queried entity contains more than one page of metadata items, a `next_cursor` will be returned, which can be used as `cursor` in the `/state/entity/page/metadata` endpoint to fetch further pages.

    You can also explicitly specify a list of metadata keys which you wish to be included on any returned objects. You can do that by filling the `explicit_metadata` opt-in with the metadata keys you wish to load.

    For example, the following request will return the regular `metadata` property in the response, but will also contain an `explicit_metadata` section containing `name` and `description` for each returned entity (if they are defined for that entity).
    ```
    /state/entity/details

    {
      "addresses": [
        "resource_rdx1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxradxrd"
      ],
      "opt_ins": {
        "explicit_metadata": [
          "name",
          "description"
        ]
      }
    }
    ```
    ```
    // Response
    // ...
    "explicit_metadata": {
      "total_count": 2,
      "items": [
        {
          "key": "name",
          "value": {
            "raw_hex": "5c2200010c055261646978",
            "programmatic_json": {
              "kind": "Enum",
              "variant_id": "0",
              "fields": [
                {
                  "kind": "String",
                  "value": "Radix"
                }
              ]
            },
            "typed": {
              "value": "Radix",
              "type": "String"
            }
          },
          "is_locked": true,
          "last_updated_at_state_version": 2
        },
        {
          "key": "description",
          "value": {
            "raw_hex": "5c2200010c9e01546865205261646978205075626c6963204e6574776f726b2773206e617469766520746f6b656e2c207573656420746f2070617920746865206e6574776f726b2773207265717569726564207472616e73616374696f6e206665657320616e6420746f2073656375726520746865206e6574776f726b207468726f756768207374616b696e6720746f206974732076616c696461746f72206e6f6465732e",
            "programmatic_json": {
              "kind": "Enum",
              "variant_id": "0",
              "fields": [
                {
                  "kind": "String",
                  "value": "The Radix Public Network's native token, used to pay the network's required transaction fees and to secure the network through staking to its validator nodes."
                }
              ]
            },
            "typed": {
              "value": "The Radix Public Network's native token, used to pay the network's required transaction fees and to secure the network through staking to its validator nodes.",
              "type": "String"
            }
          },
          "is_locked": true,
          "last_updated_at_state_version": 2
        }
      ]
    },
    // ...
    ```

    ### Resource aggregation

    Both fungible and non-fungible resources can be aggregated globally or per vault.
    This is controlled by the `aggregation_level` request field.

    * `Global` - If the entity contains multiple vaults of the same resource, or nested components which contains vaults of the same resource, the total balance across all these vaults will be returned. This mode is useful for TVL style calculations.

    * `Vault` - Each vault is returned separately. This mode is useful for non-fungibles, because you get the vault ids which you can use to paginated ids from a vault.

    ### Fungible resources opt-in

    This opt-in returns only the first page of fungible resources under the entity. If the queried entity contains more resources, a `next_cursor` will be returned, which can be used with the `/state/entity/page/fungibles/` endpoint for requesting further pages.

    If you requested vault aggregation, only the first page of vaults are returned for each resource. If a `next_cursor` is returned, further vaults for that resource can be fetched using that cursor with the `/state/entity/page/fungible-vaults/` endpoint.

    ### Non-fungible resources opt-in

    This opt-in returns only the first page of non-fungible resources under the entity. If the queried entity contains more resources, a `next_cursor` will be returned, which can be used with the `/state/entity/page/non-fungibles/` endpoint for requesting further pages.

    If you requested vault aggregation, only the first page of vaults are returned for each resource . If a `next_cursor` is returned, further vaults for that resource can be fetched using that cursor with the `/state/entity/page/non-fungible-vaults/` endpoint.

    If the `non_fungible_include_nfids` opt-in is set to true AND vault aggregation was requested, the response will also contain the first page of non-fungible ids in each returned vault. If the vault contains more than one page of ids, a `next_cursor` is returned, which can be used with the `/state/entity/page/non-fungible-vault/ids` endpoint to load further non-fungible ids in the vault.

    ## Using the /stream/transactions endpoint

    The transaction stream endpoint can be used to read a filtered stream of transaction results.

    ### State version

    You can narrow the range of transactions by specifying ledger state boundaries with the `at_ledger_state` and `from_ledger_state` filters.

    `at_ledger_state` lets you specify at which state version you want to query. It's same for almost all endpoints where you can basically travel in time on ledger. Let's say it's currently state version 347 062 but for any reason you'd like to check how ledger looked like at state version `100`  If not specified it'll always query against current tip of the ledger.

    For example, the following request will return the transaction stream as it was for state version `100` (by default all user transactions before state version `100`, from latest to oldest)
    ```
    /stream/transactions
    {
      "at_ledger_state": {"state_version": 100 }
    }
    ```

    By contrast, `from_ledger_state` lets you specify a lower boundary of state versions. This can be used to "page forward" through the transaction stream (although by default only user transactions will be returned, and they will be in descending order):

    ```
    /stream/transactions

    {
      "from_ledger_state": {"state_version": 50 },
    }
    ```

    You can combine these two, for example the following request will return all user transactions with state version `s` between `100` and `300` inclusive (in desceding order).
    ```
    /stream/transactions

    {
      "from_ledger_state": {"state_version": 100 },
      "at_ledger_state": {"state_version": 300 }
    }

    ```

    ### Supported filters

    The transaction stream endpoint allows additional filters. A transaction has to satisfy all filters in order to be returned.

    The currently supported filters are:

    * `kind_filter` - One of `User`, `EpochChange`, `All`. You can use that filter to query for certain kinds of transactions. Defaults to `User`.

    * `manifest_accounts_withdrawn_from_filter` - Allows specifying an array of account addresses. If specified, the response will contain only transactions with a manifest containing withdrawals from the given accounts.

    * `manifest_accounts_deposited_into_filter` - Similar to withdrawn, but will return only transactions with a manifest containing deposits to the given accounts.

    * `manifest_resources_filter` - Allows specifying array of resource addresses. If specified, the response will contain only transactions containing the given resources in the manifest (regardless of their usage).

    * `manifest_badges_presented_filter` - Allows specifying array of badge resource addresses. If specified, the response will contain only transactions where the given badges were presented.

    * `accounts_with_manifest_owner_method_calls` - Allows specifying an array of account addresses. If specified, the response will contain only transactions that, for all specified accounts, contain manifest method calls to that account which require the owner role. See the [account docs](https://docs.radixdlt.com/docs/account) for more information.

    * `accounts_without_manifest_owner_method_calls` - Allows specifying an array of account addresses. If specified, the response will contain only transactions that, for all specified accounts, do NOT contain manifest method calls to that account which require owner role. See the [account docs](https://docs.radixdlt.com/docs/account) for more information.

    * `manifest_class_filter` - Allows filtering to transactions which match the given manifest classification. If specified, the response will contain only transactions which have a class that matches the filter. If `match_only_most_specific` set to true, only transactions where the queried class is most specific will be returned. See the [docs on manifest classification](https://docs.radixdlt.com/docs/conforming-transaction-manifest-types) for more information.

    * `affected_global_entities_filter` - Allows specifying an array of global addresses. If specified, the response will contain transactions that affected all of the given global entities. A global entity is marked as "affected" by a transaction if any of its state (or its descendents' state) was modified as a result of the transaction. For performance reasons consensus manager and transaction tracker are excluded from that filter.

    * `event_global_emitters_filter` - Allows specifying an array of global addresses. If specified, the response will contain transactions in which all entities emitted events. If an event was published by an internal entity, it is going to be indexed as it is a global ancestor. For performance reasons events published by consensus manager and native XRD resource are excluded from that filter.

    * `events_filter` - Filters the transaction stream to transactions which emitted at least one event matching each filter (each filter can be satisfied by a different event). Currently *only* deposit and withdrawal events emitted by an internal vault entity are tracked. For the purpose of filtering, the emitter address is replaced by the global ancestor of the emitter, for example, the top-level account / component which contains the vault which emitted the event.

    Each filter is a complex object where you can specify:
    - `event` (required) - the event tag. Currently only the following tags are supported:
      * `{"event": "Withdrawal"}` - Filters to "Withdraw" events from fungible and non-fungible vaults
      * `{"event": "Deposit"}` - Filters to "Deposit" events from fungible and non-fungible vaults
    - `emitter_address` (optional) - The "global emitter". Adding a global address here filters to matching events which have an emitter entity which is a descendent of the given global address, e.g. using `{"emitter_address" : "account_rdx16y76fepuvxqpv6gp6qswqymwhj5ng6sduugj4z6yysccvdg95g0dtr" }` filters to events emitted by vaults inside that account.
    - `resource_address` (optional) - Adding a resource address here filters to matching events which concern the given resource, e.g. `{"resource_address" : "resource_rdx1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxradxrd"}` matches only events which involve XRD.

    As an example, the following query selects all transactions where the first account withdrew XRD and the second account deposited XRD:

    ```
    {
      "events_filter": [
        {
          "event": "Withdrawal",
          "emitter_address": "account_rdx16y76fepuvxqpv6gp6qswqymwhj5ng6sduugj4z6yysccvdg95g0dtr",
          "resource_address": "resource_rdx1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxradxrd"
        },
        {
          "event": "Deposit",
          "emitter_address": "account_rdx12x5vk07qcez6xj0zt8ve0x2g20mrssk0vrest3vf0qljd76r6zfvsx",
          "resource_address": "resource_rdx1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxradxrd"
        }
      ]
    }
    ```

    #### Request Validation

    The overall number of the applied filters can be limited. In a case of collection-based filters every item counts as a separate filter. By default up to 10 filters can be specified.
    The sample query below uses 5 filters in total: 1 `kind_filter`, 3 `manifest_resources_filter`s and 1 `events_filter`.

    ```
    {
      "kind_filter": "All",
      "manifest_resources_filter": [
        "resource_rdx1t5l4s99hpc6vvskktu2uy9egk86tszjnnez62zfu9t7z7tsqqtvpvp",
        "resource_rdx1t4w8ds79tkdjpq26z9v4w0tnv78jaxmy5vvrumdh3qeqzwqkgj6lvs",
        "resource_rdx1t5ha0254q4j5t0rxnev9f9vdt8jx6ud6caavrhcvvehg28ny90ku3x",
      ],
      "events_filter": [
        {
          "event": "Deposit",
          "emitter_address": "account_rdx12x5vk07qcez6xj0zt8ve0x2g20mrssk0vrest3vf0qljd76r6zfvsx",
          "resource_address": "resource_rdx1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxradxrd"
        }
      ]
    }
    ```

    ### Pagination

    If the `limit_per_page` request hint parameter is lower than the overall number of transactions to be returned or the internal limiter kick in, a `next_cursor` will be returned.
    It can be used in subsequent requests as the `cursor` parameter to fetch further pages.

    For example, the following request will return a cursor:
    ```
    /stream/transactions

    {
      "kind_filter": "All",
      "from_ledger_state": { "state_version": 100 },
      "at_ledger_state": { "state_version": 300 },
      "limit_per_page": 1
    }
    ```
    ```
    // Returns
    {
      // ...
      "next_cursor": "eyJ2IjoyOTl9",
      // ...
    }
    ```

    Which can be used in the next query to fetch further pages:
    ```
    /stream/transactions

    {
      "kind_filter": "All",
      "from_ledger_state": { "state_version": 100 },
      "at_ledger_state": { "state_version": 300 },
      "limit_per_page": 1,
      "cursor": "eyJ2IjoyOTl9"
    }
    ```

    ### Ordering

    By default, transactions are returned in **descending** order (highest state version / most recent first).

    You can change this to **ascending** order by setting the `order` parameter to `Asc`

    ```
    /stream/transactions

    {
      // ...
      "order": "Asc"
      // ...
    }
    ```

    Keep in mind that if order is ascending you'll start fetching transactions from the oldest first and with each page you'll fetch newer transactions.

    ### Reading events to find out what happened in a given dApp

    Currently the gateway supports filtering by `withdrawal` and `deposit` events only.
    We wish to support other filters in future.

    For the time being, if your dApp component always updates state along with emitting events, you can use the `affected` filter to filter to all transactions which affected your component, and extract relevant events from those transactions.

    For example, to find all transactions which affected `component_rdx1cq4ugccz6pg89w83ujanqlycw566kd9c9vxxuc9r45p7vues2649t4`,
    (and therefore all events which it emitted), you can use the following request:
    ```
    /stream/transactions

    {
      "kind_filter": "All",
      "affected_global_entities_filter": ["component_rdx1cq4ugccz6pg89w83ujanqlycw566kd9c9vxxuc9r45p7vues2649t4"],
      "opt_ins": { "receipt_events": true }
    }
    ```

    This will return the first page of all transactions, including their emitted events (which was enabled by using the `receipt_events` opt-in).
    These emitted events can be filtered by the client to just events which were emitted by the given component (`component_rdx1cq4ugccz6pg89w83ujanqlycw566kd9c9vxxuc9r45p7vues2649t4` in this case).

    ```
    // Response
    {
      "transaction_status": "CommittedSuccess",
      "state_version": 14614370,
      "epoch": 44797,
      "round": 655,
      "round_timestamp": "2023-11-09T13:29:32.27Z",
      "payload_hash": "notarizedtransaction_rdx1dmjjaww667cq388hpx4jv895yj42l7ezynqycdr97ht9s4mkhzssejpcxz",
      "intent_hash": "txid_rdx1l0y5gw45aup7r8ex863s2ahhfwz9vdfv8jktqhcypegcf3vlk6zqhnmj9a",
      "fee_paid": "0.57054833978",
      "confirmed_at": "2023-11-09T13:29:32.27Z",
      "receipt": {
        "status": "CommittedSuccess",
        "events": [
          {
            "name": "LockFeeEvent",
            "emitter": {
              "type": "Method",
              "entity": {
                "is_global": false,
                "entity_type": "InternalFungibleVault",
                "entity_address": "internal_vault_rdx1tzst8p8vvagnyyev8eu209h6fhmdvk334vhx0vhk4em02p89hlaluu"
              },
              "object_module_id": "Main"
            },
            "data": {
              "fields": [
                {
                  "value": "0.713902721272999997",
                  "kind": "Decimal",
                  "field_name": "amount"
                }
              ],
              "kind": "Tuple",
              "type_name": "LockFeeEvent"
            }
          },
          {
            "name": "WithdrawEvent",
            "emitter": {
              "type": "Method",
              "entity": {
                "is_global": false,
                "entity_type": "InternalFungibleVault",
                "entity_address": "internal_vault_rdx1tpl4g48ul8tz8agtll35m7f936f2vuj4f8up9wlcgu6lj566vmashl"
              },
              "object_module_id": "Main"
            },
            "data": {
              "fields": [
                {
                  "value": "20",
                  "kind": "Decimal",
                  "field_name": "amount"
                }
              ],
              "kind": "Tuple",
              "type_name": "WithdrawEvent"
            }
          },
          // ...
        ]
      }
    },
    // ...
    ```

    ## How role assignment works

    Blueprints define a list of different roles which control access to their features.
    Global components of a given blueprint provide assignments of access rules to those roles.

    You can get the roles and role assignments for a blueprint from the `/state/entity/details` endpoint.

    For example, let's take a look at the XRD resource:
    ```
    /state/entity/details

    {
      "addresses": [
        "resource_rdx1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxradxrd"
      ],
    }
    ```

    The response will contain two main parts. The definition of the owner role, and a list of all role assignments for that component:

    ```
    "role_assignments": {
      "owner": {
        // ...
      },
      "entries": [
        // ...
      ]
    }
    ```

    Each role assignment conceptually includes:

    * An assigned `rule` which defines what are the requirements to access that role.
    * Its `updater` which defines which role is allowed to update the assignment.

    ### The Owner role

    The owner role assignment includes the `rule` which specifies the requirements you have to meet to act
    as the owner of the entity. In the below example you need to have access to a proof of a certain non-fungible id.

    The `updater` of an owner role assingment is either `None` or specifies the owner can update itself.


    ```
      "owner": {
        "rule": {
          "type": "Protected",
          "access_rule": {
            "type": "ProofRule",
            "proof_rule": {
              "type": "Require",
              "requirement": {
                "type": "NonFungible",
                "non_fungible": {
                  "local_id": {
                    "id_type": "Integer",
                    "sbor_hex": "5cc0010000000000000000",
                    "simple_rep": "#0#"
                  },
                  "resource_address": "resource_rdx1nfxxxxxxxxxxsystxnxxxxxxxxx002683325037xxxxxxxxxsystxn"
                }
              }
            }
          }
        },
        "updater": "None"
      },
    ```

    ### Role assignment entries

    Each role assignment contains three fields:
    * `role_key` - a composite key consisting of the entity module which defines the role and the name of the role inside the module.
    * `assignment` - the assigned rule. It could be either `Explicit` as in the below example and contain an inline rule, or `Owner` which means the owner role is used.
    * `updater_roles` - a fixed list of `role_key`s which act as updaters for the role, defined on the blueprint. Access to any of these updater roles permits someone to update the assignment for this role.

    An example assignment entry is the following. This response indicates that the given resource can be burned by an actor who
    has access to a proof of a specific global caller badge:
    ```
    "role_key": {
      "module": "Main",
      "name": "burner"
    },
    "assignment": {
      "resolution": "Explicit",
      "explicit_rule": {
        "type": "Protected",
        "access_rule": {
          "type": "ProofRule",
          "proof_rule": {
            "type": "Require",
            "requirement": {
              "type": "NonFungible",
              "non_fungible": {
                "local_id": {
                  "id_type": "Bytes",
                  "sbor_hex": "5cc0022068c44e9d432e71c51e2a2ac285897b372328d8b31374ff29131bc6b25b6bd070",
                  "simple_rep": "[68c44e9d432e71c51e2a2ac285897b372328d8b31374ff29131bc6b25b6bd070]"
                },
                "resource_address": "resource_rdx1nfxxxxxxxxxxglcllrxxxxxxxxx002350006550xxxxxxxxxglcllr"
              }
            }
          }
        }
      }
    },
    "updater_roles": [
      {
        "module": "Main",
        "name": "burner_updater"
      }
    ]
    ```

    ## How to query the content of a key-value store inside a component

    ### An example component

    Imagine a component which can store resources into named vaults.
    To support arbitrary names, it might store these vaults in a `KeyValueStore<String, Vault>` as follows.
    We will use this blueprint for demonstrating some requests.

    ```
    use scrypto::prelude::*;

    #[blueprint]
    mod multi_vault {
        use scrypto::prelude::Vault;

        struct MultiVault {
            token_vaults: KeyValueStore<String, Vault>
        }

        impl MultiVault {
            pub fn instantiate_multivault() -> Global<MultiVault> {
                Self {
                    token_vaults: KeyValueStore::new()
                }
                .instantiate()
                .prepare_to_globalize(OwnerRole::None)
                .globalize()
            }

            pub fn deposit_to_vault(&mut self, vault_id: String, deposit: Bucket) {
                let tmp_token_vaults = self.token_vaults.get_mut(&vault_id);
                match tmp_token_vaults {
                    Some(mut vault) => vault.put(deposit),
                    None => {
                        drop(tmp_token_vaults);
                        self.token_vaults.insert(vault_id, Vault::with_bucket(deposit))
                    }
                }
            }
        }
    }

    ```

    ### Querying for `KeyValueStore` address

    Let's say that after creating a component with the above blueprint, we created 3 vaults "1", "2", "3" and transfered some amount of resource to each of them.

    If you'd like to look at the content of the `KeyValueStore`, you need to first get its address. You can do that by calling `/state/entity/details` with the instantiated component address:

    ```
    /state/entity/details

    {
      "addresses": [
        "component_tdx_2_1crmcapqnz2sex9u6tppnagps64lgpfmkupmyrwazeg5qe3x2z3trcr"
      ]
    }
    ```

    In the response you'll receive the state of that component which will contain the address of that `KeyValueStore`:

    ```
          // ...
          "details": {
            // ...
            "state": {
              "kind": "Tuple",
              "type_name": "MultiVault",
              "fields": [
                {
                  "kind": "Own",
                  "type_name": "KeyValueStore",
                  "field_name": "token_vaults",
                  "value": "internal_keyvaluestore_tdx_2_1kzjd929eqlzd9n02uuj8jd48705vcrpvhv4mgxnaltrgystnca3qxk"
                }
              ]
            }
          }
    ```

    ### Iterating over all `KeyValueStore` keys

    You can use the `/state/key-value-store/keys` endpoint to iterate over all the keys in a certain key value store.
    If the queried key value store contains more than one page of keys, a `next_cursor` will be returned, which can be used as a cursor in the request to fetch further pages.

    i.e:
    ```
    /state/key-value-store/keys

    {
      "key_value_store_address": "internal_keyvaluestore_tdx_2_1kzjd929eqlzd9n02uuj8jd48705vcrpvhv4mgxnaltrgystnca3qxk"
    }
    ```

    Will respond with a first page of the keys of the current entries of the key value store. This collection is ordered by the entry first appearance on the network, descending. Each item includes the entry's key (in both `hex` and `programmatic_json` form) and the state version when it was last updated.

    ```
    {
      ...
      "total_count": 8,
      "items": [
        {
          "key": {
            "raw_hex": "5c0c0131",
            "programmatic_json": {
              "value": "1",
              "kind": "String"
            }
          },
          "last_updated_at_state_version": 4939670
        },
        ...
      ],
      "key_value_store_address": "internal_keyvaluestore_tdx_2_1kzjd929eqlzd9n02uuj8jd48705vcrpvhv4mgxnaltrgystnca3qxk"
    }
    ```

    ### Querying for the content under specific keys

    You can either use the keys returned from the `/state/key-value-store/keys` endpoint or construct keys in json form on your own, if you know the key type of the `KeyValueStore`.

    #### Querying using hex keys

    Simply grab the `raw_hex` key returned from the `/state/key-value-store/keys` endpoint and call `/state/key-value-store/data` with it as a parameter.

    i.e:
    ```
    /state/key-value-store/data

    {
      "key_value_store_address": "internal_keyvaluestore_tdx_2_1kzjd929eqlzd9n02uuj8jd48705vcrpvhv4mgxnaltrgystnca3qxk",
      "keys": [
        {
          "key_hex": "5c0c0131"
        }
      ]
    }
    ```

    Will respond with data held under that key:

    ```
    {
      ...
      "key_value_store_address": "internal_keyvaluestore_tdx_2_1kzjd929eqlzd9n02uuj8jd48705vcrpvhv4mgxnaltrgystnca3qxk",
      "entries": [
        {
          "key": {
            "raw_hex": "5c0c0131",
            "programmatic_json": {
              "value": "1",
              "kind": "String"
            }
          },
          "value": {
            "raw_hex": "5c90588c6d59227f64bd7fc68e38bf7c7013cf179a78d5562ce9378b1378e2fa",
            "programmatic_json": {
              "value": "internal_vault_tdx_2_1tzxx6kfz0ajt6l7x3cut7lrsz0830xnc64tze6fh3vfh3ch6587c5d",
              "kind": "Own",
              "type_name": "Vault"
            }
          },
          "last_updated_at_state_version": 4939415,
          "is_locked": false
        }
      ]
    }
    ```

    In our case, we may want to look up information about the vault (for example, the vault's resource address and balance).
    This can be done with the `/state/entity/details` endpoint.

    #### Constructing json keys

    The json keys are specified as programmatic SBOR JSON (which is a recursive data format, with each layer being a discriminated union with the `kind` discriminator). Search for [SBOR on our docs site](https://docs.radixdlt.com) for more information on SBOR and the programmatic SBOR JSON format.

    In this case, our `KeyValueStore` keys are strings, so each key is identified as programmatic SBOR JSON with two properties:

    ```
    "key_json": {
        "kind": "String",
        "value": "{Id}"
    }
    ```

    And we can use that json in `/state/key-value-store/data` simply replacing {Id} with our vault name, for example, "1":

    ```
    /state/key-value-store/data

    {
    "key_value_store_address": "internal_keyvaluestore_tdx_2_1kzjd929eqlzd9n02uuj8jd48705vcrpvhv4mgxnaltrgystnca3qxk",
      "keys": [
        {
          "key_json": {
              "kind": "String",
              "value": "1"
          }
        }
      ]
    }
    ```

    The API will respond with content which is held under the given key:

    ```
    // Response
    {
      // ...
      "key_value_store_address": "internal_keyvaluestore_tdx_2_1kzjd929eqlzd9n02uuj8jd48705vcrpvhv4mgxnaltrgystnca3qxk",
      "entries": [
        {
          "key": {
            "raw_hex": "5c0c0131",
            "programmatic_json": {
              "value": "1",
              "kind": "String"
            }
          },
          "value": {
            "raw_hex": "5c90588c6d59227f64bd7fc68e38bf7c7013cf179a78d5562ce9378b1378e2fa",
            "programmatic_json": {
              "value": "internal_vault_tdx_2_1tzxx6kfz0ajt6l7x3cut7lrsz0830xnc64tze6fh3vfh3ch6587c5d",
              "kind": "Own",
              "type_name": "Vault"
            }
          },
          // ...
        }
      ]
    }
    ```

    In our case, we may want to look up information about the vault (for example, the vault's resource address and balance).
    This can be done with the `/state/entity/details` endpoint.
  name: Examples
  x-displayName: Examples
  x-traitTag: true
- description: Query information about the Gateway API status.
  name: Status
  x-displayName: Status Endpoints
- description: "Query status of, construct, preview and submit transactions."
  name: Transaction
  x-displayName: Transaction Endpoints
- description: Browse through the history of transactions.
  name: Stream
  x-displayName: Stream Endpoints
- description: Query information snapshot about state of ledger entities at present
    or past time.
  name: State
  x-displayName: State Endpoints
- description: Calculate particular statistics based on current or historic ledger
    state.
  name: Statistics
  x-displayName: Statistics Endpoints
- description: "Endpoints that do not fit into other categories, for example, those\
    \ which provide custom aggregation or indexing, or don't support historic state."
  name: Extensions
  x-displayName: Extensions Endpoints
paths:
  /status/gateway-status:
    post:
      description: |
        Returns the Gateway API version and current ledger state.
      operationId: GatewayStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayStatusResponse'
          description: Network Gateway Information
      summary: Get Gateway Status
      tags:
      - Status
      x-accepts:
      - application/json
  /status/network-configuration:
    post:
      description: |
        Returns network identifier, network name and well-known network addresses.
      operationId: NetworkConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConfigurationResponse'
          description: Network Configuration
      summary: Get Network Configuration
      tags:
      - Status
      x-accepts:
      - application/json
  /transaction/construction:
    post:
      description: |
        Returns information needed to construct a new transaction including current `epoch` number.
      operationId: TransactionConstruction
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionConstructionResponse'
          description: |
            Returns information needed to construct transaction.
      summary: Get Construction Metadata
      tags:
      - Transaction
      x-accepts:
      - application/json
  /transaction/preview:
    post:
      description: |
        Preview a transaction against the latest network state, and returns the preview receipt.
        If the node has enabled it, you may be able to also preview against recent network state.

        For V2 transactions (and beyond) the `/preview-v2` endpoint should be used instead.

        This endpoint is effectively a proxy towards the Core API `/transaction/preview` endpoint. See the Core API documentation for more details.
      operationId: TransactionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionPreviewRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionPreviewResponse'
          description: Successful Preview
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Preview Transaction
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts:
      - application/json
  /transaction/preview-v2:
    post:
      description: |
        Previews a transaction against the latest network state, and returns the preview receipt.
        If the node has enabled it, you may be able to also preview against recent network state.

        This endpoint supports V2 transactions (and beyond). If you still need to preview V1
        transactions, you should use the `/preview` endpoint instead.

        This endpoint is effectively a proxy towards the Core API `/transaction/preview-v2` endpoint. See the Core API documentation for more details.
      operationId: TransactionPreviewV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionPreviewV2Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionPreviewV2Response'
          description: Successful Preview
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Preview Transaction V2
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts:
      - application/json
  /transaction/submit:
    post:
      description: |
        Submits a signed transaction payload to the network.
      operationId: TransactionSubmit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionSubmitRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSubmitResponse'
          description: Successful Submission
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Submit Transaction
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts:
      - application/json
  /transaction/committed-details:
    post:
      description: |
        Returns the committed details and receipt of the transaction for a given transaction identifier.
        Transaction identifiers which don't correspond to a committed transaction will return a `TransactionNotFoundError`.
      operationId: TransactionCommittedDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCommittedDetailsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCommittedDetailsResponse'
          description: Transaction Status
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get Committed Transaction Details
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts:
      - application/json
  /transaction/status:
    post:
      description: |
        Returns overall transaction status and all of its known payloads based on supplied intent hash.
      operationId: TransactionStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionStatusResponse'
          description: Transaction Status
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get Transaction Status
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts:
      - application/json
  /transaction/subintent-status:
    post:
      description: |
        Returns if the given subintent has been finalized.
      operationId: TransactionSubintentStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionSubintentStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSubintentStatusResponse'
          description: Transaction Status
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get Subintent Status
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts:
      - application/json
  /transaction/account-deposit-pre-validation:
    post:
      description: |
        Helper endpoint that allows pre-validation if a deposit of certain resources to a given account can succeed or not. It is only meant for pre-validation usage, it does not guarantee that execution will succeed.
      operationId: AccountDepositPreValidation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDepositPreValidationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDepositPreValidationResponse'
          description: "Pre-validation response, including all deciding factors that\
            \ were used to generate that response."
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: PreValidate deposit of resources to an account
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts:
      - application/json
  /stream/transactions:
    post:
      description: |
        Returns transactions which have been committed to the ledger.
        [Check detailed documentation for brief explanation](#section/Using-the-streamtransactions-endpoint)
      operationId: StreamTransactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamTransactionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamTransactionsResponse'
          description: Transactions (paginated)
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get Transactions Stream
      tags:
      - Stream
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/entity/details:
    post:
      description: |
        Returns detailed information for collection of entities. Aggregate resources globally by default.
      operationId: StateEntityDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateEntityDetailsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateEntityDetailsResponse'
          description: Entity Details
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get Entity Details
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/entity/page/metadata:
    post:
      description: |
        Returns all the metadata properties associated with a given global entity.
        The returned response is in a paginated format, ordered by first appearance on the ledger.
      operationId: EntityMetadataPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateEntityMetadataPageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateEntityMetadataPageResponse'
          description: Entity Metadata (paginated)
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get Entity Metadata Page
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/entity/page/schemas:
    post:
      description: |
        Returns all the schemas associated with a given global entity.
        The returned response is in a paginated format, ordered by first appearance on the ledger.
      operationId: EntitySchemaPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateEntitySchemaPageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateEntitySchemaPageResponse'
          description: Entity Schemas (paginated)
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get Entity Schema Page
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/entity/page/fungibles/:
    post:
      description: |
        Returns the total amount of each fungible resource owned by a given global entity.
        Result can be aggregated globally or per vault.
        The returned response is in a paginated format, ordered by the resource's first appearance on the ledger.
      operationId: EntityFungiblesPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateEntityFungiblesPageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateEntityFungiblesPageResponse'
          description: Entity Fungibles (paginated)
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get page of Global Entity Fungible Resource Balances
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/entity/page/fungible-vaults/:
    post:
      description: |
        Returns vaults for fungible resource owned by a given global entity.
        The returned response is in a paginated format, ordered by the resource's first appearance on the ledger.
      operationId: EntityFungibleResourceVaultPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateEntityFungibleResourceVaultsPageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateEntityFungibleResourceVaultsPageResponse'
          description: Entity Fungibles (paginated)
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get page of Global Entity Fungible Resource Vaults
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/entity/page/non-fungibles/:
    post:
      description: |
        Returns the total amount of each non-fungible resource owned by a given global entity.
        Result can be aggregated globally or per vault.
        The returned response is in a paginated format, ordered by the resource's first appearance on the ledger.
      operationId: EntityNonFungiblesPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateEntityNonFungiblesPageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateEntityNonFungiblesPageResponse'
          description: Entity Non-Fungibles (paginated)
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get page of Global Entity Non-Fungible Resource Balances
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/entity/page/non-fungible-vaults/:
    post:
      description: |
        Returns vaults for non fungible resource owned by a given global entity.
        The returned response is in a paginated format, ordered by the resource's first appearance on the ledger.
      operationId: EntityNonFungibleResourceVaultPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateEntityNonFungibleResourceVaultsPageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateEntityNonFungibleResourceVaultsPageResponse'
          description: Entity Fungibles (paginated)
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get page of Global Entity Non-Fungible Resource Vaults
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/entity/page/non-fungible-vault/ids:
    post:
      description: |
        Returns all non-fungible IDs of a given non-fungible resource owned by a given entity.
        The returned response is in a paginated format, ordered by the resource's first appearence on the ledger.
      operationId: EntityNonFungibleIdsPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateEntityNonFungibleIdsPageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateEntityNonFungibleIdsPageResponse'
          description: Entity Non-Fungible IDs (paginated)
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get page of Non-Fungibles in Vault
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/non-fungible/ids:
    post:
      description: |
        Returns the non-fungible IDs of a given non-fungible resource.
        Returned response is in a paginated format, ordered by their first appearance on the ledger.
      operationId: NonFungibleIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateNonFungibleIdsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateNonFungibleIdsResponse'
          description: Non-Fungible IDs (paginated)
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get page of Non-Fungible Ids in Resource Collection
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/non-fungible/data:
    post:
      description: |
        Returns data associated with a given non-fungible ID of a given non-fungible resource.
      operationId: NonFungibleData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateNonFungibleDataRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateNonFungibleDataResponse'
          description: Non-Fungible ID Data
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get Non-Fungible Data
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/non-fungible/location:
    post:
      description: |
        Returns location of a given non-fungible ID.
      operationId: NonFungibleLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateNonFungibleLocationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateNonFungibleLocationResponse'
          description: Non-Fungible ID Location
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get Non-Fungible Location
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/key-value-store/keys:
    post:
      description: Allows to iterate over key value store keys.
      operationId: KeyValueStoreKeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateKeyValueStoreKeysRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateKeyValueStoreKeysResponse'
          description: KeyValueStore keys collection
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get KeyValueStore Keys
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/key-value-store/data:
    post:
      description: |
        Returns data (value) associated with a given key of a given key-value store.
        [Check detailed documentation for explanation](#section/How-to-query-the-content-of-a-key-value-store-inside-a-component)
      operationId: KeyValueStoreData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateKeyValueStoreDataRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateKeyValueStoreDataResponse'
          description: Non-Fungible ID Data
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get KeyValueStore Data
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/validators/list:
    post:
      operationId: StateValidatorsList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateValidatorsListRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateValidatorsListResponse'
          description: Validators List
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get Validators List
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/account/page/resource-preferences:
    post:
      description: |
        Returns paginable collection of resource preference rules for given account.
      operationId: AccountResourcePreferencesPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateAccountResourcePreferencesPageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateAccountResourcePreferencesPageResponse'
          description: Account resource preferences page
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get Account resource preferences
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/account/page/authorized-depositors:
    post:
      description: |
        Returns paginable collection of authorized depositors for given account.
      operationId: AccountAuthorizedDepositorsPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateAccountAuthorizedDepositorsPageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateAccountAuthorizedDepositorsPageResponse'
          description: Account resource preferences page
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get Account authorized depositors
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/package/page/blueprints:
    post:
      description: |
        Returns all the blueprints associated with a given package entity.
        The returned response is in a paginated format, ordered by first appearance on the ledger.
      operationId: PackageBlueprintPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatePackageBlueprintPageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatePackageBlueprintPageResponse'
          description: Package Blueprints (paginated)
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get Package Blueprints Page
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/package/page/codes:
    post:
      description: |
        Returns all the codes associated with a given package entity.
        The returned response is in a paginated format, ordered by first appearance on the ledger.
      operationId: PackageCodePage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatePackageCodePageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatePackageCodePageResponse'
          description: Package Blueprints (paginated)
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get Package Codes Page
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/account-locker/page/vaults:
    post:
      description: |
        Returns all the resource vaults associated with a given account locker.
        The returned response is in a paginated format, ordered by the most recent resource vault creation on the ledger.
      operationId: AccountLockerVaultsPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateAccountLockerPageVaultsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateAccountLockerPageVaultsResponse'
          description: Account Locker vaults (paginated)
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get Account Locker Vaults Page
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/account-lockers/touched-at:
    post:
      description: |
        Returns most recent state version given account locker has been touched. Touch refers to the creation of the account locker itself as well as any modification to its contents, such as
        resource claim, airdrop or store.
      operationId: AccountLockersTouchedAt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateAccountLockersTouchedAtRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateAccountLockersTouchedAtResponse'
          description: Account locker account pair last touch state version
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get Most Recent Touch of Account Lockers
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /statistics/validators/uptime:
    post:
      description: |
        Returns validators uptime data for time range limited by `from_state_version` and `at_state_version`.
      operationId: ValidatorsUptime
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidatorsUptimeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatorsUptimeResponse'
          description: Validators Uptime
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get Validators Uptime
      tags:
      - Statistics
      x-content-type: application/json
      x-accepts:
      - application/json
  /extensions/resource-holders/page:
    post:
      description: |
        A paginated endpoint to discover which global entities hold the most of a given resource.
        More specifically, it returns a page of global entities which hold the given resource, ordered descending by the total fungible balance / total count of non-fungibles stored in vaults in the state tree of that entity (excluding unclaimed royalty balances).
        This endpoint operates only at the **current state version**, it is not possible to browse historical data.
        Because of that, it is not possible to offer stable pagination as data constantly changes. Balances might change between pages being read, which might result in gaps or some entries being returned twice.
        Under default Gateway configuration, up to 100 entries are returned per response. This can be increased up to 1000 entries per page with the `limit_per_page` parameter.
      operationId: ResourceHoldersPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceHoldersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceHoldersResponse'
          description: Resource holders
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Client-originated request error
      summary: Get Resource Holders Page
      tags:
      - Extensions
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  responses:
    ErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Client-originated request error
  schemas:
    NetworkId:
      description: The logical id of the network
      format: int32
      maximum: 255
      minimum: 0
      type: integer
    NetworkName:
      description: The logical name of the network
      example: <network-name>
      type: string
    Address:
      description: Bech32m-encoded human readable version of the address.
      type: string
    BigDecimal:
      description: String-encoded decimal representing the amount of a related fungible
        resource.
      type: string
    NonFungibleId:
      description: String-encoded non-fungible ID.
      type: string
    HashBech32mString:
      description: Bech32m-encoded hash.
      type: string
    HashHexString:
      description: Hex-encoded SHA-256 hash.
      type: string
    HexString:
      description: Hex-encoded binary blob.
      type: string
    NotarizedTransactionHexString:
      description: Hex-encoded notarized transaction payload which can be submitted.
      type: string
    LastUpdatedAtStateVersion:
      description: The most recent state version underlying object was modified at.
      format: int64
      maximum: 100000000000000
      minimum: 1
      type: integer
    PublicKeyType:
      enum:
      - EcdsaSecp256k1
      - EddsaEd25519
      type: string
    PublicKey:
      discriminator:
        mapping:
          EcdsaSecp256k1: '#/components/schemas/PublicKeyEcdsaSecp256k1'
          EddsaEd25519: '#/components/schemas/PublicKeyEddsaEd25519'
        propertyName: key_type
      example:
        key_type: EcdsaSecp256k1
      properties:
        key_type:
          $ref: '#/components/schemas/PublicKeyType'
      required:
      - key_type
      type: object
    PublicKeyEcdsaSecp256k1:
      allOf:
      - $ref: '#/components/schemas/PublicKey'
      - properties:
          key_hex:
            description: The hex-encoded compressed ECDSA Secp256k1 public key (33
              bytes)
            maxLength: 66
            minLength: 66
            type: string
        required:
        - key_hex
        type: object
    PublicKeyEddsaEd25519:
      allOf:
      - $ref: '#/components/schemas/PublicKey'
      - properties:
          key_hex:
            description: The hex-encoded compressed EdDSA Ed25519 public key (32 bytes)
            maxLength: 64
            minLength: 64
            type: string
        required:
        - key_hex
        type: object
    PublicKeyHashType:
      enum:
      - EcdsaSecp256k1
      - EddsaEd25519
      type: string
    PublicKeyHash:
      discriminator:
        mapping:
          EcdsaSecp256k1: '#/components/schemas/PublicKeyHashEcdsaSecp256k1'
          EddsaEd25519: '#/components/schemas/PublicKeyHashEddsaEd25519'
        propertyName: key_hash_type
      properties:
        key_hash_type:
          $ref: '#/components/schemas/PublicKeyHashType'
      required:
      - key_hash_type
      type: object
    PublicKeyHashEcdsaSecp256k1:
      allOf:
      - $ref: '#/components/schemas/PublicKeyHash'
      - properties:
          hash_hex:
            $ref: '#/components/schemas/HashHexString'
        required:
        - hash_hex
        type: object
    PublicKeyHashEddsaEd25519:
      allOf:
      - $ref: '#/components/schemas/PublicKeyHash'
      - properties:
          hash_hex:
            $ref: '#/components/schemas/HashHexString'
        required:
        - hash_hex
        type: object
    AtLedgerStateMixin:
      description: "defines upper boundary (inclusive) for queried data. i.e `{ \"\
        at_state_version\" = {\"epoch\" = 10} }`, will return data till 10 epoch."
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSelector'
      type: object
    FromLedgerStateMixin:
      description: "defines lower boundary (inclusive) for queried data. i.e `{ \"\
        from_state_version\" = {\"epoch\" = 10} }`, will return data from epoch 10\
        \ till current max ledger tip."
      properties:
        from_ledger_state:
          $ref: '#/components/schemas/LedgerStateSelector'
      type: object
    LedgerStateSelector:
      description: |
        Optional. This allows for a request to be made against a historic state.
        If a constraint is specified, the Gateway will resolve the request against the ledger state at that time.
        If not specified, requests will be made with respect to the top of the committed ledger.
      example:
        state_version: 8008281904611
        round: 1465812980
        epoch: 6027456183
        timestamp: 2000-01-23T04:56:07.000+00:00
      nullable: true
      properties:
        state_version:
          description: "If provided, the latest ledger state lower than or equal to\
            \ the given state version is returned."
          format: int64
          maximum: 100000000000000
          minimum: 1
          nullable: true
          type: integer
        timestamp:
          description: "If provided, the latest ledger state lower than or equal to\
            \ the given round timestamp is returned."
          format: date-time
          nullable: true
          type: string
        epoch:
          description: "If provided, the ledger state lower than or equal to the given\
            \ epoch at round 0 is returned."
          format: int64
          maximum: 10000000000
          minimum: 0
          nullable: true
          type: integer
        round:
          description: "If provided must be accompanied with `epoch`, the ledger state\
            \ lower than or equal to the given epoch and round is returned."
          format: int64
          maximum: 10000000000
          minimum: 0
          nullable: true
          type: integer
      type: object
    CursorLimitMixin:
      properties:
        cursor:
          description: "This cursor allows forward pagination, by providing the cursor\
            \ from the previous request."
          nullable: true
          type: string
        limit_per_page:
          description: The page size requested.
          nullable: true
          type: integer
      type: object
    ManifestClass:
      description: |
        High-level manifest class type:
          * `General`: A general manifest that involves any amount of arbitrary components and packages where nothing more concrete can be said about the manifest and its nature.
          * `Transfer`: A manifest of a 1-to-1 transfer to a one-to-many transfer of resources.
          * `PoolContribution`: A manifest that contributed some amount of resources to a liquidity pool that can be a one-resource pool, two-resource pool, or a multi-resource pool.
          * `PoolRedemption`: A manifest that redeemed resources from a liquidity pool. Similar to contributions, this can be any of the three pool blueprints available in the pool package.
          * `ValidatorStake`: A manifest where XRD is staked to one or more validators.
          * `ValidatorUnstake`: A manifest where XRD is unstaked from one or more validators.
          * `ValidatorClaim`: A manifest where XRD is claimed from one or more validators.
          * `AccountDepositSettingsUpdate`: A manifest that updated the deposit settings of the account.
      enum:
      - General
      - Transfer
      - PoolContribution
      - PoolRedemption
      - ValidatorStake
      - ValidatorUnstake
      - ValidatorClaim
      - AccountDepositSettingsUpdate
      type: string
    ObjectModuleId:
      enum:
      - Main
      - Metadata
      - Royalty
      - RoleAssignment
      type: string
    ValidatorVaultItem:
      example:
        address: address
        balance: balance
        last_changed_at_state_version: 6
      properties:
        balance:
          description: String-encoded decimal representing the amount of a related
            fungible resource.
          type: string
        last_changed_at_state_version:
          format: int64
          type: integer
        address:
          description: Bech32m-encoded human readable version of the address.
          type: string
      required:
      - address
      - balance
      - last_changed_at_state_version
      type: object
    LedgerStateMixin:
      properties:
        ledger_state:
          $ref: '#/components/schemas/LedgerState'
      required:
      - ledger_state
      type: object
    ResultSetCursorMixin:
      properties:
        total_count:
          description: "Total number of items in underlying collection, fragment of\
            \ which is available in `items` collection."
          format: int64
          nullable: true
          type: integer
        next_cursor:
          description: "If specified, contains a cursor to query next page of the\
            \ `items` collection."
          nullable: true
          type: string
      type: object
    LedgerState:
      description: |
        The ledger state against which the response was generated.
        Can be used to detect if the Network Gateway is returning up-to-date information.
      example:
        state_version: 0
        round: 1
        proposer_round_timestamp: proposer_round_timestamp
        epoch: 6
        network: <network-name>
      properties:
        network:
          description: The logical name of the network
          example: <network-name>
          type: string
        state_version:
          description: The state version of the ledger. Each transaction increments
            the state version by 1.
          format: int64
          type: integer
        proposer_round_timestamp:
          description: |
            The proposer round timestamp of the consensus round when this transaction was committed to ledger.
            This is not guaranteed to be strictly increasing, as it is computed as an average across the validator set.
            If this is significantly behind the current timestamp, the Network Gateway is likely reporting out-dated
            information, or the network has stalled.
          type: string
        epoch:
          description: The epoch number of the ledger at this state version.
          format: int64
          type: integer
        round:
          description: The consensus round in the epoch that this state version was
            committed in.
          format: int64
          type: integer
      required:
      - epoch
      - network
      - proposer_round_timestamp
      - round
      - state_version
      type: object
    ResourceAggregationLevel:
      enum:
      - Global
      - Vault
      type: string
    ScryptoSborValue:
      example:
        raw_hex: raw_hex
        programmatic_json:
          type_name: type_name
          kind: Bool
          field_name: field_name
      properties:
        raw_hex:
          description: Hex-encoded binary blob.
          type: string
        programmatic_json:
          $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      required:
      - programmatic_json
      - raw_hex
      type: object
    AccountLockerAddress:
      properties:
        locker_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        account_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
      required:
      - account_address
      - locker_address
      type: object
    EntityMetadataCollection:
      allOf:
      - $ref: '#/components/schemas/ResultSetCursorMixin'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/EntityMetadataItem'
            type: array
        required:
        - items
        type: object
      description: Entity metadata collection.
      example:
        next_cursor: next_cursor
        total_count: 6
        items:
        - is_locked: true
          value:
            typed:
              type: String
            raw_hex: raw_hex
            programmatic_json:
              type_name: type_name
              kind: Bool
              field_name: field_name
          key: key
          last_updated_at_state_version: 14658129805030
        - is_locked: true
          value:
            typed:
              type: String
            raw_hex: raw_hex
            programmatic_json:
              type_name: type_name
              kind: Bool
              field_name: field_name
          key: key
          last_updated_at_state_version: 14658129805030
    EntityMetadataItem:
      description: Entity metadata key-value pair.
      example:
        is_locked: true
        value:
          typed:
            type: String
          raw_hex: raw_hex
          programmatic_json:
            type_name: type_name
            kind: Bool
            field_name: field_name
        key: key
        last_updated_at_state_version: 14658129805030
      properties:
        key:
          description: Entity metadata key.
          type: string
        value:
          $ref: '#/components/schemas/EntityMetadataItemValue'
        is_locked:
          type: boolean
        last_updated_at_state_version:
          description: The most recent state version underlying object was modified
            at.
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
      required:
      - is_locked
      - key
      - last_updated_at_state_version
      - value
      type: object
    EntityMetadataItemValue:
      allOf:
      - $ref: '#/components/schemas/ScryptoSborValue'
      - properties:
          typed:
            $ref: '#/components/schemas/MetadataTypedValue'
        required:
        - typed
        type: object
      example:
        typed:
          type: String
        raw_hex: raw_hex
        programmatic_json:
          type_name: type_name
          kind: Bool
          field_name: field_name
    TwoWayLinkedDappsCollection:
      description: A collection of two-way linked (resolved & verified) dApps linked
        to the entity defining this collection.
      properties:
        items:
          items:
            $ref: '#/components/schemas/TwoWayLinkedDappsCollectionItem'
          type: array
      required:
      - items
      type: object
    TwoWayLinkedDappsCollectionItem:
      properties:
        dapp_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
      required:
      - dapp_address
      type: object
    TwoWayLinkedEntitiesCollection:
      description: A collection of two-way linked (resolved & verified) entities linked
        to the entity defining this collection.
      properties:
        items:
          items:
            $ref: '#/components/schemas/TwoWayLinkedEntitiesCollectionItem'
          type: array
      required:
      - items
      type: object
    TwoWayLinkedEntitiesCollectionItem:
      properties:
        entity_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
      required:
      - entity_address
      type: object
    TwoWayLinkedDappOnLedgerDetails:
      properties:
        dapps:
          $ref: '#/components/schemas/TwoWayLinkedDappsCollection'
        entities:
          $ref: '#/components/schemas/TwoWayLinkedEntitiesCollection'
        primary_locker:
          description: Bech32m-encoded human readable version of the address.
          type: string
      type: object
    AccountLockerVaultCollection:
      allOf:
      - $ref: '#/components/schemas/ResultSetCursorMixin'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/AccountLockerVaultCollectionItem'
            type: array
        required:
        - items
        type: object
      description: Account Locker Account Resources Collection
    AccountLockerVaultCollectionItemType:
      enum:
      - Fungible
      - NonFungible
      type: string
    AccountLockerVaultCollectionItem:
      discriminator:
        mapping:
          Fungible: '#/components/schemas/AccountLockerVaultCollectionItemFungible'
          NonFungible: '#/components/schemas/AccountLockerVaultCollectionItemNonFungible'
        propertyName: type
      example:
        vault_address: vault_address
        type: Fungible
        resource_address: resource_address
        last_updated_at_state_version: 60274561830704
      properties:
        type:
          $ref: '#/components/schemas/AccountLockerVaultCollectionItemType'
        resource_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        vault_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        last_updated_at_state_version:
          description: The most recent state version underlying object was modified
            at.
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
      required:
      - last_updated_at_state_version
      - resource_address
      - type
      - vault_address
      type: object
    AccountLockerVaultCollectionItemFungible:
      allOf:
      - $ref: '#/components/schemas/AccountLockerVaultCollectionItem'
      - properties:
          amount:
            $ref: '#/components/schemas/BigDecimal'
        required:
        - amount
        type: object
    AccountLockerVaultCollectionItemNonFungible:
      allOf:
      - $ref: '#/components/schemas/AccountLockerVaultCollectionItem'
      - properties:
          total_count:
            format: int64
            type: integer
        required:
        - total_count
        type: object
    EntitySchemaCollection:
      allOf:
      - $ref: '#/components/schemas/ResultSetCursorMixin'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/EntitySchemaCollectionItem'
            type: array
        required:
        - items
        type: object
    EntitySchemaCollectionItem:
      example:
        schema_hash_hex: schema_hash_hex
        schema_hex: schema_hex
      properties:
        schema_hash_hex:
          description: Hex-encoded binary blob.
          type: string
        schema_hex:
          description: Hex-encoded binary blob.
          type: string
      required:
      - schema_hash_hex
      - schema_hex
      type: object
    PackageBlueprintCollection:
      allOf:
      - $ref: '#/components/schemas/ResultSetCursorMixin'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/PackageBlueprintCollectionItem'
            type: array
        required:
        - items
        type: object
      description: Package blueprint collection.
    PackageBlueprintCollectionItem:
      example:
        dependant_entities:
        - null
        - null
        royalty_config_is_locked: true
        name: name
        definition: "{}"
        auth_template_is_locked: true
        royalty_config:
          is_enabled: true
          method_rules:
          - royalty_amount:
              amount: amount
              unit: XRD
            method_name: method_name
          - royalty_amount:
              amount: amount
              unit: XRD
            method_name: method_name
        version: version
        auth_template: "{}"
      properties:
        name:
          type: string
        version:
          type: string
        definition:
          description: |
            This type is defined in the Core API as `BlueprintDefinition`. See the Core API documentation for more details.
          type: object
        dependant_entities:
          items:
            $ref: '#/components/schemas/Address'
          type: array
        auth_template:
          description: |
            This type is defined in the Core API as `AuthConfig`. See the Core API documentation for more details.
          type: object
        auth_template_is_locked:
          nullable: true
          type: boolean
        royalty_config:
          $ref: '#/components/schemas/BlueprintRoyaltyConfig'
        royalty_config_is_locked:
          nullable: true
          type: boolean
      required:
      - definition
      - name
      - version
      type: object
    PackageCodeCollection:
      allOf:
      - $ref: '#/components/schemas/ResultSetCursorMixin'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/PackageCodeCollectionItem'
            type: array
        required:
        - items
        type: object
      description: Package code collection.
    PackageCodeCollectionItem:
      example:
        code_hex: code_hex
        vm_type: Native
        code_hash_hex: code_hash_hex
      properties:
        vm_type:
          $ref: '#/components/schemas/PackageVmType'
        code_hash_hex:
          description: Hex-encoded binary blob.
          type: string
        code_hex:
          description: Hex-encoded binary blob.
          type: string
      required:
      - code_hash_hex
      - code_hex
      - vm_type
      type: object
    ComponentEntityRoleAssignments:
      properties:
        owner:
          description: |
            This type is defined in the Core API as `OwnerRole`. See the Core API documentation for more details.
          type: object
        entries:
          items:
            $ref: '#/components/schemas/ComponentEntityRoleAssignmentEntry'
          type: array
      required:
      - entries
      - owner
      type: object
    ComponentEntityRoleAssignmentEntry:
      properties:
        role_key:
          $ref: '#/components/schemas/RoleKey'
        assignment:
          $ref: '#/components/schemas/ComponentEntityRoleAssignmentEntry_assignment'
        updater_roles:
          items:
            $ref: '#/components/schemas/RoleKey'
          type: array
      required:
      - assignment
      - role_key
      type: object
    RoleAssignmentResolution:
      enum:
      - Explicit
      - Owner
      type: string
    RoleKey:
      properties:
        name:
          type: string
        module:
          $ref: '#/components/schemas/ObjectModuleId'
      required:
      - module
      - name
      type: object
    FungibleResourcesCollection:
      allOf:
      - $ref: '#/components/schemas/ResultSetCursorMixin'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/FungibleResourcesCollectionItem'
            type: array
        required:
        - items
        type: object
      description: Fungible resources collection.
      example:
        next_cursor: next_cursor
        total_count: 0
        items:
        - aggregation_level: Global
          explicit_metadata:
            next_cursor: next_cursor
            total_count: 6
            items:
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
          resource_address: resource_address
        - aggregation_level: Global
          explicit_metadata:
            next_cursor: next_cursor
            total_count: 6
            items:
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
          resource_address: resource_address
    FungibleResourcesCollectionItem:
      discriminator:
        mapping:
          Global: '#/components/schemas/FungibleResourcesCollectionItemGloballyAggregated'
          Vault: '#/components/schemas/FungibleResourcesCollectionItemVaultAggregated'
        propertyName: aggregation_level
      example:
        aggregation_level: Global
        explicit_metadata:
          next_cursor: next_cursor
          total_count: 6
          items:
          - is_locked: true
            value:
              typed:
                type: String
              raw_hex: raw_hex
              programmatic_json:
                type_name: type_name
                kind: Bool
                field_name: field_name
            key: key
            last_updated_at_state_version: 14658129805030
          - is_locked: true
            value:
              typed:
                type: String
              raw_hex: raw_hex
              programmatic_json:
                type_name: type_name
                kind: Bool
                field_name: field_name
            key: key
            last_updated_at_state_version: 14658129805030
        resource_address: resource_address
      properties:
        aggregation_level:
          $ref: '#/components/schemas/ResourceAggregationLevel'
        resource_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        explicit_metadata:
          $ref: '#/components/schemas/EntityMetadataCollection'
      required:
      - aggregation_level
      - resource_address
      type: object
    FungibleResourcesCollectionItemGloballyAggregated:
      allOf:
      - $ref: '#/components/schemas/FungibleResourcesCollectionItem'
      - properties:
          amount:
            $ref: '#/components/schemas/BigDecimal'
          last_updated_at_state_version:
            $ref: '#/components/schemas/LastUpdatedAtStateVersion'
        required:
        - amount
        - last_updated_at_state_version
        type: object
    FungibleResourcesCollectionItemVaultAggregated:
      allOf:
      - $ref: '#/components/schemas/FungibleResourcesCollectionItem'
      - properties:
          vaults:
            $ref: '#/components/schemas/FungibleResourcesCollectionItemVaultAggregatedVault'
        required:
        - vaults
        type: object
    FungibleResourcesCollectionItemVaultAggregatedVault:
      allOf:
      - $ref: '#/components/schemas/ResultSetCursorMixin'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/FungibleResourcesCollectionItemVaultAggregatedVaultItem'
            type: array
        required:
        - items
        type: object
    FungibleResourcesCollectionItemVaultAggregatedVaultItem:
      example:
        amount: amount
        vault_address: vault_address
        last_updated_at_state_version: 60274561830704
      properties:
        vault_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        amount:
          description: String-encoded decimal representing the amount of a related
            fungible resource.
          type: string
        last_updated_at_state_version:
          description: The most recent state version underlying object was modified
            at.
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
      required:
      - amount
      - last_updated_at_state_version
      - vault_address
      type: object
    NonFungibleResourcesCollection:
      allOf:
      - $ref: '#/components/schemas/ResultSetCursorMixin'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/NonFungibleResourcesCollectionItem'
            type: array
        required:
        - items
        type: object
      description: Non-fungible resources collection.
      example:
        next_cursor: next_cursor
        total_count: 5
        items:
        - aggregation_level: null
          explicit_metadata:
            next_cursor: next_cursor
            total_count: 6
            items:
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
          resource_address: resource_address
        - aggregation_level: null
          explicit_metadata:
            next_cursor: next_cursor
            total_count: 6
            items:
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
          resource_address: resource_address
    NonFungibleResourcesCollectionItem:
      discriminator:
        mapping:
          Global: '#/components/schemas/NonFungibleResourcesCollectionItemGloballyAggregated'
          Vault: '#/components/schemas/NonFungibleResourcesCollectionItemVaultAggregated'
        propertyName: aggregation_level
      example:
        aggregation_level: null
        explicit_metadata:
          next_cursor: next_cursor
          total_count: 6
          items:
          - is_locked: true
            value:
              typed:
                type: String
              raw_hex: raw_hex
              programmatic_json:
                type_name: type_name
                kind: Bool
                field_name: field_name
            key: key
            last_updated_at_state_version: 14658129805030
          - is_locked: true
            value:
              typed:
                type: String
              raw_hex: raw_hex
              programmatic_json:
                type_name: type_name
                kind: Bool
                field_name: field_name
            key: key
            last_updated_at_state_version: 14658129805030
        resource_address: resource_address
      properties:
        aggregation_level:
          $ref: '#/components/schemas/ResourceAggregationLevel'
        resource_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        explicit_metadata:
          $ref: '#/components/schemas/EntityMetadataCollection'
      required:
      - aggregation_level
      - resource_address
      type: object
    NonFungibleResourcesCollectionItemGloballyAggregated:
      allOf:
      - $ref: '#/components/schemas/NonFungibleResourcesCollectionItem'
      - properties:
          amount:
            description: The total amount of non-fungible IDs across all vaults.
            format: int64
            type: integer
          last_updated_at_state_version:
            $ref: '#/components/schemas/LastUpdatedAtStateVersion'
        required:
        - amount
        - last_updated_at_state_version
        type: object
    NonFungibleResourcesCollectionItemVaultAggregated:
      allOf:
      - $ref: '#/components/schemas/NonFungibleResourcesCollectionItem'
      - properties:
          vaults:
            $ref: '#/components/schemas/NonFungibleResourcesCollectionItemVaultAggregatedVault'
        required:
        - vaults
        type: object
    NonFungibleResourcesCollectionItemVaultAggregatedVault:
      allOf:
      - $ref: '#/components/schemas/ResultSetCursorMixin'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/NonFungibleResourcesCollectionItemVaultAggregatedVaultItem'
            type: array
        required:
        - items
        type: object
    NonFungibleResourcesCollectionItemVaultAggregatedVaultItem:
      allOf:
      - $ref: '#/components/schemas/OptionalNonFungibleIdsCollection'
      - properties:
          vault_address:
            $ref: '#/components/schemas/Address'
          total_count:
            format: int64
            type: integer
          last_updated_at_state_version:
            $ref: '#/components/schemas/LastUpdatedAtStateVersion'
        required:
        - last_updated_at_state_version
        - total_count
        - vault_address
        type: object
      example:
        next_cursor: next_cursor
        total_count: 1
        vault_address: null
        items:
        - null
        - null
        last_updated_at_state_version: null
    OptionalNonFungibleIdsCollection:
      allOf:
      - $ref: '#/components/schemas/ResultSetCursorMixin'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/NonFungibleId'
            type: array
        type: object
      description: Non-fungible resource IDs collection.
    AccountResourcePreferencesCollection:
      allOf:
      - $ref: '#/components/schemas/ResultSetCursorMixin'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/AccountResourcePreferencesResponseItem'
            type: array
        required:
        - items
        type: object
      description: Account resource preferences collection
    AccountResourcePreferenceRule:
      enum:
      - Allowed
      - Disallowed
      type: string
    AccountResourcePreferencesResponseItem:
      example:
        resource_preference_rule: Allowed
        resource_address: resource_address
        last_updated_at_state_version: 60274561830704
      properties:
        resource_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        resource_preference_rule:
          $ref: '#/components/schemas/AccountResourcePreferenceRule'
        last_updated_at_state_version:
          description: The most recent state version underlying object was modified
            at.
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
      required:
      - last_updated_at_state_version
      - resource_address
      - resource_preference_rule
      type: object
    AccountAuthorizedDepositorsCollection:
      allOf:
      - $ref: '#/components/schemas/ResultSetCursorMixin'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/AccountAuthorizedDepositorsResponseItem'
            type: array
        required:
        - items
        type: object
      description: Account resource preferences collection
    AccountAuthorizedDepositorBadgeType:
      enum:
      - ResourceBadge
      - NonFungibleBadge
      type: string
    AccountDefaultDepositRule:
      description: Default deposit rule set to an account.
      enum:
      - Accept
      - Reject
      - AllowExisting
      type: string
    AccountDepositPreValidationDecidingFactors:
      description: Deciding factors used to calculate response.
      example:
        resource_specific_details:
        - resource_preference_rule: Allowed
          is_xrd: true
          resource_address: resource_address
          vault_exists: true
        - resource_preference_rule: Allowed
          is_xrd: true
          resource_address: resource_address
          vault_exists: true
        is_badge_authorized_depositor: true
        default_deposit_rule: Accept
      properties:
        is_badge_authorized_depositor:
          description: Whether the input badge belongs to the account's set of authorized
            depositors. This field will only be present if any badge was passed in
            the request.
          nullable: true
          type: boolean
        default_deposit_rule:
          $ref: '#/components/schemas/AccountDefaultDepositRule'
        resource_specific_details:
          description: "Returns deciding factors for each resource. Contains only\
            \ information about resources presented in the request, not all resource\
            \ preference rules for queried account."
          items:
            $ref: '#/components/schemas/AccountDepositPreValidationDecidingFactorsResourceSpecificDetailsItem'
          type: array
      required:
      - default_deposit_rule
      type: object
    AccountDepositPreValidationDecidingFactorsResourceSpecificDetailsItem:
      example:
        resource_preference_rule: Allowed
        is_xrd: true
        resource_address: resource_address
        vault_exists: true
      properties:
        resource_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        vault_exists:
          type: boolean
        is_xrd:
          type: boolean
        resource_preference_rule:
          $ref: '#/components/schemas/AccountResourcePreferenceRule'
      required:
      - is_xrd
      - resource_address
      - vault_exists
      type: object
    AccountDepositPreValidationResourceSpecificBehaviourItem:
      example:
        allows_try_deposit: true
        resource_address: resource_address
      properties:
        resource_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        allows_try_deposit:
          type: boolean
      required:
      - allows_try_deposit
      - resource_address
      type: object
    TransactionAccountDepositPreValidationAuthorizedDepositorBadge:
      discriminator:
        mapping:
          ResourceBadge: '#/components/schemas/AccountDepositPreValidationResourceBadge'
          NonFungibleBadge: '#/components/schemas/AccountDepositPreValidationNonFungibleBadge'
        propertyName: badge_type
      example:
        badge_type: ResourceBadge
        resource_address: resource_address
      properties:
        badge_type:
          $ref: '#/components/schemas/AccountAuthorizedDepositorBadgeType'
        resource_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
      required:
      - badge_type
      - resource_address
      type: object
    AccountDepositPreValidationResourceBadge:
      allOf:
      - $ref: '#/components/schemas/TransactionAccountDepositPreValidationAuthorizedDepositorBadge'
      - type: object
    AccountDepositPreValidationNonFungibleBadge:
      allOf:
      - $ref: '#/components/schemas/TransactionAccountDepositPreValidationAuthorizedDepositorBadge'
      - properties:
          non_fungible_id:
            $ref: '#/components/schemas/NonFungibleId'
        required:
        - non_fungible_id
        type: object
    AccountAuthorizedDepositorsResponseItem:
      discriminator:
        mapping:
          ResourceBadge: '#/components/schemas/AccountAuthorizedDepositorsResourceBadge'
          NonFungibleBadge: '#/components/schemas/AccountAuthorizedDepositorsNonFungibleBadge'
        propertyName: badge_type
      example:
        badge_type: ResourceBadge
      properties:
        badge_type:
          $ref: '#/components/schemas/AccountAuthorizedDepositorBadgeType'
      required:
      - badge_type
      type: object
    AccountAuthorizedDepositorsResourceBadge:
      allOf:
      - $ref: '#/components/schemas/AccountAuthorizedDepositorsResponseItem'
      - properties:
          resource_address:
            $ref: '#/components/schemas/Address'
          last_updated_at_state_version:
            $ref: '#/components/schemas/LastUpdatedAtStateVersion'
        required:
        - last_updated_at_state_version
        - resource_address
        type: object
    AccountAuthorizedDepositorsNonFungibleBadge:
      allOf:
      - $ref: '#/components/schemas/AccountAuthorizedDepositorsResponseItem'
      - properties:
          resource_address:
            $ref: '#/components/schemas/Address'
          non_fungible_id:
            $ref: '#/components/schemas/NonFungibleId'
          last_updated_at_state_version:
            $ref: '#/components/schemas/LastUpdatedAtStateVersion'
        required:
        - last_updated_at_state_version
        - non_fungible_id
        - resource_address
        type: object
    NonFungibleIdsCollection:
      allOf:
      - $ref: '#/components/schemas/ResultSetCursorMixin'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/NonFungibleId'
            type: array
        required:
        - items
        type: object
      description: Non-fungible resource IDs collection.
      example:
        next_cursor: next_cursor
        total_count: 0
        items:
        - null
        - null
    CommittedTransactionInfo:
      example:
        error_message: error_message
        transaction_status: Unknown
        raw_hex: raw_hex
        state_version: 0
        affected_global_entities:
        - null
        - null
        balance_changes:
          fungible_balance_changes:
          - entity_address: entity_address
            balance_change: balance_change
            resource_address: resource_address
          - entity_address: entity_address
            balance_change: balance_change
            resource_address: resource_address
          fungible_fee_balance_changes:
          - entity_address: entity_address
            balance_change: balance_change
            type: FeePayment
            resource_address: resource_address
          - entity_address: entity_address
            balance_change: balance_change
            type: FeePayment
            resource_address: resource_address
          non_fungible_balance_changes:
          - removed:
            - null
            - null
            added:
            - null
            - null
            entity_address: entity_address
            resource_address: resource_address
          - removed:
            - null
            - null
            added:
            - null
            - null
            entity_address: entity_address
            resource_address: resource_address
        child_subintent_hashes:
        - null
        - null
        epoch: 6
        manifest_classes:
        - General
        - General
        message: "{}"
        fee_paid: fee_paid
        subintent_details:
        - subintent_hash: subintent_hash
          manifest_instructions: manifest_instructions
          child_subintent_hashes:
          - null
          - null
          message: "{}"
        - subintent_hash: subintent_hash
          manifest_instructions: manifest_instructions
          child_subintent_hashes:
          - null
          - null
          message: "{}"
        intent_hash: intent_hash
        round_timestamp: round_timestamp
        round: 1
        manifest_instructions: manifest_instructions
        receipt:
          output: "{}"
          error_message: error_message
          fee_summary: "{}"
          next_epoch: "{}"
          fee_destination: "{}"
          costing_parameters: "{}"
          state_updates: "{}"
          fee_source: "{}"
          events:
          - data:
              type_name: type_name
              kind: Bool
              field_name: field_name
            name: name
            emitter: "{}"
          - data:
              type_name: type_name
              kind: Bool
              field_name: field_name
            name: name
            emitter: "{}"
          status: null
        payload_hash: payload_hash
        confirmed_at: 2000-01-23T04:56:07.000+00:00
      properties:
        state_version:
          format: int64
          type: integer
        epoch:
          format: int64
          type: integer
        round:
          format: int64
          type: integer
        round_timestamp:
          type: string
        transaction_status:
          $ref: '#/components/schemas/TransactionStatus'
        payload_hash:
          description: Bech32m-encoded hash.
          type: string
        intent_hash:
          description: Bech32m-encoded hash.
          type: string
        fee_paid:
          description: String-encoded decimal representing the amount of a related
            fungible resource.
          type: string
        affected_global_entities:
          items:
            $ref: '#/components/schemas/Address'
          type: array
        confirmed_at:
          format: date-time
          nullable: true
          type: string
        error_message:
          nullable: true
          type: string
        raw_hex:
          description: Hex-encoded binary blob.
          type: string
        receipt:
          $ref: '#/components/schemas/TransactionReceipt'
        manifest_instructions:
          description: |
            A text-representation of a transaction manifest.
            This field will be present only for user transactions and when explicitly opted-in using the `manifest_instructions` flag.
          type: string
        manifest_classes:
          description: |
            A collection of zero or more manifest classes ordered from the most specific class to the least specific one.
            This field will be present only for user transactions.
            For user transactions with subintents only the root transaction intent is currently used to determine the manifest classes.
          items:
            $ref: '#/components/schemas/ManifestClass'
          type: array
        message:
          description: |
            The optional transaction message.
            This type is defined in the Core API as `TransactionMessage`. See the Core API documentation for more details.
          type: object
        balance_changes:
          $ref: '#/components/schemas/TransactionBalanceChanges'
        subintent_details:
          description: |
            Subintent details.
            Please note that it is returned regardless of whether the transaction was committed successfully or failed, and it can be returned in multiple transactions.
          items:
            $ref: '#/components/schemas/TransactionSubintentDetails'
          type: array
        child_subintent_hashes:
          description: |
            The child subintent hashes of the root transaction intent.
            Please note that it is returned regardless of whether the transaction was committed successfully or failed, and it can be returned in multiple transactions.
          items:
            $ref: '#/components/schemas/HashBech32mString'
          type: array
      required:
      - epoch
      - round
      - round_timestamp
      - state_version
      - transaction_status
      type: object
    TransactionStatus:
      description: |
        A top-level intent status, left in for backwards compatibility.
        It doesn't give much information. Rejected means PermanentRejection.
      enum:
      - Unknown
      - CommittedSuccess
      - CommittedFailure
      - Pending
      - Rejected
      type: string
    SubintentStatus:
      description: |
        The finalization status of this subintent. Each subintent can only be *successfully* committed once,
        but unlike a transaction intent, could be committed as a failure zero or more times first.
      enum:
      - Unknown
      - CommittedSuccess
      type: string
    TransactionIntentStatus:
      description: |
        A more specific intent status. See the description field for further information.
        Note that `CommitPendingOutcomeUnknown` can either result in `CommittedSuccess` or `CommittedFailure`.
      enum:
      - Unknown
      - CommittedSuccess
      - CommittedFailure
      - CommitPendingOutcomeUnknown
      - PermanentlyRejected
      - LikelyButNotCertainRejection
      - Pending
      type: string
    TransactionPayloadStatus:
      description: |
        A more specific payload status. See the description field for further information.
      enum:
      - Unknown
      - CommittedSuccess
      - CommittedFailure
      - CommitPendingOutcomeUnknown
      - PermanentlyRejected
      - TemporarilyRejected
      - Pending
      type: string
    TransactionPayloadGatewayHandlingStatus:
      description: |
        A status concerning the Gateway's handling status of this pending transaction.
      enum:
      - HandlingSubmission
      - Concluded
      type: string
    TransactionReceipt:
      example:
        output: "{}"
        error_message: error_message
        fee_summary: "{}"
        next_epoch: "{}"
        fee_destination: "{}"
        costing_parameters: "{}"
        state_updates: "{}"
        fee_source: "{}"
        events:
        - data:
            type_name: type_name
            kind: Bool
            field_name: field_name
          name: name
          emitter: "{}"
        - data:
            type_name: type_name
            kind: Bool
            field_name: field_name
          name: name
          emitter: "{}"
        status: null
      properties:
        status:
          $ref: '#/components/schemas/TransactionStatus'
        fee_summary:
          description: |
            This type is defined in the Core API as `FeeSummary`. See the Core API documentation for more details.
          type: object
        costing_parameters:
          type: object
        fee_destination:
          description: |
            This type is defined in the Core API as `FeeDestination`. See the Core API documentation for more details.
          type: object
        fee_source:
          description: |
            This type is defined in the Core API as `FeeSource`. See the Core API documentation for more details.
          type: object
        state_updates:
          description: |
            This type is defined in the Core API as `StateUpdates`. See the Core API documentation for more details.
          type: object
        next_epoch:
          description: |
            Information (number and active validator list) about new epoch if occured.
            This type is defined in the Core API as `NextEpoch`. See the Core API documentation for more details.
          type: object
        output:
          description: |
            The manifest line-by-line engine return data (only present if `status` is `CommittedSuccess`).
            This type is defined in the Core API as `SborData`. See the Core API documentation for more details.
          type: object
        events:
          description: Events emitted by a transaction.
          items:
            $ref: '#/components/schemas/EventsItem'
          type: array
        error_message:
          description: Error message (only present if status is `Failed` or `Rejected`)
          nullable: true
          type: string
      type: object
    EventsItem:
      example:
        data:
          type_name: type_name
          kind: Bool
          field_name: field_name
        name: name
        emitter: "{}"
      properties:
        name:
          type: string
        emitter:
          description: |
            This type is defined in the Core API as `EventEmitterIdentifier`. See the Core API documentation for more details.
          type: object
        data:
          $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      required:
      - data
      - emitter
      - name
      type: object
    NonFungibleIdType:
      enum:
      - String
      - Integer
      - Bytes
      - Ruid
      type: string
    PackageVmType:
      enum:
      - Native
      - ScryptoV1
      type: string
    ValidatorUptimeCollection:
      example:
        items:
        - epochs_active_in: 1
          address: address
          proposals_missed: 6
          proposals_made: 0
        - epochs_active_in: 1
          address: address
          proposals_missed: 6
          proposals_made: 0
      properties:
        items:
          items:
            $ref: '#/components/schemas/ValidatorUptimeCollectionItem'
          type: array
      required:
      - items
      type: object
    ValidatorUptimeCollectionItem:
      example:
        epochs_active_in: 1
        address: address
        proposals_missed: 6
        proposals_made: 0
      properties:
        address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        proposals_made:
          description: number of proposals made.
          format: int64
          nullable: true
          type: integer
        proposals_missed:
          description: number of proposals missed.
          format: int64
          nullable: true
          type: integer
        epochs_active_in:
          description: number of epochs validator was active in.
          format: int64
          type: integer
      required:
      - address
      - epochs_active_in
      type: object
    ResourceHoldersCollection:
      allOf:
      - $ref: '#/components/schemas/ResultSetCursorMixin'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ResourceHoldersCollectionItem'
            type: array
        required:
        - items
        type: object
    ResourceHoldersResourceType:
      enum:
      - FungibleResource
      - NonFungibleResource
      type: string
    ResourceHoldersCollectionItem:
      discriminator:
        mapping:
          FungibleResource: '#/components/schemas/ResourceHoldersCollectionFungibleResourceItem'
          NonFungibleResource: '#/components/schemas/ResourceHoldersCollectionNonFungibleResourceItem'
        propertyName: type
      example:
        holder_address: holder_address
        type: FungibleResource
        last_updated_at_state_version: 6
      properties:
        type:
          $ref: '#/components/schemas/ResourceHoldersResourceType'
        holder_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        last_updated_at_state_version:
          format: int64
          type: integer
      required:
      - holder_address
      - last_updated_at_state_version
      - type
      type: object
    ResourceHoldersCollectionFungibleResourceItem:
      allOf:
      - $ref: '#/components/schemas/ResourceHoldersCollectionItem'
      - properties:
          amount:
            $ref: '#/components/schemas/BigDecimal'
        required:
        - amount
        type: object
    ResourceHoldersCollectionNonFungibleResourceItem:
      allOf:
      - $ref: '#/components/schemas/ResourceHoldersCollectionItem'
      - properties:
          non_fungible_ids_count:
            format: int64
            type: integer
        required:
        - non_fungible_ids_count
        type: object
    ValidatorCollection:
      allOf:
      - $ref: '#/components/schemas/ResultSetCursorMixin'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ValidatorCollectionItem'
            type: array
        required:
        - items
        type: object
      example:
        next_cursor: next_cursor
        total_count: 0
        items:
        - stake_vault:
            address: address
            balance: balance
            last_changed_at_state_version: 6
          metadata:
            next_cursor: next_cursor
            total_count: 6
            items:
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
          address: address
          pending_xrd_withdraw_vault:
            address: address
            balance: balance
            last_changed_at_state_version: 6
          effective_fee_factor:
            current:
              fee_factor: fee_factor
            pending:
              fee_factor: fee_factor
              effective_at_epoch: 5962133916
          pending_owner_stake_unit_unlock_vault:
            address: address
            balance: balance
            last_changed_at_state_version: 6
          locked_owner_stake_unit_vault:
            address: address
            balance: balance
            last_changed_at_state_version: 6
          state: "{}"
          active_in_epoch:
            stake: stake
            stake_percentage: 1.4658129805029452
            key:
              key_type: EcdsaSecp256k1
        - stake_vault:
            address: address
            balance: balance
            last_changed_at_state_version: 6
          metadata:
            next_cursor: next_cursor
            total_count: 6
            items:
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
          address: address
          pending_xrd_withdraw_vault:
            address: address
            balance: balance
            last_changed_at_state_version: 6
          effective_fee_factor:
            current:
              fee_factor: fee_factor
            pending:
              fee_factor: fee_factor
              effective_at_epoch: 5962133916
          pending_owner_stake_unit_unlock_vault:
            address: address
            balance: balance
            last_changed_at_state_version: 6
          locked_owner_stake_unit_vault:
            address: address
            balance: balance
            last_changed_at_state_version: 6
          state: "{}"
          active_in_epoch:
            stake: stake
            stake_percentage: 1.4658129805029452
            key:
              key_type: EcdsaSecp256k1
    ValidatorCollectionItem:
      example:
        stake_vault:
          address: address
          balance: balance
          last_changed_at_state_version: 6
        metadata:
          next_cursor: next_cursor
          total_count: 6
          items:
          - is_locked: true
            value:
              typed:
                type: String
              raw_hex: raw_hex
              programmatic_json:
                type_name: type_name
                kind: Bool
                field_name: field_name
            key: key
            last_updated_at_state_version: 14658129805030
          - is_locked: true
            value:
              typed:
                type: String
              raw_hex: raw_hex
              programmatic_json:
                type_name: type_name
                kind: Bool
                field_name: field_name
            key: key
            last_updated_at_state_version: 14658129805030
        address: address
        pending_xrd_withdraw_vault:
          address: address
          balance: balance
          last_changed_at_state_version: 6
        effective_fee_factor:
          current:
            fee_factor: fee_factor
          pending:
            fee_factor: fee_factor
            effective_at_epoch: 5962133916
        pending_owner_stake_unit_unlock_vault:
          address: address
          balance: balance
          last_changed_at_state_version: 6
        locked_owner_stake_unit_vault:
          address: address
          balance: balance
          last_changed_at_state_version: 6
        state: "{}"
        active_in_epoch:
          stake: stake
          stake_percentage: 1.4658129805029452
          key:
            key_type: EcdsaSecp256k1
      properties:
        address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        stake_vault:
          $ref: '#/components/schemas/ValidatorVaultItem'
        pending_xrd_withdraw_vault:
          $ref: '#/components/schemas/ValidatorVaultItem'
        locked_owner_stake_unit_vault:
          $ref: '#/components/schemas/ValidatorVaultItem'
        pending_owner_stake_unit_unlock_vault:
          $ref: '#/components/schemas/ValidatorVaultItem'
        state:
          description: |
            Validator inner state representation.
            This type is defined in the Core API as `ValidatorFieldStateValue`. See the Core API documentation for more details.
          nullable: true
          type: object
        active_in_epoch:
          $ref: '#/components/schemas/ValidatorCollectionItemActiveInEpoch'
        metadata:
          $ref: '#/components/schemas/EntityMetadataCollection'
        effective_fee_factor:
          $ref: '#/components/schemas/ValidatorCollectionItem_effective_fee_factor'
      required:
      - address
      - effective_fee_factor
      - locked_owner_stake_unit_vault
      - metadata
      - pending_owner_stake_unit_unlock_vault
      - pending_xrd_withdraw_vault
      - stake_vault
      - state
      type: object
    ValidatorCollectionItemActiveInEpoch:
      example:
        stake: stake
        stake_percentage: 1.4658129805029452
        key:
          key_type: EcdsaSecp256k1
      properties:
        stake:
          description: String-encoded decimal representing the amount of a related
            fungible resource.
          type: string
        stake_percentage:
          format: double
          type: number
        key:
          $ref: '#/components/schemas/PublicKey'
      required:
      - key
      - stake
      - stake_percentage
      type: object
    NetworkConfigurationResponse:
      example:
        well_known_addresses:
          secp256k1_signature_virtual_badge: secp256k1_signature_virtual_badge
          account_owner_badge: account_owner_badge
          locker_package: locker_package
          access_controller_package: access_controller_package
          resource_package: resource_package
          package_package: package_package
          account_package: account_package
          system_transaction_badge: system_transaction_badge
          global_caller_virtual_badge: global_caller_virtual_badge
          access_rules_package: access_rules_package
          metadata_module_package: metadata_module_package
          role_assignment_module_package: role_assignment_module_package
          transaction_processor_package: transaction_processor_package
          transaction_tracker: transaction_tracker
          faucet: faucet
          ed25519_signature_virtual_badge: ed25519_signature_virtual_badge
          package_owner_badge: package_owner_badge
          consensus_manager: consensus_manager
          consensus_manager_package: consensus_manager_package
          genesis_helper_package: genesis_helper_package
          faucet_package: faucet_package
          xrd: xrd
          validator_owner_badge: validator_owner_badge
          transaction_tracker_package: transaction_tracker_package
          royalty_module_package: royalty_module_package
          pool_package: pool_package
          identity_package: identity_package
          package_of_direct_caller_virtual_badge: package_of_direct_caller_virtual_badge
          test_utils_package: test_utils_package
          genesis_helper: genesis_helper
          identity_owner_badge: identity_owner_badge
        network_id: 20
        network_name: <network-name>
      properties:
        network_id:
          description: The logical id of the network
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        network_name:
          description: The logical name of the network
          example: <network-name>
          type: string
        well_known_addresses:
          $ref: '#/components/schemas/NetworkConfigurationResponse_well_known_addresses'
      required:
      - network_id
      - network_name
      - well_known_addresses
      type: object
    GatewayStatusResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - properties:
          release_info:
            $ref: '#/components/schemas/GatewayInfoResponseReleaseInfo'
        required:
        - release_info
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        release_info:
          open_api_schema_version: open_api_schema_version
          image_tag: image_tag
          release_version: release_version
    GatewayInfoResponseKnownTarget:
      properties:
        state_version:
          description: |
            The latest-seen state version of the tip of the network's ledger. If this is significantly ahead of the current ledger state version, the Network Gateway is possibly behind and may be reporting outdated information.
          format: int64
          type: integer
      required:
      - state_version
      type: object
    GatewayInfoResponseReleaseInfo:
      example:
        open_api_schema_version: open_api_schema_version
        image_tag: image_tag
        release_version: release_version
      properties:
        release_version:
          description: The release that is currently deployed to the Gateway API.
          type: string
        open_api_schema_version:
          description: The Open API Schema version that was used to generate the API
            models.
          type: string
        image_tag:
          description: Image tag that is currently deployed to the Gateway API.
          type: string
      required:
      - image_tag
      - open_api_schema_version
      - release_version
      type: object
    TransactionConstructionResponse:
      allOf:
      - type: object
      - $ref: '#/components/schemas/LedgerStateMixin'
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
    TransactionPreviewRequest:
      example:
        opt_ins:
          radix_engine_toolkit_receipt: false
        blobs_hex:
        - blobs_hex
        - blobs_hex
        end_epoch_exclusive: 6027456183
        manifest: manifest
        start_epoch_inclusive: 800828190
        signer_public_keys:
        - key_type: EcdsaSecp256k1
        - key_type: EcdsaSecp256k1
        flags:
          use_free_credit: false
          assume_all_signature_proofs: false
          skip_epoch_check: false
          disable_auth_checks: false
        notary_public_key:
          key_type: EcdsaSecp256k1
        message: "{}"
        nonce: 0
        notary_is_signatory: true
        tip_percentage: 9606
      properties:
        opt_ins:
          $ref: '#/components/schemas/TransactionPreviewOptIns'
        manifest:
          description: A text-representation of a transaction manifest
          type: string
        blobs_hex:
          description: "An array of hex-encoded blob data, if referenced by the manifest."
          items:
            type: string
          type: array
        start_epoch_inclusive:
          description: |
            An integer between `0` and `10^10`, marking the epoch at which the transaction startsbeing valid.
            If omitted, the current epoch will be used.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        end_epoch_exclusive:
          description: |
            An integer between `0` and `10^10`, marking the epoch at which the transaction is no
            longer valid. If omitted, a maximum epoch (relative to the `start_epoch_inclusive`) will be used.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        notary_public_key:
          $ref: '#/components/schemas/PublicKey'
        notary_is_signatory:
          description: |
            Whether the notary should be used as a signer (optional).
            If not provided, this defaults to false.
          type: boolean
        tip_percentage:
          description: |
            An integer between `0` and `65535`, giving the validator tip as a percentage amount.
            A value of `1` corresponds to a 1% fee.
            If not provided, this defaults to 0.
          format: int32
          maximum: 65535
          minimum: 0
          type: integer
        nonce:
          description: |
            An integer between `0` and `2^32 - 1`, chosen to allow a unique intent to be created
            (to enable submitting an otherwise identical/duplicate intent).
            If not provided, this defaults to 0.
          format: int64
          minimum: 0
          type: integer
        signer_public_keys:
          description: |
            A list of public keys to be used as transaction signers.
            If not provided, this defaults to an empty array.
          items:
            $ref: '#/components/schemas/PublicKey'
          type: array
        message:
          description: |
            An optional transaction message. Only affects the costing.
            This type is defined in the Core API as `TransactionMessage`. See the Core API documentation for more details.
          type: object
        flags:
          $ref: '#/components/schemas/PreviewFlags'
      required:
      - manifest
      type: object
    PreviewFlags:
      example:
        use_free_credit: false
        assume_all_signature_proofs: false
        skip_epoch_check: false
        disable_auth_checks: false
      properties:
        use_free_credit:
          default: false
          description: |
            If enabled, a large simulated pool of XRD is marked as locked.

            This mode can be used to estimate fees. To get a reliable estimate, we recommend that your
            transaction is as close as possible to the real transaction. For example:
            - You should still use a lock fee command, but you can set it to lock a fee of 0.
            - You should include the public keys that will sign the transaction, so the cost of
              signature verification and payload size can be accounted for.
          type: boolean
        assume_all_signature_proofs:
          default: false
          description: |
            If enabled, each manifest processor's auth zone will be given a simulated proof of
            every signature, which can be used to pass signature access rules.

            This can be used to preview transactions even if the required signatures are not
            known ahead of time.

            See the documentation on
            [advanced access rules](https://docs.radixdlt.com/docs/advanced-accessrules#signature-requirements)
            for more information.
          type: boolean
        skip_epoch_check:
          default: false
          description: |
            If enabled, the various runtime epoch-related verifications are skipped:
            - The `start_epoch_inclusive` and `end_epoch_exclusive` parameters, if specified, are ignored.
            - The duplicate intent checks (which rely on the expiry epoch) are also ignored.

            However, if the start and end epoch are provided, they must still be statically valid.
            We recommend using a value of `start_epoch_inclusive = 1` and `end_epoch_exclusive = 2` in this
            case.
          type: boolean
        disable_auth_checks:
          default: false
          description: |
            If enabled, all authorization checks are skipped during execution.

            This could be used to e.g.:
            * Preview protocol update style transactions.
            * Mint resources for previewing trades with resources you don't own.
              If doing this, be warned: only resources which were potentially mintable/burnable
              at creation time will be mintable/burnable, due to feature flags on the resource.

            Warning: this mode of operation is quite a departure from normal operation:
            * Calculated fees will likely be lower than a standard execution.
            * This mode can subtly break invariants some dApp code might rely on, or result in unexpected
              behaviour, so the execution result might not be valid for your needs. For example,
              if this flag was used to mint pool units to preview a redemption (or some dApp interaction which
              behind the scenes redeemed them), they'd redeem for less than they're currently worth,
              because the blueprint code relies on the total supply of the pool units to calculate their
              redemption worth, and you've just inflated the total supply through the mint operation.
          type: boolean
      type: object
    TransactionPreviewOptIns:
      description: A set of flags to configure the response of the transaction preview.
      example:
        radix_engine_toolkit_receipt: false
      properties:
        radix_engine_toolkit_receipt:
          default: false
          description: |
            This flag controls whether the preview response will include a Radix Engine Toolkit serializable
            receipt or not. If not provided, this defaults to `false` and no toolkit receipt is provided in
            the response.
          type: boolean
      type: object
    TransactionPreviewResponse:
      example:
        resource_changes:
        - "{}"
        - "{}"
        radix_engine_toolkit_receipt: "{}"
        receipt: "{}"
        encoded_receipt: encoded_receipt
        logs:
        - level: level
          message: message
        - level: level
          message: message
      properties:
        encoded_receipt:
          description: Hex-encoded binary blob.
          type: string
        radix_engine_toolkit_receipt:
          description: |
            An optional field which is only provided if the `radix_engine_toolkit_receipt`
            flag is set to true when requesting a transaction preview from the API.

            This receipt is primarily intended for use with the toolkit and may contain information
            that is already available in the receipt provided in the `receipt` field of this response.

            A typical client of this API is not expected to use this receipt. The primary clients
            this receipt is intended for is the Radix wallet or any client that needs to perform
            execution summaries on their transactions.
          type: object
        receipt:
          description: |
            This type is defined in the Core API as `TransactionReceipt`. See the Core API documentation for more details.
          type: object
        resource_changes:
          items:
            description: |
              This type is defined in the Core API as `InstructionResourceChanges`. See the Core API documentation for more details.
            type: object
          type: array
        logs:
          items:
            $ref: '#/components/schemas/TransactionPreviewResponse_logs_inner'
          type: array
      required:
      - encoded_receipt
      - logs
      - receipt
      - resource_changes
      type: object
    TransactionPreviewV2Request:
      example:
        preview_transaction:
          type: Compiled
          preview_transaction_hex: <sample-preview-transaction-hex>
        flags:
          use_free_credit: true
          assume_all_signature_proofs: true
          skip_epoch_check: true
          disable_auth_checks: true
        opt_ins:
          core_api_receipt: true
          radix_engine_toolkit_receipt: true
          logs: true
      properties:
        preview_transaction:
          $ref: '#/components/schemas/PreviewTransaction'
        flags:
          $ref: '#/components/schemas/PreviewFlags'
        opt_ins:
          $ref: '#/components/schemas/TransactionPreviewV2OptIns'
      required:
      - preview_transaction
      type: object
    TransactionPreviewV2OptIns:
      description: A set of flags to configure the response of the transaction preview
        v2 endpoint.
      properties:
        core_api_receipt:
          default: false
          description: |
            This flag controls whether the preview response will include a Core API receipt or not.
            If not provided, this defaults to `false` and no core api receipt is provided in
            the response.
          type: boolean
        radix_engine_toolkit_receipt:
          default: false
          description: |
            This flag controls whether the preview response will include a Radix Engine Toolkit serializable
            receipt or not. If not provided, this defaults to `false` and no toolkit receipt is provided in
            the response.
          type: boolean
        logs:
          default: false
          description: |
            This flag controls whether the preview response will include execution logs.
            If not provided, this defaults to `false` and no logs will be provided in the response.
          type: boolean
      type: object
    PreviewTransactionType:
      enum:
      - Compiled
      type: string
    PreviewTransaction:
      discriminator:
        mapping:
          Compiled: '#/components/schemas/CompiledPreviewTransaction'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/PreviewTransactionType'
      required:
      - type
      type: object
    CompiledPreviewTransaction:
      allOf:
      - $ref: '#/components/schemas/PreviewTransaction'
      - properties:
          preview_transaction_hex:
            description: |
              A hex-encoded, compiled `RawPreviewTransaction`.

              As of Cuttlefish, only `PreviewTransactionV2` is supported.

              A `PreviewTransactionV2` can be created with a v2 transaction builder:
              * If using Rust, it can be created with a `TransactionV2Builder` using `build_preview_transaction()`
                and then converted to hex with `preview_transaction.to_raw().unwrap().to_hex()`
              * If using the toolkit, you can create this using the v2 transaction builder.

              Some subtleties:
              * Partial transactions can't be previewed. Instead, they must be wrapped inside a
                transaction wrapper, so that the engine knows how to yield to them appropriately.
              * Currently the builder assumes that the signed partial transactions have real signatures.
                This isn't strictly required, and we may create a builder in future which allows providing
                public keys when building partial transactions for use in preview.
              * If you don't have signatures to hand, you can simply not sign the partial transactions,
                and then use the `assume_all_signature_proofs` preview flag, although be advised that
                this may result in the fee estimate being slightly lower during preview.
              * We may create more ergonomic builders for PreviewTransactions which allow use of
                public keys to denote the signers of subintents. Let us know if this is important
                for your use case.
            type: string
        required:
        - preview_transaction_hex
        type: object
    TransactionPreviewV2Response:
      example:
        radix_engine_toolkit_receipt: "{}"
        at_ledger_state_version: 0
        receipt: "{}"
        logs:
        - level: level
          message: message
        - level: level
          message: message
      properties:
        at_ledger_state_version:
          description: A summarized state of the ledger on top of which the preview
            was performed.
          format: int64
          type: integer
        receipt:
          description: |
            This is provided unless the `core_api_receipt` flag is set to false in the `opt_ins `
            property of the request.

            This type is defined in the Core API as `TransactionReceipt`. See the Core API documentation for more details.
          type: object
        radix_engine_toolkit_receipt:
          description: |
            An optional field which is only provided if the `radix_engine_toolkit_receipt`
            flag is set to true in the `opt_ins` property of the request.

            This receipt is primarily intended for use with the toolkit and may contain information
            that is already available in the receipt provided in the `receipt` field of this
            response.

            A typical client of this API is not expected to use this receipt. The primary clients
            this receipt is intended for is the Radix wallet or any client that needs to perform
            execution summaries on their transactions.
          type: object
        logs:
          description: |
            An optional field which is only provided if the `logs` flag is set to true in the
            `opt_ins` property of the request.

            If present, it gives the emitted logs from the transaction execution.
          items:
            $ref: '#/components/schemas/TransactionPreviewResponse_logs_inner'
          type: array
      required:
      - at_ledger_state_version
      type: object
    TransactionSubmitRequest:
      example:
        notarized_transaction_hex: notarized_transaction_hex
      properties:
        notarized_transaction_hex:
          description: Hex-encoded notarized transaction payload which can be submitted.
          type: string
      required:
      - notarized_transaction_hex
      type: object
    TransactionSubmitResponse:
      example:
        duplicate: true
      properties:
        duplicate:
          description: Is true if the transaction is a duplicate of an existing pending
            transaction.
          type: boolean
      required:
      - duplicate
      type: object
    AccountDepositPreValidationRequest:
      allOf:
      - example:
          account_address: <account-address>
          resource_addresses:
          - <resource-address>
        properties:
          account_address:
            $ref: '#/components/schemas/Address'
          resource_addresses:
            items:
              $ref: '#/components/schemas/Address'
            type: array
          badge:
            $ref: '#/components/schemas/TransactionAccountDepositPreValidationAuthorizedDepositorBadge'
        required:
        - account_address
        - resource_addresses
        type: object
      example:
        badge:
          badge_type: ResourceBadge
          resource_address: resource_address
        account_address: null
        resource_addresses:
        - null
        - null
    AccountDepositPreValidationResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - properties:
          allows_try_deposit_batch:
            type: boolean
          resource_specific_behaviour:
            description: "The fully resolved try_deposit_* ability of each resource\
              \ (which takes all the inputs into account, including the authorized\
              \ depositor badge, the default deposit rule and the resource-specific\
              \ details)."
            items:
              $ref: '#/components/schemas/AccountDepositPreValidationResourceSpecificBehaviourItem'
            type: array
          deciding_factors:
            $ref: '#/components/schemas/AccountDepositPreValidationDecidingFactors'
        required:
        - allows_try_deposit_batch
        - deciding_factors
        - resource_specific
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        deciding_factors:
          resource_specific_details:
          - resource_preference_rule: Allowed
            is_xrd: true
            resource_address: resource_address
            vault_exists: true
          - resource_preference_rule: Allowed
            is_xrd: true
            resource_address: resource_address
            vault_exists: true
          is_badge_authorized_depositor: true
          default_deposit_rule: Accept
        resource_specific_behaviour:
        - allows_try_deposit: true
          resource_address: resource_address
        - allows_try_deposit: true
          resource_address: resource_address
        allows_try_deposit_batch: true
    TransactionSubintentStatusRequest:
      example:
        subintent_hash: <transaction-subintent-hash>
      properties:
        subintent_hash:
          description: Bech32m-encoded hash.
          type: string
      required:
      - subintent_hash
      type: object
    TransactionSubintentStatusResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - properties:
          subintent_status:
            $ref: '#/components/schemas/SubintentStatus'
          subintent_status_description:
            description: |
              An additional description to clarify the `subintent_status`.
            type: string
          finalized_at_state_version:
            description: |
              The state version when the subintent was finalized (committed as a success). This field is only present if the status is `CommittedSuccess`.
            format: int64
            nullable: true
            type: integer
          finalized_at_transaction_intent_hash:
            $ref: '#/components/schemas/HashBech32mString'
        required:
        - subintent_status
        - subintent_status_description
        type: object
      example:
        subintent_status_description: subintent_status_description
        finalized_at_transaction_intent_hash: null
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        subintent_status: Unknown
        finalized_at_state_version: 0
    TransactionStatusRequest:
      allOf:
      - properties:
          intent_hash:
            $ref: '#/components/schemas/HashBech32mString'
        required:
        - intent_hash
        type: object
      example:
        intent_hash: <transaction-intent-hash>
    TransactionStatusResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - properties:
          status:
            $ref: '#/components/schemas/TransactionStatus'
          intent_status:
            $ref: '#/components/schemas/TransactionIntentStatus'
          intent_status_description:
            description: |
              An additional description to clarify the intent status.
            type: string
          known_payloads:
            items:
              $ref: '#/components/schemas/TransactionStatusResponseKnownPayloadItem'
            type: array
          committed_state_version:
            description: |
              If the intent was committed, this gives the state version when this intent was committed.
            format: int64
            nullable: true
            type: integer
          permanently_rejects_at_epoch:
            description: The epoch number at which the transaction is guaranteed to
              get permanently rejected by the Network due to exceeded epoch range
              defined when submitting transaction.
            format: int64
            maximum: 10000000000
            minimum: 0
            nullable: true
            type: integer
          error_message:
            description: |
              The most relevant error message received, due to a rejection or commit as failure.
              Please note that presence of an error message doesn't imply that the intent
              will definitely reject or fail. This could represent a temporary error (such as out
              of fees), or an error with a payload which doesn't end up being committed.
            nullable: true
            type: string
        required:
        - intent_status
        - intent_status_description
        - known_payloads
        - status
        type: object
      example:
        error_message: error_message
        committed_state_version: 0
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        known_payloads:
        - error_message: error_message
          payload_status: Unknown
          payload_hash: payload_hash
          payload_status_description: payload_status_description
          handling_status: HandlingSubmission
          submission_error: submission_error
          latest_error_message: latest_error_message
          status: null
          handling_status_reason: handling_status_reason
        - error_message: error_message
          payload_status: Unknown
          payload_hash: payload_hash
          payload_status_description: payload_status_description
          handling_status: HandlingSubmission
          submission_error: submission_error
          latest_error_message: latest_error_message
          status: null
          handling_status_reason: handling_status_reason
        permanently_rejects_at_epoch: 6027456183
        intent_status: Unknown
        status: Unknown
        intent_status_description: intent_status_description
    TransactionStatusResponseKnownPayloadItem:
      example:
        error_message: error_message
        payload_status: Unknown
        payload_hash: payload_hash
        payload_status_description: payload_status_description
        handling_status: HandlingSubmission
        submission_error: submission_error
        latest_error_message: latest_error_message
        status: null
        handling_status_reason: handling_status_reason
      properties:
        payload_hash:
          description: Bech32m-encoded hash.
          type: string
        status:
          $ref: '#/components/schemas/TransactionStatus'
        payload_status:
          $ref: '#/components/schemas/TransactionPayloadStatus'
        payload_status_description:
          description: |
            An additional description to clarify the payload status.
          type: string
        error_message:
          description: |
            The initial error message received for a rejection or failure during transaction execution.
            This will typically be the useful error message, explaining the root cause of the issue.
            Please note that presence of an error message doesn't imply that this payload
            will definitely reject or fail. This could represent an error during a temporary
            rejection (such as out of fees) which then gets resolved (e.g. by depositing money
            to pay the fee), allowing the transaction to be committed.
          nullable: true
          type: string
        latest_error_message:
          description: |
            The latest error message received for a rejection or failure during transaction execution,
            this is only returned if it is different from the initial error message.
            This is more current than the initial error message, but may be less useful, as it could
            be a message regarding the expiry of the transaction at the end of its epoch validity window.
            Please note that presence of an error message doesn't imply that this payload
            will definitely reject or fail. This could represent an error during a temporary
            rejection (such as out of fees) which then gets resolved (e.g. by depositing money
            to pay the fee), allowing the transaction to be committed.
          nullable: true
          type: string
        handling_status:
          $ref: '#/components/schemas/TransactionPayloadGatewayHandlingStatus'
        handling_status_reason:
          description: |
            Additional reason for why the Gateway has its current handling status.
          nullable: true
          type: string
        submission_error:
          description: |
            The most recent error message received when submitting this transaction to the network.
            Please note that the presence of an error message doesn't imply that this transaction
            payload will definitely reject or fail. This could be a transient error.
          nullable: true
          type: string
      required:
      - payload_hash
      - status
      type: object
    TransactionCommittedDetailsRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - properties:
          intent_hash:
            $ref: '#/components/schemas/HashBech32mString'
          opt_ins:
            $ref: '#/components/schemas/TransactionDetailsOptIns'
        required:
        - intent_hash
        type: object
      example:
        intent_hash: <transaction-intent-hash>
    TransactionDetailsOptIns:
      properties:
        raw_hex:
          default: false
          description: "if set to `true`, raw transaction hex is returned."
          type: boolean
        receipt_state_changes:
          default: false
          description: "if set to `true`, state changes inside receipt object are\
            \ returned."
          type: boolean
        receipt_fee_summary:
          default: false
          description: "if set to `true`, fee summary inside receipt object is returned."
          type: boolean
        receipt_fee_source:
          default: false
          description: "if set to `true`, fee source inside receipt object is returned."
          type: boolean
        receipt_fee_destination:
          default: false
          description: "if set to `true`, fee destination inside receipt object is\
            \ returned."
          type: boolean
        receipt_costing_parameters:
          default: false
          description: "if set to `true`, costing parameters inside receipt object\
            \ is returned."
          type: boolean
        receipt_events:
          default: false
          description: "if set to `true`, events inside receipt object is returned."
          type: boolean
        receipt_output:
          default: true
          description: "(true by default) if set to `true`, transaction receipt output\
            \ is returned."
          type: boolean
        affected_global_entities:
          default: false
          description: "if set to `true`, all affected global entities by given transaction\
            \ are returned."
          type: boolean
        manifest_instructions:
          default: false
          description: "if set to `true`, manifest instructions for user transactions\
            \ are returned."
          type: boolean
        balance_changes:
          default: false
          description: |
            if set to `true`, returns the fungible and non-fungible balance changes.

            **Warning!** This opt-in might be missing for recently committed transactions, in that case a `null` value will be returned. Retry the request until non-null value is returned.
          type: boolean
      type: object
    TransactionCommittedDetailsResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - properties:
          transaction:
            $ref: '#/components/schemas/CommittedTransactionInfo'
        required:
        - transaction
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        transaction:
          error_message: error_message
          transaction_status: Unknown
          raw_hex: raw_hex
          state_version: 0
          affected_global_entities:
          - null
          - null
          balance_changes:
            fungible_balance_changes:
            - entity_address: entity_address
              balance_change: balance_change
              resource_address: resource_address
            - entity_address: entity_address
              balance_change: balance_change
              resource_address: resource_address
            fungible_fee_balance_changes:
            - entity_address: entity_address
              balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
            - entity_address: entity_address
              balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
            non_fungible_balance_changes:
            - removed:
              - null
              - null
              added:
              - null
              - null
              entity_address: entity_address
              resource_address: resource_address
            - removed:
              - null
              - null
              added:
              - null
              - null
              entity_address: entity_address
              resource_address: resource_address
          child_subintent_hashes:
          - null
          - null
          epoch: 6
          manifest_classes:
          - General
          - General
          message: "{}"
          fee_paid: fee_paid
          subintent_details:
          - subintent_hash: subintent_hash
            manifest_instructions: manifest_instructions
            child_subintent_hashes:
            - null
            - null
            message: "{}"
          - subintent_hash: subintent_hash
            manifest_instructions: manifest_instructions
            child_subintent_hashes:
            - null
            - null
            message: "{}"
          intent_hash: intent_hash
          round_timestamp: round_timestamp
          round: 1
          manifest_instructions: manifest_instructions
          receipt:
            output: "{}"
            error_message: error_message
            fee_summary: "{}"
            next_epoch: "{}"
            fee_destination: "{}"
            costing_parameters: "{}"
            state_updates: "{}"
            fee_source: "{}"
            events:
            - data:
                type_name: type_name
                kind: Bool
                field_name: field_name
              name: name
              emitter: "{}"
            - data:
                type_name: type_name
                kind: Bool
                field_name: field_name
              name: name
              emitter: "{}"
            status: null
          payload_hash: payload_hash
          confirmed_at: 2000-01-23T04:56:07.000+00:00
    TransactionSubintentDetails:
      example:
        subintent_hash: subintent_hash
        manifest_instructions: manifest_instructions
        child_subintent_hashes:
        - null
        - null
        message: "{}"
      properties:
        subintent_hash:
          description: Bech32m-encoded hash.
          type: string
        manifest_instructions:
          description: |
            A text-representation of a subintent manifest.
            This field will be present only for user transactions and when explicitly opted-in using the `manifest_instructions` flag.
          type: string
        message:
          description: |
            The optional subintent message.
            This type is defined in the Core API as `TransactionMessage`. See the Core API documentation for more details.
          type: object
        child_subintent_hashes:
          description: The subintent hash of each child of the subintent.
          items:
            $ref: '#/components/schemas/HashBech32mString'
          type: array
      required:
      - subintent_hash
      type: object
    TransactionBalanceChanges:
      example:
        fungible_balance_changes:
        - entity_address: entity_address
          balance_change: balance_change
          resource_address: resource_address
        - entity_address: entity_address
          balance_change: balance_change
          resource_address: resource_address
        fungible_fee_balance_changes:
        - entity_address: entity_address
          balance_change: balance_change
          type: FeePayment
          resource_address: resource_address
        - entity_address: entity_address
          balance_change: balance_change
          type: FeePayment
          resource_address: resource_address
        non_fungible_balance_changes:
        - removed:
          - null
          - null
          added:
          - null
          - null
          entity_address: entity_address
          resource_address: resource_address
        - removed:
          - null
          - null
          added:
          - null
          - null
          entity_address: entity_address
          resource_address: resource_address
      nullable: true
      properties:
        fungible_fee_balance_changes:
          description: |
            A list of all fee-related fungible balance changes per entity and resource.
          items:
            $ref: '#/components/schemas/TransactionFungibleFeeBalanceChanges'
          type: array
        fungible_balance_changes:
          description: |
            A list of all non-fee-related fungible balance changes per entity and resource.
          items:
            $ref: '#/components/schemas/TransactionFungibleBalanceChanges'
          type: array
        non_fungible_balance_changes:
          description: |
            A list of all non-fungible changes per entity and resource.
          items:
            $ref: '#/components/schemas/TransactionNonFungibleBalanceChanges'
          type: array
      required:
      - fungible_balance_changes
      - fungible_fee_balance_changes
      - non_fungible_balance_changes
      type: object
    TransactionFungibleFeeBalanceChangeType:
      description: |
        Indicates fee-related balance changes, for example:

        - payment of the fee including tip and royalty,
        - distribution of royalties,
        - distribution of the fee and tip to the consensus-manager, for distributing to the relevant validator/s at end of epoch.

        See https://www.radixdlt.com/blog/how-fees-work-in-babylon for further information on how fee payment works at Babylon.
      enum:
      - FeePayment
      - FeeDistributed
      - TipDistributed
      - RoyaltyDistributed
      type: string
    TransactionFungibleFeeBalanceChanges:
      example:
        entity_address: entity_address
        balance_change: balance_change
        type: FeePayment
        resource_address: resource_address
      properties:
        type:
          $ref: '#/components/schemas/TransactionFungibleFeeBalanceChangeType'
        entity_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        resource_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        balance_change:
          description: |
            The string-encoded decimal representing the amount of change for the fungible resource.
          type: string
      required:
      - balance_change
      - entity_address
      - resource_address
      - type
      type: object
    TransactionFungibleBalanceChanges:
      example:
        entity_address: entity_address
        balance_change: balance_change
        resource_address: resource_address
      properties:
        entity_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        resource_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        balance_change:
          description: |
            The string-encoded decimal representing the amount of change for the fungible resource.
          type: string
      required:
      - balance_change
      - entity_address
      - resource_address
      type: object
    TransactionNonFungibleBalanceChanges:
      example:
        removed:
        - null
        - null
        added:
        - null
        - null
        entity_address: entity_address
        resource_address: resource_address
      properties:
        entity_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        resource_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        added:
          items:
            $ref: '#/components/schemas/NonFungibleId'
          type: array
        removed:
          items:
            $ref: '#/components/schemas/NonFungibleId'
          type: array
      required:
      - added
      - entity_address
      - removed
      - resource_address
      type: object
    StreamTransactionsRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - $ref: '#/components/schemas/FromLedgerStateMixin'
      - $ref: '#/components/schemas/CursorLimitMixin'
      - properties:
          kind_filter:
            description: Limit returned transactions by their kind. Defaults to `user`.
            enum:
            - User
            - EpochChange
            - All
            type: string
          manifest_accounts_withdrawn_from_filter:
            description: "Allows specifying an array of account addresses. If specified,\
              \ the response will contain only transactions with a manifest containing\
              \ withdrawals from the given accounts."
            items:
              $ref: '#/components/schemas/Address'
            type: array
          manifest_accounts_deposited_into_filter:
            description: "Similar to `manifest_accounts_withdrawn_from_filter`, but\
              \ will return only transactions with a manifest containing deposits\
              \ to the given accounts."
            items:
              $ref: '#/components/schemas/Address'
            type: array
          manifest_badges_presented_filter:
            description: "Allows specifying array of badge resource addresses. If\
              \ specified, the response will contain only transactions where the given\
              \ badges were presented."
            items:
              $ref: '#/components/schemas/Address'
            type: array
          manifest_resources_filter:
            description: "Allows specifying array of resource addresses. If specified,\
              \ the response will contain only transactions containing the given resources\
              \ in the manifest (regardless of their usage)."
            items:
              $ref: '#/components/schemas/Address'
            type: array
          affected_global_entities_filter:
            description: "Allows specifying an array of global addresses. If specified,\
              \ the response will contain transactions that affected all of the given\
              \ global entities. A global entity is marked as \"affected\" by a transaction\
              \ if any of its state (or its descendents' state) was modified as a\
              \ result of the transaction. For performance reasons consensus manager\
              \ and transaction tracker are excluded from that filter."
            items:
              $ref: '#/components/schemas/Address'
            type: array
          affected_global_entities_filter_type:
            default: And
            description: Whether the filter should require all addresses (AND) or
              any of them (OR) to be present in the transaction. Default - "And".
            enum:
            - And
            - Or
            type: string
          events_filter:
            description: "Filters the transaction stream to transactions which emitted\
              \ at least one event matching each filter (each filter can be satisfied\
              \ by a different event). Currently *only* deposit and withdrawal events\
              \ emitted by an internal vault entity are tracked. For the purpose of\
              \ filtering, the emitter address is replaced by the global ancestor\
              \ of the emitter, for example, the top-level account / component which\
              \ contains the vault which emitted the event."
            items:
              $ref: '#/components/schemas/StreamTransactionsRequestEventFilterItem'
            type: array
          accounts_with_manifest_owner_method_calls:
            description: "Allows specifying an array of account addresses. If specified,\
              \ the response will contain only transactions that, for all specified\
              \ accounts, contain manifest method calls to that account which require\
              \ the owner role. See the [account docs](https://docs.radixdlt.com/docs/account)\
              \ for more information."
            items:
              $ref: '#/components/schemas/Address'
            type: array
          accounts_without_manifest_owner_method_calls:
            description: "Allows specifying an array of account addresses. If specified,\
              \ the response will contain only transactions that, for all specified\
              \ accounts, do NOT contain manifest method calls to that account which\
              \ require owner role. See the [account docs](https://docs.radixdlt.com/docs/account)\
              \ for more information."
            items:
              $ref: '#/components/schemas/Address'
            type: array
          manifest_class_filter:
            $ref: '#/components/schemas/StreamTransactionsRequest_allOf_manifest_class_filter'
          event_global_emitters_filter:
            description: "Allows specifying an array of global addresses. If specified,\
              \ the response will contain transactions in which all entities emitted\
              \ events. If an event was published by an internal entity, it is going\
              \ to be indexed as it is a global ancestor. For performance reasons\
              \ events published by consensus manager and native XRD resource are\
              \ excluded from that filter."
            items:
              $ref: '#/components/schemas/Address'
            type: array
          order:
            description: Configures the order of returned result set. Defaults to
              `desc`.
            enum:
            - Asc
            - Desc
            type: string
          opt_ins:
            $ref: '#/components/schemas/TransactionDetailsOptIns'
        type: object
      example:
        limit_per_page: 5
    StreamTransactionsRequestEventFilterItem:
      properties:
        event:
          enum:
          - Deposit
          - Withdrawal
          type: string
        emitter_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        resource_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
      required:
      - event
      type: object
    StreamTransactionsResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - properties:
          next_cursor:
            description: "If specified, contains a cursor to query next page of the\
              \ `items` collection."
            nullable: true
            type: string
          items:
            description: The page of user transactions.
            items:
              $ref: '#/components/schemas/CommittedTransactionInfo'
            type: array
        required:
        - items
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        next_cursor: next_cursor
        items:
        - error_message: error_message
          transaction_status: Unknown
          raw_hex: raw_hex
          state_version: 0
          affected_global_entities:
          - null
          - null
          balance_changes:
            fungible_balance_changes:
            - entity_address: entity_address
              balance_change: balance_change
              resource_address: resource_address
            - entity_address: entity_address
              balance_change: balance_change
              resource_address: resource_address
            fungible_fee_balance_changes:
            - entity_address: entity_address
              balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
            - entity_address: entity_address
              balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
            non_fungible_balance_changes:
            - removed:
              - null
              - null
              added:
              - null
              - null
              entity_address: entity_address
              resource_address: resource_address
            - removed:
              - null
              - null
              added:
              - null
              - null
              entity_address: entity_address
              resource_address: resource_address
          child_subintent_hashes:
          - null
          - null
          epoch: 6
          manifest_classes:
          - General
          - General
          message: "{}"
          fee_paid: fee_paid
          subintent_details:
          - subintent_hash: subintent_hash
            manifest_instructions: manifest_instructions
            child_subintent_hashes:
            - null
            - null
            message: "{}"
          - subintent_hash: subintent_hash
            manifest_instructions: manifest_instructions
            child_subintent_hashes:
            - null
            - null
            message: "{}"
          intent_hash: intent_hash
          round_timestamp: round_timestamp
          round: 1
          manifest_instructions: manifest_instructions
          receipt:
            output: "{}"
            error_message: error_message
            fee_summary: "{}"
            next_epoch: "{}"
            fee_destination: "{}"
            costing_parameters: "{}"
            state_updates: "{}"
            fee_source: "{}"
            events:
            - data:
                type_name: type_name
                kind: Bool
                field_name: field_name
              name: name
              emitter: "{}"
            - data:
                type_name: type_name
                kind: Bool
                field_name: field_name
              name: name
              emitter: "{}"
            status: null
          payload_hash: payload_hash
          confirmed_at: 2000-01-23T04:56:07.000+00:00
        - error_message: error_message
          transaction_status: Unknown
          raw_hex: raw_hex
          state_version: 0
          affected_global_entities:
          - null
          - null
          balance_changes:
            fungible_balance_changes:
            - entity_address: entity_address
              balance_change: balance_change
              resource_address: resource_address
            - entity_address: entity_address
              balance_change: balance_change
              resource_address: resource_address
            fungible_fee_balance_changes:
            - entity_address: entity_address
              balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
            - entity_address: entity_address
              balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
            non_fungible_balance_changes:
            - removed:
              - null
              - null
              added:
              - null
              - null
              entity_address: entity_address
              resource_address: resource_address
            - removed:
              - null
              - null
              added:
              - null
              - null
              entity_address: entity_address
              resource_address: resource_address
          child_subintent_hashes:
          - null
          - null
          epoch: 6
          manifest_classes:
          - General
          - General
          message: "{}"
          fee_paid: fee_paid
          subintent_details:
          - subintent_hash: subintent_hash
            manifest_instructions: manifest_instructions
            child_subintent_hashes:
            - null
            - null
            message: "{}"
          - subintent_hash: subintent_hash
            manifest_instructions: manifest_instructions
            child_subintent_hashes:
            - null
            - null
            message: "{}"
          intent_hash: intent_hash
          round_timestamp: round_timestamp
          round: 1
          manifest_instructions: manifest_instructions
          receipt:
            output: "{}"
            error_message: error_message
            fee_summary: "{}"
            next_epoch: "{}"
            fee_destination: "{}"
            costing_parameters: "{}"
            state_updates: "{}"
            fee_source: "{}"
            events:
            - data:
                type_name: type_name
                kind: Bool
                field_name: field_name
              name: name
              emitter: "{}"
            - data:
                type_name: type_name
                kind: Bool
                field_name: field_name
              name: name
              emitter: "{}"
            status: null
          payload_hash: payload_hash
          confirmed_at: 2000-01-23T04:56:07.000+00:00
    StateEntityDetailsRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - properties:
          opt_ins:
            $ref: '#/components/schemas/StateEntityDetailsOptIns'
          addresses:
            description: limited to max 20 items.
            items:
              $ref: '#/components/schemas/Address'
            type: array
          aggregation_level:
            $ref: '#/components/schemas/ResourceAggregationLevel'
        required:
        - addresses
        type: object
      example:
        addresses:
        - <entity-address>
        aggregation_level: Vault
        opt_ins:
          ancestor_identities: true
          component_royalty_config: true
          component_royalty_vault_balance: true
          package_royalty_vault_balance: true
          non_fungible_include_nfids: true
          dapp_two_way_links: true
          native_resource_details: true
          explicit_metadata:
          - name
          - description
    StateEntityDetailsOptIns:
      description: "Check detailed [OptIns](#section/Using-endpoints-with-opt-in-features)\
        \ documentation for more details"
      properties:
        ancestor_identities:
          default: false
          description: "if set to `true`, ancestor addresses - `parent_address`, `owner_address`\
            \ and `global_address` for entities are returned."
          type: boolean
        component_royalty_config:
          default: false
          description: "if set to `true`, `royalty_config` for component entities\
            \ is returned."
          type: boolean
        component_royalty_vault_balance:
          default: false
          description: "if set to `true`, `royalty_vault_balance` for component entities\
            \ is returned."
          type: boolean
        package_royalty_vault_balance:
          default: false
          description: "if set to `true`, `royalty_vault_balance` for package entities\
            \ is returned."
          type: boolean
        non_fungible_include_nfids:
          default: false
          description: "if set to `true`, first page of non fungible ids are returned\
            \ for each non fungible resource, with `next_cursor` which can be later\
            \ used at `/state/entity/page/non-fungible-vault/ids` endpoint."
          type: boolean
        explicit_metadata:
          description: allows specifying explicitly metadata properties which should
            be returned in response.
          items:
            type: string
          type: array
        dapp_two_way_links:
          default: false
          description: "if set to `true`, on-ledger dApp two-way links (resolved &\
            \ verified) are returned. See https://docs.radixdlt.com/docs/metadata-for-verification\
            \ for more details."
          type: boolean
        native_resource_details:
          default: false
          description: "if set to `true`, additional details for the Network native\
            \ resources are returned."
          type: boolean
      type: object
    StateEntityDetailsResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/StateEntityDetailsResponseItem'
            type: array
        required:
        - items
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        items:
        - fungible_resources:
            next_cursor: next_cursor
            total_count: 0
            items:
            - aggregation_level: Global
              explicit_metadata:
                next_cursor: next_cursor
                total_count: 6
                items:
                - is_locked: true
                  value:
                    typed:
                      type: String
                    raw_hex: raw_hex
                    programmatic_json:
                      type_name: type_name
                      kind: Bool
                      field_name: field_name
                  key: key
                  last_updated_at_state_version: 14658129805030
                - is_locked: true
                  value:
                    typed:
                      type: String
                    raw_hex: raw_hex
                    programmatic_json:
                      type_name: type_name
                      kind: Bool
                      field_name: field_name
                  key: key
                  last_updated_at_state_version: 14658129805030
              resource_address: resource_address
            - aggregation_level: Global
              explicit_metadata:
                next_cursor: next_cursor
                total_count: 6
                items:
                - is_locked: true
                  value:
                    typed:
                      type: String
                    raw_hex: raw_hex
                    programmatic_json:
                      type_name: type_name
                      kind: Bool
                      field_name: field_name
                  key: key
                  last_updated_at_state_version: 14658129805030
                - is_locked: true
                  value:
                    typed:
                      type: String
                    raw_hex: raw_hex
                    programmatic_json:
                      type_name: type_name
                      kind: Bool
                      field_name: field_name
                  key: key
                  last_updated_at_state_version: 14658129805030
              resource_address: resource_address
          metadata:
            next_cursor: next_cursor
            total_count: 6
            items:
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
          address: address
          explicit_metadata:
            next_cursor: next_cursor
            total_count: 6
            items:
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
          details:
            type: FungibleResource
          non_fungible_resources:
            next_cursor: next_cursor
            total_count: 5
            items:
            - aggregation_level: null
              explicit_metadata:
                next_cursor: next_cursor
                total_count: 6
                items:
                - is_locked: true
                  value:
                    typed:
                      type: String
                    raw_hex: raw_hex
                    programmatic_json:
                      type_name: type_name
                      kind: Bool
                      field_name: field_name
                  key: key
                  last_updated_at_state_version: 14658129805030
                - is_locked: true
                  value:
                    typed:
                      type: String
                    raw_hex: raw_hex
                    programmatic_json:
                      type_name: type_name
                      kind: Bool
                      field_name: field_name
                  key: key
                  last_updated_at_state_version: 14658129805030
              resource_address: resource_address
            - aggregation_level: null
              explicit_metadata:
                next_cursor: next_cursor
                total_count: 6
                items:
                - is_locked: true
                  value:
                    typed:
                      type: String
                    raw_hex: raw_hex
                    programmatic_json:
                      type_name: type_name
                      kind: Bool
                      field_name: field_name
                  key: key
                  last_updated_at_state_version: 14658129805030
                - is_locked: true
                  value:
                    typed:
                      type: String
                    raw_hex: raw_hex
                    programmatic_json:
                      type_name: type_name
                      kind: Bool
                      field_name: field_name
                  key: key
                  last_updated_at_state_version: 14658129805030
              resource_address: resource_address
          ancestor_identities:
            parent_address: parent_address
            global_address: global_address
            owner_address: owner_address
        - fungible_resources:
            next_cursor: next_cursor
            total_count: 0
            items:
            - aggregation_level: Global
              explicit_metadata:
                next_cursor: next_cursor
                total_count: 6
                items:
                - is_locked: true
                  value:
                    typed:
                      type: String
                    raw_hex: raw_hex
                    programmatic_json:
                      type_name: type_name
                      kind: Bool
                      field_name: field_name
                  key: key
                  last_updated_at_state_version: 14658129805030
                - is_locked: true
                  value:
                    typed:
                      type: String
                    raw_hex: raw_hex
                    programmatic_json:
                      type_name: type_name
                      kind: Bool
                      field_name: field_name
                  key: key
                  last_updated_at_state_version: 14658129805030
              resource_address: resource_address
            - aggregation_level: Global
              explicit_metadata:
                next_cursor: next_cursor
                total_count: 6
                items:
                - is_locked: true
                  value:
                    typed:
                      type: String
                    raw_hex: raw_hex
                    programmatic_json:
                      type_name: type_name
                      kind: Bool
                      field_name: field_name
                  key: key
                  last_updated_at_state_version: 14658129805030
                - is_locked: true
                  value:
                    typed:
                      type: String
                    raw_hex: raw_hex
                    programmatic_json:
                      type_name: type_name
                      kind: Bool
                      field_name: field_name
                  key: key
                  last_updated_at_state_version: 14658129805030
              resource_address: resource_address
          metadata:
            next_cursor: next_cursor
            total_count: 6
            items:
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
          address: address
          explicit_metadata:
            next_cursor: next_cursor
            total_count: 6
            items:
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
          details:
            type: FungibleResource
          non_fungible_resources:
            next_cursor: next_cursor
            total_count: 5
            items:
            - aggregation_level: null
              explicit_metadata:
                next_cursor: next_cursor
                total_count: 6
                items:
                - is_locked: true
                  value:
                    typed:
                      type: String
                    raw_hex: raw_hex
                    programmatic_json:
                      type_name: type_name
                      kind: Bool
                      field_name: field_name
                  key: key
                  last_updated_at_state_version: 14658129805030
                - is_locked: true
                  value:
                    typed:
                      type: String
                    raw_hex: raw_hex
                    programmatic_json:
                      type_name: type_name
                      kind: Bool
                      field_name: field_name
                  key: key
                  last_updated_at_state_version: 14658129805030
              resource_address: resource_address
            - aggregation_level: null
              explicit_metadata:
                next_cursor: next_cursor
                total_count: 6
                items:
                - is_locked: true
                  value:
                    typed:
                      type: String
                    raw_hex: raw_hex
                    programmatic_json:
                      type_name: type_name
                      kind: Bool
                      field_name: field_name
                  key: key
                  last_updated_at_state_version: 14658129805030
                - is_locked: true
                  value:
                    typed:
                      type: String
                    raw_hex: raw_hex
                    programmatic_json:
                      type_name: type_name
                      kind: Bool
                      field_name: field_name
                  key: key
                  last_updated_at_state_version: 14658129805030
              resource_address: resource_address
          ancestor_identities:
            parent_address: parent_address
            global_address: global_address
            owner_address: owner_address
    StateEntityDetailsResponseItem:
      example:
        fungible_resources:
          next_cursor: next_cursor
          total_count: 0
          items:
          - aggregation_level: Global
            explicit_metadata:
              next_cursor: next_cursor
              total_count: 6
              items:
              - is_locked: true
                value:
                  typed:
                    type: String
                  raw_hex: raw_hex
                  programmatic_json:
                    type_name: type_name
                    kind: Bool
                    field_name: field_name
                key: key
                last_updated_at_state_version: 14658129805030
              - is_locked: true
                value:
                  typed:
                    type: String
                  raw_hex: raw_hex
                  programmatic_json:
                    type_name: type_name
                    kind: Bool
                    field_name: field_name
                key: key
                last_updated_at_state_version: 14658129805030
            resource_address: resource_address
          - aggregation_level: Global
            explicit_metadata:
              next_cursor: next_cursor
              total_count: 6
              items:
              - is_locked: true
                value:
                  typed:
                    type: String
                  raw_hex: raw_hex
                  programmatic_json:
                    type_name: type_name
                    kind: Bool
                    field_name: field_name
                key: key
                last_updated_at_state_version: 14658129805030
              - is_locked: true
                value:
                  typed:
                    type: String
                  raw_hex: raw_hex
                  programmatic_json:
                    type_name: type_name
                    kind: Bool
                    field_name: field_name
                key: key
                last_updated_at_state_version: 14658129805030
            resource_address: resource_address
        metadata:
          next_cursor: next_cursor
          total_count: 6
          items:
          - is_locked: true
            value:
              typed:
                type: String
              raw_hex: raw_hex
              programmatic_json:
                type_name: type_name
                kind: Bool
                field_name: field_name
            key: key
            last_updated_at_state_version: 14658129805030
          - is_locked: true
            value:
              typed:
                type: String
              raw_hex: raw_hex
              programmatic_json:
                type_name: type_name
                kind: Bool
                field_name: field_name
            key: key
            last_updated_at_state_version: 14658129805030
        address: address
        explicit_metadata:
          next_cursor: next_cursor
          total_count: 6
          items:
          - is_locked: true
            value:
              typed:
                type: String
              raw_hex: raw_hex
              programmatic_json:
                type_name: type_name
                kind: Bool
                field_name: field_name
            key: key
            last_updated_at_state_version: 14658129805030
          - is_locked: true
            value:
              typed:
                type: String
              raw_hex: raw_hex
              programmatic_json:
                type_name: type_name
                kind: Bool
                field_name: field_name
            key: key
            last_updated_at_state_version: 14658129805030
        details:
          type: FungibleResource
        non_fungible_resources:
          next_cursor: next_cursor
          total_count: 5
          items:
          - aggregation_level: null
            explicit_metadata:
              next_cursor: next_cursor
              total_count: 6
              items:
              - is_locked: true
                value:
                  typed:
                    type: String
                  raw_hex: raw_hex
                  programmatic_json:
                    type_name: type_name
                    kind: Bool
                    field_name: field_name
                key: key
                last_updated_at_state_version: 14658129805030
              - is_locked: true
                value:
                  typed:
                    type: String
                  raw_hex: raw_hex
                  programmatic_json:
                    type_name: type_name
                    kind: Bool
                    field_name: field_name
                key: key
                last_updated_at_state_version: 14658129805030
            resource_address: resource_address
          - aggregation_level: null
            explicit_metadata:
              next_cursor: next_cursor
              total_count: 6
              items:
              - is_locked: true
                value:
                  typed:
                    type: String
                  raw_hex: raw_hex
                  programmatic_json:
                    type_name: type_name
                    kind: Bool
                    field_name: field_name
                key: key
                last_updated_at_state_version: 14658129805030
              - is_locked: true
                value:
                  typed:
                    type: String
                  raw_hex: raw_hex
                  programmatic_json:
                    type_name: type_name
                    kind: Bool
                    field_name: field_name
                key: key
                last_updated_at_state_version: 14658129805030
            resource_address: resource_address
        ancestor_identities:
          parent_address: parent_address
          global_address: global_address
          owner_address: owner_address
      properties:
        address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        fungible_resources:
          $ref: '#/components/schemas/FungibleResourcesCollection'
        non_fungible_resources:
          $ref: '#/components/schemas/NonFungibleResourcesCollection'
        ancestor_identities:
          $ref: '#/components/schemas/StateEntityDetailsResponseItemAncestorIdentities'
        metadata:
          $ref: '#/components/schemas/EntityMetadataCollection'
        explicit_metadata:
          $ref: '#/components/schemas/EntityMetadataCollection'
        details:
          $ref: '#/components/schemas/StateEntityDetailsResponseItemDetails'
      required:
      - address
      - metadata
      type: object
    StateEntityDetailsResponseItemAncestorIdentities:
      example:
        parent_address: parent_address
        global_address: global_address
        owner_address: owner_address
      properties:
        parent_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        owner_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        global_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
      type: object
    StateEntityDetailsResponseItemDetailsType:
      enum:
      - FungibleResource
      - NonFungibleResource
      - FungibleVault
      - NonFungibleVault
      - Package
      - Component
      type: string
    StateEntityDetailsResponseItemDetails:
      discriminator:
        mapping:
          FungibleResource: '#/components/schemas/StateEntityDetailsResponseFungibleResourceDetails'
          NonFungibleResource: '#/components/schemas/StateEntityDetailsResponseNonFungibleResourceDetails'
          FungibleVault: '#/components/schemas/StateEntityDetailsResponseFungibleVaultDetails'
          NonFungibleVault: '#/components/schemas/StateEntityDetailsResponseNonFungibleVaultDetails'
          Package: '#/components/schemas/StateEntityDetailsResponsePackageDetails'
          Component: '#/components/schemas/StateEntityDetailsResponseComponentDetails'
        propertyName: type
      example:
        type: FungibleResource
      properties:
        type:
          $ref: '#/components/schemas/StateEntityDetailsResponseItemDetailsType'
      required:
      - type
      type: object
    StateEntityDetailsResponseFungibleResourceDetails:
      allOf:
      - $ref: '#/components/schemas/StateEntityDetailsResponseItemDetails'
      - properties:
          role_assignments:
            $ref: '#/components/schemas/ComponentEntityRoleAssignments'
          divisibility:
            minimum: 0
            type: integer
          total_supply:
            $ref: '#/components/schemas/BigDecimal'
          total_minted:
            $ref: '#/components/schemas/BigDecimal'
          total_burned:
            $ref: '#/components/schemas/BigDecimal'
          two_way_linked_dapps:
            $ref: '#/components/schemas/TwoWayLinkedDappsCollection'
          native_resource_details:
            $ref: '#/components/schemas/NativeResourceDetails'
        required:
        - divisibility
        - role_assignments
        - total_burned
        - total_minted
        - total_supply
        type: object
    StateEntityDetailsResponseNonFungibleResourceDetails:
      allOf:
      - $ref: '#/components/schemas/StateEntityDetailsResponseItemDetails'
      - properties:
          role_assignments:
            $ref: '#/components/schemas/ComponentEntityRoleAssignments'
          non_fungible_id_type:
            $ref: '#/components/schemas/NonFungibleIdType'
          total_supply:
            $ref: '#/components/schemas/BigDecimal'
          total_minted:
            $ref: '#/components/schemas/BigDecimal'
          total_burned:
            $ref: '#/components/schemas/BigDecimal'
          non_fungible_data_mutable_fields:
            items:
              type: string
            type: array
          two_way_linked_dapps:
            $ref: '#/components/schemas/TwoWayLinkedDappsCollection'
          native_resource_details:
            $ref: '#/components/schemas/NativeResourceDetails'
        required:
        - non_fungible_data_mutable_fields
        - non_fungible_id_type
        - role_assignments
        - total_burned
        - total_minted
        - total_supply
        type: object
    StateEntityDetailsResponseFungibleVaultDetails:
      allOf:
      - $ref: '#/components/schemas/StateEntityDetailsResponseItemDetails'
      - properties:
          resource_address:
            $ref: '#/components/schemas/Address'
          balance:
            $ref: '#/components/schemas/FungibleResourcesCollectionItemVaultAggregatedVaultItem'
        required:
        - balance
        - resource_address
        type: object
    StateEntityDetailsResponseNonFungibleVaultDetails:
      allOf:
      - $ref: '#/components/schemas/StateEntityDetailsResponseItemDetails'
      - properties:
          resource_address:
            $ref: '#/components/schemas/Address'
          balance:
            $ref: '#/components/schemas/NonFungibleResourcesCollectionItemVaultAggregatedVaultItem'
        required:
        - balance
        - resource_address
        type: object
    StateEntityDetailsResponsePackageDetails:
      allOf:
      - $ref: '#/components/schemas/StateEntityDetailsResponseItemDetails'
      - properties:
          codes:
            $ref: '#/components/schemas/PackageCodeCollection'
          vm_type:
            $ref: '#/components/schemas/PackageVmType'
          code_hash_hex:
            $ref: '#/components/schemas/HexString'
          code_hex:
            $ref: '#/components/schemas/HexString'
          royalty_vault_balance:
            $ref: '#/components/schemas/BigDecimal'
          blueprints:
            $ref: '#/components/schemas/PackageBlueprintCollection'
          schemas:
            $ref: '#/components/schemas/EntitySchemaCollection'
          role_assignments:
            $ref: '#/components/schemas/ComponentEntityRoleAssignments'
          two_way_linked_dapp_address:
            $ref: '#/components/schemas/Address'
        required:
        - code_hash_hex
        - code_hex
        - codes
        - vm_type
        type: object
      description: "vm_type, code_hash_hex and code_hex are always going to be empty,\
        \ use `codes` property which will return collection (it's possible after protocol\
        \ update that package might have multiple codes)"
    StateEntityDetailsResponseComponentDetails:
      allOf:
      - $ref: '#/components/schemas/StateEntityDetailsResponseItemDetails'
      - properties:
          package_address:
            $ref: '#/components/schemas/Address'
          blueprint_name:
            type: string
          blueprint_version:
            type: string
          state:
            $ref: '#/components/schemas/StateEntityDetailsResponseComponentDetails_allOf_state'
          role_assignments:
            $ref: '#/components/schemas/ComponentEntityRoleAssignments'
          royalty_vault_balance:
            $ref: '#/components/schemas/BigDecimal'
          royalty_config:
            $ref: '#/components/schemas/ComponentRoyaltyConfig'
          two_way_linked_dapp_address:
            $ref: '#/components/schemas/Address'
          two_way_linked_dapp_details:
            $ref: '#/components/schemas/TwoWayLinkedDappOnLedgerDetails'
          native_resource_details:
            $ref: '#/components/schemas/NativeResourceDetails'
        required:
        - blueprint_name
        - blueprint_version
        type: object
    StateAccountResourcePreferencesPageRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - $ref: '#/components/schemas/CursorLimitMixin'
      - properties:
          account_address:
            $ref: '#/components/schemas/Address'
        required:
        - account_address
        type: object
      example:
        account_address: null
    StateAccountResourcePreferencesPageResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - $ref: '#/components/schemas/AccountResourcePreferencesCollection'
      - properties:
          account_address:
            $ref: '#/components/schemas/Address'
        required:
        - account_address
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        next_cursor: next_cursor
        total_count: 0
        account_address: null
        items:
        - resource_preference_rule: Allowed
          resource_address: resource_address
          last_updated_at_state_version: 60274561830704
        - resource_preference_rule: Allowed
          resource_address: resource_address
          last_updated_at_state_version: 60274561830704
    StateAccountAuthorizedDepositorsPageRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - $ref: '#/components/schemas/CursorLimitMixin'
      - properties:
          account_address:
            $ref: '#/components/schemas/Address'
        required:
        - account_address
        type: object
      example:
        account_address: null
    StateAccountAuthorizedDepositorsPageResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - $ref: '#/components/schemas/AccountAuthorizedDepositorsCollection'
      - properties:
          account_address:
            $ref: '#/components/schemas/Address'
        required:
        - account_address
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        next_cursor: next_cursor
        total_count: 0
        account_address: null
        items:
        - badge_type: ResourceBadge
        - badge_type: ResourceBadge
    StatePackageBlueprintPageRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - $ref: '#/components/schemas/CursorLimitMixin'
      - properties:
          package_address:
            $ref: '#/components/schemas/Address'
        required:
        - package_address
        type: object
      example:
        package_address: <package-address>
    StatePackageBlueprintPageResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - $ref: '#/components/schemas/PackageBlueprintCollection'
      - properties:
          package_address:
            $ref: '#/components/schemas/Address'
        required:
        - package_address
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        next_cursor: next_cursor
        package_address: null
        total_count: 0
        items:
        - dependant_entities:
          - null
          - null
          royalty_config_is_locked: true
          name: name
          definition: "{}"
          auth_template_is_locked: true
          royalty_config:
            is_enabled: true
            method_rules:
            - royalty_amount:
                amount: amount
                unit: XRD
              method_name: method_name
            - royalty_amount:
                amount: amount
                unit: XRD
              method_name: method_name
          version: version
          auth_template: "{}"
        - dependant_entities:
          - null
          - null
          royalty_config_is_locked: true
          name: name
          definition: "{}"
          auth_template_is_locked: true
          royalty_config:
            is_enabled: true
            method_rules:
            - royalty_amount:
                amount: amount
                unit: XRD
              method_name: method_name
            - royalty_amount:
                amount: amount
                unit: XRD
              method_name: method_name
          version: version
          auth_template: "{}"
    StatePackageCodePageRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - $ref: '#/components/schemas/CursorLimitMixin'
      - properties:
          package_address:
            $ref: '#/components/schemas/Address'
        required:
        - package_address
        type: object
      example:
        package_address: <package-address>
    StatePackageCodePageResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - $ref: '#/components/schemas/PackageCodeCollection'
      - properties:
          package_address:
            $ref: '#/components/schemas/Address'
        required:
        - package_address
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        next_cursor: next_cursor
        package_address: null
        total_count: 0
        items:
        - code_hex: code_hex
          vm_type: Native
          code_hash_hex: code_hash_hex
        - code_hex: code_hex
          vm_type: Native
          code_hash_hex: code_hash_hex
    StateEntityMetadataPageRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - $ref: '#/components/schemas/CursorLimitMixin'
      - properties:
          address:
            $ref: '#/components/schemas/Address'
        required:
        - address
        type: object
      example:
        address: <entity-address>
    StateEntityMetadataPageResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - $ref: '#/components/schemas/EntityMetadataCollection'
      - properties:
          address:
            $ref: '#/components/schemas/Address'
        required:
        - address
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        next_cursor: next_cursor
        address: null
        total_count: 0
        items:
        - is_locked: true
          value:
            typed:
              type: String
            raw_hex: raw_hex
            programmatic_json:
              type_name: type_name
              kind: Bool
              field_name: field_name
          key: key
          last_updated_at_state_version: 14658129805030
        - is_locked: true
          value:
            typed:
              type: String
            raw_hex: raw_hex
            programmatic_json:
              type_name: type_name
              kind: Bool
              field_name: field_name
          key: key
          last_updated_at_state_version: 14658129805030
    StateEntitySchemaPageRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - $ref: '#/components/schemas/CursorLimitMixin'
      - properties:
          address:
            $ref: '#/components/schemas/Address'
        required:
        - address
        type: object
      example:
        address: <package-address>
    StateEntitySchemaPageResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - $ref: '#/components/schemas/EntitySchemaCollection'
      - properties:
          address:
            $ref: '#/components/schemas/Address'
        required:
        - address
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        next_cursor: next_cursor
        address: null
        total_count: 0
        items:
        - schema_hash_hex: schema_hash_hex
          schema_hex: schema_hex
        - schema_hash_hex: schema_hash_hex
          schema_hex: schema_hex
    StateEntityFungiblesPageRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - $ref: '#/components/schemas/CursorLimitMixin'
      - properties:
          address:
            $ref: '#/components/schemas/Address'
          aggregation_level:
            $ref: '#/components/schemas/ResourceAggregationLevel'
          opt_ins:
            $ref: '#/components/schemas/StateEntityFungiblesPageRequestOptIns'
        required:
        - address
        type: object
      example:
        address: <component-entity-address>
    StateEntityFungiblesPageRequestOptIns:
      description: "Check detailed [OptIns](#section/Using-endpoints-with-opt-in-features)\
        \ documentation for more details"
      properties:
        explicit_metadata:
          description: "allows specifying explicitly metadata properties which should\
            \ be returned in response, limited to max 20 items."
          items:
            type: string
          type: array
      type: object
    StateEntityFungiblesPageResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - $ref: '#/components/schemas/FungibleResourcesCollection'
      - properties:
          address:
            $ref: '#/components/schemas/Address'
        required:
        - address
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        next_cursor: next_cursor
        address: null
        total_count: 0
        items:
        - aggregation_level: Global
          explicit_metadata:
            next_cursor: next_cursor
            total_count: 6
            items:
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
          resource_address: resource_address
        - aggregation_level: Global
          explicit_metadata:
            next_cursor: next_cursor
            total_count: 6
            items:
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
          resource_address: resource_address
    StateEntityFungibleResourceVaultsPageRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - $ref: '#/components/schemas/CursorLimitMixin'
      - properties:
          address:
            $ref: '#/components/schemas/Address'
          resource_address:
            $ref: '#/components/schemas/Address'
        required:
        - address
        - resource_address
        type: object
      example:
        address: <component-entity-address>
        resource_address: <resource-address>
    StateEntityFungibleResourceVaultsPageResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - $ref: '#/components/schemas/FungibleResourcesCollectionItemVaultAggregatedVault'
      - properties:
          address:
            $ref: '#/components/schemas/Address'
          resource_address:
            $ref: '#/components/schemas/Address'
        required:
        - address
        - resource_address
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        next_cursor: next_cursor
        address: null
        total_count: 0
        items:
        - amount: amount
          vault_address: vault_address
          last_updated_at_state_version: 60274561830704
        - amount: amount
          vault_address: vault_address
          last_updated_at_state_version: 60274561830704
        resource_address: null
    StateEntityNonFungiblesPageRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - $ref: '#/components/schemas/CursorLimitMixin'
      - properties:
          address:
            $ref: '#/components/schemas/Address'
          aggregation_level:
            $ref: '#/components/schemas/ResourceAggregationLevel'
          opt_ins:
            $ref: '#/components/schemas/StateEntityNonFungiblesPageRequestOptIns'
        required:
        - address
        type: object
      example:
        address: <component-entity-address>
    StateEntityNonFungiblesPageRequestOptIns:
      description: "Check detailed [OptIns](#section/Using-endpoints-with-opt-in-features)\
        \ documentation for more details"
      properties:
        non_fungible_include_nfids:
          default: false
          description: "if set to `true`, first page of non fungible ids are returned\
            \ for each non fungible resource, with cursor which can be later used\
            \ at `/state/entity/page/non-fungible-vault/ids` endpoint."
          type: boolean
        explicit_metadata:
          description: "allows specifying explicitly metadata properties which should\
            \ be returned in response, limited to max 20 items."
          items:
            type: string
          type: array
      type: object
    StateEntityNonFungiblesPageResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - $ref: '#/components/schemas/NonFungibleResourcesCollection'
      - properties:
          address:
            $ref: '#/components/schemas/Address'
        required:
        - address
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        next_cursor: next_cursor
        address: null
        total_count: 0
        items:
        - aggregation_level: null
          explicit_metadata:
            next_cursor: next_cursor
            total_count: 6
            items:
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
          resource_address: resource_address
        - aggregation_level: null
          explicit_metadata:
            next_cursor: next_cursor
            total_count: 6
            items:
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
            - is_locked: true
              value:
                typed:
                  type: String
                raw_hex: raw_hex
                programmatic_json:
                  type_name: type_name
                  kind: Bool
                  field_name: field_name
              key: key
              last_updated_at_state_version: 14658129805030
          resource_address: resource_address
    StateEntityNonFungibleResourceVaultsPageRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - $ref: '#/components/schemas/CursorLimitMixin'
      - properties:
          address:
            $ref: '#/components/schemas/Address'
          resource_address:
            $ref: '#/components/schemas/Address'
          opt_ins:
            $ref: '#/components/schemas/StateEntityNonFungibleResourceVaultsPageOptIns'
        required:
        - address
        - resource_address
        type: object
      example:
        address: <component-entity-address>
        resource_address: <resource-address>
    StateEntityNonFungibleResourceVaultsPageOptIns:
      description: "Check detailed [OptIns](#section/Using-endpoints-with-opt-in-features)\
        \ documentation for more details"
      properties:
        non_fungible_include_nfids:
          description: "if set to `true`, first page of non fungible ids are returned\
            \ for each non fungible resource, with cursor which can be later used\
            \ at `/state/entity/page/non-fungible-vault/ids` endpoint."
          type: boolean
      type: object
    StateEntityNonFungibleResourceVaultsPageResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - $ref: '#/components/schemas/NonFungibleResourcesCollectionItemVaultAggregatedVault'
      - properties:
          address:
            $ref: '#/components/schemas/Address'
          resource_address:
            $ref: '#/components/schemas/Address'
        required:
        - address
        - resource_address
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        next_cursor: next_cursor
        address: null
        total_count: 0
        items:
        - next_cursor: next_cursor
          total_count: 1
          vault_address: null
          items:
          - null
          - null
          last_updated_at_state_version: null
        - next_cursor: next_cursor
          total_count: 1
          vault_address: null
          items:
          - null
          - null
          last_updated_at_state_version: null
        resource_address: null
    StateEntityNonFungibleIdsPageRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - $ref: '#/components/schemas/CursorLimitMixin'
      - properties:
          address:
            $ref: '#/components/schemas/Address'
          vault_address:
            $ref: '#/components/schemas/Address'
          resource_address:
            $ref: '#/components/schemas/Address'
        required:
        - address
        - resource_address
        - vault_address
        type: object
      example:
        address: <component-entity-address>
        resource_address: null
        vault_address: null
    StateEntityNonFungibleIdsPageResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - $ref: '#/components/schemas/NonFungibleIdsCollection'
      - properties:
          address:
            $ref: '#/components/schemas/Address'
          resource_address:
            $ref: '#/components/schemas/Address'
        required:
        - address
        - resource_address
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        next_cursor: next_cursor
        address: null
        total_count: 0
        items:
        - null
        - null
        resource_address: null
    StateNonFungibleIdsRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - $ref: '#/components/schemas/CursorLimitMixin'
      - properties:
          resource_address:
            $ref: '#/components/schemas/Address'
        required:
        - resource_address
        type: object
      example:
        resource_address: <non-fungible-entity-address>
    StateNonFungibleIdsResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - properties:
          resource_address:
            $ref: '#/components/schemas/Address'
          non_fungible_ids:
            $ref: '#/components/schemas/NonFungibleIdsCollection'
        required:
        - non_fungible_ids
        - resource_address
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        non_fungible_ids:
          next_cursor: next_cursor
          total_count: 0
          items:
          - null
          - null
        resource_address: null
    StateNonFungibleLocationRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - properties:
          resource_address:
            $ref: '#/components/schemas/Address'
          non_fungible_ids:
            description: limited to max 100 items.
            items:
              $ref: '#/components/schemas/NonFungibleId'
            type: array
        required:
        - non_fungible_ids
        - resource_address
        type: object
      example:
        resource_address: <non-fungible-entity-address>
        non_fungible_ids:
        - '#1#'
    StateNonFungibleLocationResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - properties:
          resource_address:
            $ref: '#/components/schemas/Address'
          non_fungible_ids:
            items:
              $ref: '#/components/schemas/StateNonFungibleLocationResponseItem'
            type: array
        required:
        - non_fungible_ids
        - resource_address
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        non_fungible_ids:
        - owning_vault_parent_ancestor_address: owning_vault_parent_ancestor_address
          owning_vault_global_ancestor_address: owning_vault_global_ancestor_address
          non_fungible_id: non_fungible_id
          owning_vault_address: owning_vault_address
          is_burned: true
          last_updated_at_state_version: 8008281904611
        - owning_vault_parent_ancestor_address: owning_vault_parent_ancestor_address
          owning_vault_global_ancestor_address: owning_vault_global_ancestor_address
          non_fungible_id: non_fungible_id
          owning_vault_address: owning_vault_address
          is_burned: true
          last_updated_at_state_version: 8008281904611
        resource_address: null
    StateNonFungibleLocationResponseItem:
      example:
        owning_vault_parent_ancestor_address: owning_vault_parent_ancestor_address
        owning_vault_global_ancestor_address: owning_vault_global_ancestor_address
        non_fungible_id: non_fungible_id
        owning_vault_address: owning_vault_address
        is_burned: true
        last_updated_at_state_version: 8008281904611
      properties:
        non_fungible_id:
          description: String-encoded non-fungible ID.
          type: string
        owning_vault_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        owning_vault_parent_ancestor_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        owning_vault_global_ancestor_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        is_burned:
          type: boolean
        last_updated_at_state_version:
          description: The most recent state version underlying object was modified
            at.
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
      required:
      - is_burned
      - last_updated_at_state_version
      - non_fungible_id
      type: object
    StateNonFungibleDataRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - properties:
          resource_address:
            $ref: '#/components/schemas/Address'
          non_fungible_ids:
            description: limited to max 100 items.
            items:
              $ref: '#/components/schemas/NonFungibleId'
            type: array
        required:
        - non_fungible_ids
        - resource_address
        type: object
      example:
        resource_address: <non-fungible-entity-address>
        non_fungible_ids:
        - '#1#'
    StateNonFungibleDataResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - properties:
          resource_address:
            $ref: '#/components/schemas/Address'
          non_fungible_id_type:
            $ref: '#/components/schemas/NonFungibleIdType'
          non_fungible_ids:
            items:
              $ref: '#/components/schemas/StateNonFungibleDetailsResponseItem'
            type: array
        required:
        - non_fungible_id_type
        - non_fungible_ids
        - resource_address
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        non_fungible_ids:
        - data:
            raw_hex: raw_hex
            programmatic_json:
              type_name: type_name
              kind: Bool
              field_name: field_name
          non_fungible_id: non_fungible_id
          is_burned: true
          last_updated_at_state_version: 8008281904611
        - data:
            raw_hex: raw_hex
            programmatic_json:
              type_name: type_name
              kind: Bool
              field_name: field_name
          non_fungible_id: non_fungible_id
          is_burned: true
          last_updated_at_state_version: 8008281904611
        resource_address: null
        non_fungible_id_type: String
    StateNonFungibleDetailsResponseItem:
      example:
        data:
          raw_hex: raw_hex
          programmatic_json:
            type_name: type_name
            kind: Bool
            field_name: field_name
        non_fungible_id: non_fungible_id
        is_burned: true
        last_updated_at_state_version: 8008281904611
      properties:
        is_burned:
          type: boolean
        non_fungible_id:
          description: String-encoded non-fungible ID.
          type: string
        data:
          $ref: '#/components/schemas/ScryptoSborValue'
        last_updated_at_state_version:
          description: The most recent state version underlying object was modified
            at.
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
      required:
      - is_burned
      - last_updated_at_state_version
      - non_fungible_id
      type: object
    StateKeyValueStoreKeysRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - $ref: '#/components/schemas/CursorLimitMixin'
      - properties:
          key_value_store_address:
            $ref: '#/components/schemas/Address'
        required:
        - key_value_store_address
        type: object
      example:
        key_value_store_address: <key-value-store-address>
    StateKeyValueStoreKeysResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - $ref: '#/components/schemas/StateKeyValueStoreKeysCollection'
      - properties:
          key_value_store_address:
            $ref: '#/components/schemas/Address'
        required:
        - key_value_store_address
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        next_cursor: next_cursor
        key_value_store_address: null
        total_count: 0
        items:
        - key:
            raw_hex: raw_hex
            programmatic_json:
              type_name: type_name
              kind: Bool
              field_name: field_name
          last_updated_at_state_version: 60274561830704
        - key:
            raw_hex: raw_hex
            programmatic_json:
              type_name: type_name
              kind: Bool
              field_name: field_name
          last_updated_at_state_version: 60274561830704
    StateKeyValueStoreKeysCollection:
      allOf:
      - $ref: '#/components/schemas/ResultSetCursorMixin'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/StateKeyValueStoreKeysResponseItem'
            type: array
        required:
        - items
        type: object
      description: Key value store items collection.
    StateKeyValueStoreKeysResponseItem:
      example:
        key:
          raw_hex: raw_hex
          programmatic_json:
            type_name: type_name
            kind: Bool
            field_name: field_name
        last_updated_at_state_version: 60274561830704
      properties:
        key:
          $ref: '#/components/schemas/ScryptoSborValue'
        last_updated_at_state_version:
          description: The most recent state version underlying object was modified
            at.
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
      required:
      - key
      - last_updated_at_state_version
      type: object
    StateKeyValueStoreDataRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - properties:
          key_value_store_address:
            $ref: '#/components/schemas/Address'
          keys:
            description: limited to max 100 items.
            items:
              $ref: '#/components/schemas/StateKeyValueStoreDataRequestKeyItem'
            type: array
        required:
        - key_value_store_address
        - keys
        type: object
      example:
        key_value_store_address: <key-value-store-address>
        keys:
        - key_hex: 5C21010901000000
        - key_json:
            kind: Tuple
            fields:
            - kind: U32
              value: "1"
    StateKeyValueStoreDataRequestKeyItem:
      description: "Provide either `key_hex` or `key_json`. If both are provided,\
        \ `key_hex` is used and `key_json` is ignored."
      properties:
        key_hex:
          description: Hex-encoded binary blob.
          type: string
        key_json:
          $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      type: object
    StateKeyValueStoreDataResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - properties:
          key_value_store_address:
            $ref: '#/components/schemas/Address'
          entries:
            items:
              $ref: '#/components/schemas/StateKeyValueStoreDataResponseItem'
            type: array
        required:
        - entries
        - key_value_store_address
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        key_value_store_address: null
        entries:
        - is_locked: true
          value:
            raw_hex: raw_hex
            programmatic_json:
              type_name: type_name
              kind: Bool
              field_name: field_name
          key:
            raw_hex: raw_hex
            programmatic_json:
              type_name: type_name
              kind: Bool
              field_name: field_name
          last_updated_at_state_version: 8008281904611
        - is_locked: true
          value:
            raw_hex: raw_hex
            programmatic_json:
              type_name: type_name
              kind: Bool
              field_name: field_name
          key:
            raw_hex: raw_hex
            programmatic_json:
              type_name: type_name
              kind: Bool
              field_name: field_name
          last_updated_at_state_version: 8008281904611
    StateKeyValueStoreDataResponseItem:
      example:
        is_locked: true
        value:
          raw_hex: raw_hex
          programmatic_json:
            type_name: type_name
            kind: Bool
            field_name: field_name
        key:
          raw_hex: raw_hex
          programmatic_json:
            type_name: type_name
            kind: Bool
            field_name: field_name
        last_updated_at_state_version: 8008281904611
      properties:
        key:
          $ref: '#/components/schemas/ScryptoSborValue'
        value:
          $ref: '#/components/schemas/ScryptoSborValue'
        last_updated_at_state_version:
          description: The most recent state version underlying object was modified
            at.
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        is_locked:
          type: boolean
      required:
      - is_locked
      - key
      - last_updated_at_state_version
      - value
      type: object
    StateAccountLockerPageVaultsRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - $ref: '#/components/schemas/CursorLimitMixin'
      - $ref: '#/components/schemas/AccountLockerAddress'
      example:
        locker_address: <locker-address>
        account_address: <account-address>
    StateAccountLockerPageVaultsResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - $ref: '#/components/schemas/AccountLockerVaultCollection'
      - $ref: '#/components/schemas/AccountLockerAddress'
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        next_cursor: next_cursor
        total_count: 0
        locker_address: locker_address
        account_address: account_address
        items:
        - vault_address: vault_address
          type: Fungible
          resource_address: resource_address
          last_updated_at_state_version: 60274561830704
        - vault_address: vault_address
          type: Fungible
          resource_address: resource_address
          last_updated_at_state_version: 60274561830704
    StateAccountLockersTouchedAtRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - properties:
          account_lockers:
            items:
              $ref: '#/components/schemas/AccountLockerAddress'
            type: array
        required:
        - account_lockers
        type: object
      example:
        account_lockers:
        - locker_address: <locker-address>
          account_address: <account-address>
    StateAccountLockersTouchedAtResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/StateAccountLockersTouchedAtResponseItem'
            type: array
        required:
        - items
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        items:
        - last_touched_at_state_version: null
          locker_address: locker_address
          account_address: account_address
        - last_touched_at_state_version: null
          locker_address: locker_address
          account_address: account_address
    StateAccountLockersTouchedAtResponseItem:
      allOf:
      - $ref: '#/components/schemas/AccountLockerAddress'
      - properties:
          last_touched_at_state_version:
            $ref: '#/components/schemas/LastUpdatedAtStateVersion'
        required:
        - last_touched_at_state_version
        type: object
      example:
        last_touched_at_state_version: null
        locker_address: locker_address
        account_address: account_address
    StateValidatorsListRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - properties:
          cursor:
            description: "This cursor allows forward pagination, by providing the\
              \ cursor from the previous request."
            nullable: true
            type: string
        type: object
      example:
        at_ledger_state: null
    StateValidatorsListResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - properties:
          validators:
            $ref: '#/components/schemas/ValidatorCollection'
        required:
        - validators
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        validators:
          next_cursor: next_cursor
          total_count: 0
          items:
          - stake_vault:
              address: address
              balance: balance
              last_changed_at_state_version: 6
            metadata:
              next_cursor: next_cursor
              total_count: 6
              items:
              - is_locked: true
                value:
                  typed:
                    type: String
                  raw_hex: raw_hex
                  programmatic_json:
                    type_name: type_name
                    kind: Bool
                    field_name: field_name
                key: key
                last_updated_at_state_version: 14658129805030
              - is_locked: true
                value:
                  typed:
                    type: String
                  raw_hex: raw_hex
                  programmatic_json:
                    type_name: type_name
                    kind: Bool
                    field_name: field_name
                key: key
                last_updated_at_state_version: 14658129805030
            address: address
            pending_xrd_withdraw_vault:
              address: address
              balance: balance
              last_changed_at_state_version: 6
            effective_fee_factor:
              current:
                fee_factor: fee_factor
              pending:
                fee_factor: fee_factor
                effective_at_epoch: 5962133916
            pending_owner_stake_unit_unlock_vault:
              address: address
              balance: balance
              last_changed_at_state_version: 6
            locked_owner_stake_unit_vault:
              address: address
              balance: balance
              last_changed_at_state_version: 6
            state: "{}"
            active_in_epoch:
              stake: stake
              stake_percentage: 1.4658129805029452
              key:
                key_type: EcdsaSecp256k1
          - stake_vault:
              address: address
              balance: balance
              last_changed_at_state_version: 6
            metadata:
              next_cursor: next_cursor
              total_count: 6
              items:
              - is_locked: true
                value:
                  typed:
                    type: String
                  raw_hex: raw_hex
                  programmatic_json:
                    type_name: type_name
                    kind: Bool
                    field_name: field_name
                key: key
                last_updated_at_state_version: 14658129805030
              - is_locked: true
                value:
                  typed:
                    type: String
                  raw_hex: raw_hex
                  programmatic_json:
                    type_name: type_name
                    kind: Bool
                    field_name: field_name
                key: key
                last_updated_at_state_version: 14658129805030
            address: address
            pending_xrd_withdraw_vault:
              address: address
              balance: balance
              last_changed_at_state_version: 6
            effective_fee_factor:
              current:
                fee_factor: fee_factor
              pending:
                fee_factor: fee_factor
                effective_at_epoch: 5962133916
            pending_owner_stake_unit_unlock_vault:
              address: address
              balance: balance
              last_changed_at_state_version: 6
            locked_owner_stake_unit_vault:
              address: address
              balance: balance
              last_changed_at_state_version: 6
            state: "{}"
            active_in_epoch:
              stake: stake
              stake_percentage: 1.4658129805029452
              key:
                key_type: EcdsaSecp256k1
    ValidatorsUptimeRequest:
      allOf:
      - $ref: '#/components/schemas/AtLedgerStateMixin'
      - $ref: '#/components/schemas/FromLedgerStateMixin'
      - properties:
          validator_addresses:
            items:
              $ref: '#/components/schemas/Address'
            type: array
        type: object
      description: |
        For `at_ledger_state` and `from_ledger_state` you can use one of `state_version`, `epoch`, `epoch` and `round`, or `timestamp`, but then ongoing epoch will be selected and used for querying data.
        i.e for request with `{ "from_state_version" = { "state_version" = 100 }, "at_state_version" = { "state_version" = 300} }` gateway api will check in which epoch transactions with state version 100 and 300 were and then use that as inclusive boundary for request.
      example:
        at_ledger_state:
          state_version: 8008281904611
          round: 1465812980
          epoch: 6027456183
          timestamp: 2000-01-23T04:56:07.000+00:00
        from_ledger_state:
          state_version: 8008281904611
          round: 1465812980
          epoch: 6027456183
          timestamp: 2000-01-23T04:56:07.000+00:00
        validator_addresses:
        - null
        - null
    ValidatorsUptimeResponse:
      allOf:
      - $ref: '#/components/schemas/LedgerStateMixin'
      - properties:
          validators:
            $ref: '#/components/schemas/ValidatorUptimeCollection'
        required:
        - validators
        type: object
      example:
        ledger_state:
          state_version: 0
          round: 1
          proposer_round_timestamp: proposer_round_timestamp
          epoch: 6
          network: <network-name>
        validators:
          items:
          - epochs_active_in: 1
            address: address
            proposals_missed: 6
            proposals_made: 0
          - epochs_active_in: 1
            address: address
            proposals_missed: 6
            proposals_made: 0
    ResourceHoldersRequest:
      allOf:
      - $ref: '#/components/schemas/CursorLimitMixin'
      - properties:
          resource_address:
            $ref: '#/components/schemas/Address'
        type: object
      example:
        limit_per_page: 100
        resource_address: <resource-address>
    ResourceHoldersResponse:
      allOf:
      - $ref: '#/components/schemas/ResourceHoldersCollection'
      example:
        next_cursor: next_cursor
        total_count: 0
        items:
        - holder_address: holder_address
          type: FungibleResource
          last_updated_at_state_version: 6
        - holder_address: holder_address
          type: FungibleResource
          last_updated_at_state_version: 6
    ErrorResponse:
      example:
        trace_id: trace_id
        code: 0
        details:
          type: type
        message: message
      properties:
        message:
          description: A human-readable error message.
          type: string
        code:
          description: A numeric code corresponding to the given error type.
          type: integer
        details:
          $ref: '#/components/schemas/GatewayError'
        trace_id:
          description: "A unique request identifier to be used when reporting errors,\
            \ to allow correlation with the Gateway API's error logs."
          type: string
      required:
      - message
      type: object
    GatewayError:
      discriminator:
        mapping:
          AccountLockerNotFoundError: '#/components/schemas/AccountLockerNotFoundError'
          EntityNotFoundError: '#/components/schemas/EntityNotFoundError'
          InvalidEntityError: '#/components/schemas/InvalidEntityError'
          NotSyncedUpError: '#/components/schemas/NotSyncedUpError'
          InvalidRequestError: '#/components/schemas/InvalidRequestError'
          InvalidTransactionError: '#/components/schemas/InvalidTransactionError'
          TransactionNotFoundError: '#/components/schemas/TransactionNotFoundError'
          InternalServerError: '#/components/schemas/InternalServerError'
        propertyName: type
      example:
        type: type
      properties:
        type:
          description: The type of error. Each subtype may have its own additional
            structured fields.
          type: string
      required:
      - type
      type: object
    AccountLockerNotFoundError:
      allOf:
      - $ref: '#/components/schemas/GatewayError'
      - $ref: '#/components/schemas/AccountLockerAddress'
    EntityNotFoundError:
      allOf:
      - $ref: '#/components/schemas/GatewayError'
      - properties:
          address:
            $ref: '#/components/schemas/Address'
        required:
        - address
        type: object
    InvalidEntityError:
      allOf:
      - $ref: '#/components/schemas/GatewayError'
      - properties:
          address:
            $ref: '#/components/schemas/Address'
        required:
        - address
        type: object
    NotSyncedUpError:
      allOf:
      - $ref: '#/components/schemas/GatewayError'
      - properties:
          request_type:
            description: The request type that triggered this exception.
            type: string
          current_sync_delay_seconds:
            description: The current delay between the Gateway DB and the network
              ledger round timestamp.
            format: int64
            type: integer
          max_allowed_sync_delay_seconds:
            description: The maximum allowed delay between the Gateway DB and the
              network ledger round timestamp for this `request_type`.
            format: int64
            type: integer
        required:
        - current_sync_delay_seconds
        - max_allowed_sync_delay_seconds
        - request_type
        type: object
    InvalidRequestError:
      allOf:
      - $ref: '#/components/schemas/GatewayError'
      - properties:
          validation_errors:
            description: One or more validation errors which occurred when validating
              the request.
            items:
              $ref: '#/components/schemas/ValidationErrorsAtPath'
            type: array
        required:
        - validation_errors
        type: object
    InvalidTransactionError:
      allOf:
      - $ref: '#/components/schemas/GatewayError'
      - type: object
    TransactionNotFoundError:
      allOf:
      - $ref: '#/components/schemas/GatewayError'
      - properties:
          intent_hash:
            $ref: '#/components/schemas/HashBech32mString'
        required:
        - intent_hash
        type: object
    InternalServerError:
      allOf:
      - $ref: '#/components/schemas/GatewayError'
      - properties:
          exception:
            description: Gives an error type which occurred within the Gateway API
              when serving the request.
            type: string
          cause:
            description: Gives a human readable message - likely just a trace ID for
              reporting the error.
            type: string
        required:
        - cause
        - exception
        type: object
    ValidationErrorsAtPath:
      properties:
        path:
          type: string
        errors:
          items:
            type: string
          type: array
      required:
      - errors
      - path
      type: object
    NativeResourceUnitRedemptionValue:
      items:
        $ref: '#/components/schemas/NativeResourceRedemptionValueItem'
      type: array
    NativeResourceRedemptionValueItem:
      properties:
        resource_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        amount:
          description: String-encoded decimal representing the amount of a related
            fungible resource.
          type: string
      required:
      - resource_address
      type: object
    NativeResourceKind:
      enum:
      - Xrd
      - PackageOwnerBadge
      - AccountOwnerBadge
      - IdentityOwnerBadge
      - ValidatorOwnerBadge
      - Secp256k1SignatureResource
      - Ed25519SignatureResource
      - GlobalCallerResource
      - PackageOfDirectCallerResource
      - SystemExecutionResource
      - ValidatorLiquidStakeUnit
      - ValidatorClaimNft
      - OneResourcePoolUnit
      - TwoResourcePoolUnit
      - MultiResourcePoolUnit
      - AccessControllerRecoveryBadge
      type: string
    NativeResourceDetails:
      discriminator:
        mapping:
          Xrd: '#/components/schemas/NativeResourceXrdValue'
          PackageOwnerBadge: '#/components/schemas/NativeResourcePackageOwnerBadgeValue'
          AccountOwnerBadge: '#/components/schemas/NativeResourceAccountOwnerBadgeValue'
          IdentityOwnerBadge: '#/components/schemas/NativeResourceIdentityOwnerBadgeValue'
          ValidatorOwnerBadge: '#/components/schemas/NativeResourceValidatorOwnerBadgeValue'
          Secp256k1SignatureResource: '#/components/schemas/NativeResourceSecp256k1SignatureResourceValue'
          Ed25519SignatureResource: '#/components/schemas/NativeResourceEd25519SignatureResourceValue'
          GlobalCallerResource: '#/components/schemas/NativeResourceGlobalCallerResourceValue'
          PackageOfDirectCallerResource: '#/components/schemas/NativeResourcePackageOfDirectCallerResourceValue'
          SystemExecutionResource: '#/components/schemas/NativeResourceSystemExecutionResourceValue'
          ValidatorLiquidStakeUnit: '#/components/schemas/NativeResourceValidatorLiquidStakeUnitValue'
          ValidatorClaimNft: '#/components/schemas/NativeResourceValidatorClaimNftValue'
          OneResourcePoolUnit: '#/components/schemas/NativeResourceOneResourcePoolUnitValue'
          TwoResourcePoolUnit: '#/components/schemas/NativeResourceTwoResourcePoolUnitValue'
          MultiResourcePoolUnit: '#/components/schemas/NativeResourceMultiResourcePoolUnitValue'
          AccessControllerRecoveryBadge: '#/components/schemas/NativeResourceAccessControllerRecoveryBadgeValue'
        propertyName: kind
      properties:
        kind:
          $ref: '#/components/schemas/NativeResourceKind'
      required:
      - kind
      type: object
    NativeResourceXrdValue:
      allOf:
      - $ref: '#/components/schemas/NativeResourceDetails'
      - type: object
    NativeResourcePackageOwnerBadgeValue:
      allOf:
      - $ref: '#/components/schemas/NativeResourceDetails'
      - type: object
    NativeResourceAccountOwnerBadgeValue:
      allOf:
      - $ref: '#/components/schemas/NativeResourceDetails'
      - type: object
    NativeResourceIdentityOwnerBadgeValue:
      allOf:
      - $ref: '#/components/schemas/NativeResourceDetails'
      - type: object
    NativeResourceValidatorOwnerBadgeValue:
      allOf:
      - $ref: '#/components/schemas/NativeResourceDetails'
      - type: object
    NativeResourceSecp256k1SignatureResourceValue:
      allOf:
      - $ref: '#/components/schemas/NativeResourceDetails'
      - type: object
    NativeResourceEd25519SignatureResourceValue:
      allOf:
      - $ref: '#/components/schemas/NativeResourceDetails'
      - type: object
    NativeResourceGlobalCallerResourceValue:
      allOf:
      - $ref: '#/components/schemas/NativeResourceDetails'
      - type: object
    NativeResourcePackageOfDirectCallerResourceValue:
      allOf:
      - $ref: '#/components/schemas/NativeResourceDetails'
      - type: object
    NativeResourceSystemExecutionResourceValue:
      allOf:
      - $ref: '#/components/schemas/NativeResourceDetails'
      - type: object
    NativeResourceValidatorLiquidStakeUnitValue:
      allOf:
      - $ref: '#/components/schemas/NativeResourceDetails'
      - properties:
          validator_address:
            $ref: '#/components/schemas/Address'
          redemption_resource_count:
            type: integer
          unit_redemption_value:
            $ref: '#/components/schemas/NativeResourceUnitRedemptionValue'
        required:
        - redemption_resource_count
        - unit_redemption_value
        - validator_address
        type: object
    NativeResourceValidatorClaimNftValue:
      allOf:
      - $ref: '#/components/schemas/NativeResourceDetails'
      - properties:
          validator_address:
            $ref: '#/components/schemas/Address'
        required:
        - validator_address
        type: object
    NativeResourceOneResourcePoolUnitValue:
      allOf:
      - $ref: '#/components/schemas/NativeResourceDetails'
      - properties:
          pool_address:
            $ref: '#/components/schemas/Address'
          redemption_resource_count:
            type: integer
          unit_redemption_value:
            $ref: '#/components/schemas/NativeResourceUnitRedemptionValue'
        required:
        - pool_address
        - redemption_resource_count
        - unit_redemption_value
        type: object
    NativeResourceTwoResourcePoolUnitValue:
      allOf:
      - $ref: '#/components/schemas/NativeResourceDetails'
      - properties:
          pool_address:
            $ref: '#/components/schemas/Address'
          redemption_resource_count:
            type: integer
          unit_redemption_value:
            $ref: '#/components/schemas/NativeResourceUnitRedemptionValue'
        required:
        - pool_address
        - redemption_resource_count
        - unit_redemption_value
        type: object
    NativeResourceMultiResourcePoolUnitValue:
      allOf:
      - $ref: '#/components/schemas/NativeResourceDetails'
      - properties:
          pool_address:
            $ref: '#/components/schemas/Address'
          redemption_resource_count:
            type: integer
          unit_redemption_value:
            $ref: '#/components/schemas/NativeResourceUnitRedemptionValue'
        required:
        - pool_address
        - redemption_resource_count
        - unit_redemption_value
        type: object
    NativeResourceAccessControllerRecoveryBadgeValue:
      allOf:
      - $ref: '#/components/schemas/NativeResourceDetails'
      - properties:
          access_controller_address:
            $ref: '#/components/schemas/Address'
        required:
        - access_controller_address
        type: object
    MetadataValueType:
      enum:
      - String
      - Bool
      - U8
      - U32
      - U64
      - I32
      - I64
      - Decimal
      - GlobalAddress
      - PublicKey
      - NonFungibleGlobalId
      - NonFungibleLocalId
      - Instant
      - Url
      - Origin
      - PublicKeyHash
      - StringArray
      - BoolArray
      - U8Array
      - U32Array
      - U64Array
      - I32Array
      - I64Array
      - DecimalArray
      - GlobalAddressArray
      - PublicKeyArray
      - NonFungibleGlobalIdArray
      - NonFungibleLocalIdArray
      - InstantArray
      - UrlArray
      - OriginArray
      - PublicKeyHashArray
      type: string
    MetadataTypedValue:
      discriminator:
        mapping:
          String: '#/components/schemas/MetadataStringValue'
          Bool: '#/components/schemas/MetadataBoolValue'
          U8: '#/components/schemas/MetadataU8Value'
          U32: '#/components/schemas/MetadataU32Value'
          U64: '#/components/schemas/MetadataU64Value'
          I32: '#/components/schemas/MetadataI32Value'
          I64: '#/components/schemas/MetadataI64Value'
          Decimal: '#/components/schemas/MetadataDecimalValue'
          GlobalAddress: '#/components/schemas/MetadataGlobalAddressValue'
          PublicKey: '#/components/schemas/MetadataPublicKeyValue'
          NonFungibleGlobalId: '#/components/schemas/MetadataNonFungibleGlobalIdValue'
          NonFungibleLocalId: '#/components/schemas/MetadataNonFungibleLocalIdValue'
          Instant: '#/components/schemas/MetadataInstantValue'
          Url: '#/components/schemas/MetadataUrlValue'
          Origin: '#/components/schemas/MetadataOriginValue'
          PublicKeyHash: '#/components/schemas/MetadataPublicKeyHashValue'
          StringArray: '#/components/schemas/MetadataStringArrayValue'
          BoolArray: '#/components/schemas/MetadataBoolArrayValue'
          U8Array: '#/components/schemas/MetadataU8ArrayValue'
          U32Array: '#/components/schemas/MetadataU32ArrayValue'
          U64Array: '#/components/schemas/MetadataU64ArrayValue'
          I32Array: '#/components/schemas/MetadataI32ArrayValue'
          I64Array: '#/components/schemas/MetadataI64ArrayValue'
          DecimalArray: '#/components/schemas/MetadataDecimalArrayValue'
          GlobalAddressArray: '#/components/schemas/MetadataGlobalAddressArrayValue'
          PublicKeyArray: '#/components/schemas/MetadataPublicKeyArrayValue'
          NonFungibleGlobalIdArray: '#/components/schemas/MetadataNonFungibleGlobalIdArrayValue'
          NonFungibleLocalIdArray: '#/components/schemas/MetadataNonFungibleLocalIdArrayValue'
          InstantArray: '#/components/schemas/MetadataInstantArrayValue'
          UrlArray: '#/components/schemas/MetadataUrlArrayValue'
          OriginArray: '#/components/schemas/MetadataOriginArrayValue'
          PublicKeyHashArray: '#/components/schemas/MetadataPublicKeyHashArrayValue'
        propertyName: type
      example:
        type: String
      properties:
        type:
          $ref: '#/components/schemas/MetadataValueType'
      required:
      - type
      type: object
    MetadataStringValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    MetadataBoolValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          value:
            type: boolean
        required:
        - value
        type: object
    MetadataU8Value:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    MetadataU32Value:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    MetadataU64Value:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    MetadataI32Value:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    MetadataI64Value:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    MetadataDecimalValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    MetadataGlobalAddressValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    MetadataPublicKeyValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          value:
            $ref: '#/components/schemas/PublicKey'
        required:
        - value
        type: object
    MetadataNonFungibleGlobalIdValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          resource_address:
            $ref: '#/components/schemas/Address'
          non_fungible_id:
            $ref: '#/components/schemas/NonFungibleId'
        required:
        - non_fungible_id
        - resource_address
        type: object
    MetadataNonFungibleLocalIdValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    MetadataInstantValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          value:
            description: |
              The RFC 3339 / ISO 8601 string representation of the timestamp. Will always use "Z" (denoting UTC) and omits milliseconds. E.g.: `2023-01-26T18:30:09Z`.

              Note: This field will return clamped value if the actual on-ledger `unix_timestamp_seconds` value is outside the basic range supported by the RFC 3339 / ISO 8601 standard,
              which starts at year 1583 (i.e. the beginning of the Gregorian calendar) and ends at year 9999 (inclusive).
            type: string
          unix_timestamp_seconds:
            description: |
              A decimal string-encoded 64-bit signed integer, marking the unix timestamp in seconds.

              Note: this field accurately represents the full range of possible on-ledger values (i.e. `-2^63 <= seconds < 2^63`).
            type: string
        required:
        - unix_timestamp_seconds
        - value
        type: object
    MetadataUrlValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    MetadataOriginValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    MetadataPublicKeyHashValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          value:
            $ref: '#/components/schemas/PublicKeyHash'
        required:
        - value
        type: object
    MetadataStringArrayValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          values:
            items:
              type: string
            type: array
        required:
        - values
        type: object
    MetadataBoolArrayValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          values:
            items:
              type: boolean
            type: array
        required:
        - values
        type: object
    MetadataU8ArrayValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          value_hex:
            type: string
        required:
        - value_hex
        type: object
    MetadataU32ArrayValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          values:
            items:
              type: string
            type: array
        required:
        - values
        type: object
    MetadataU64ArrayValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          values:
            items:
              type: string
            type: array
        required:
        - values
        type: object
    MetadataI32ArrayValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          values:
            items:
              type: string
            type: array
        required:
        - values
        type: object
    MetadataI64ArrayValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          values:
            items:
              type: string
            type: array
        required:
        - values
        type: object
    MetadataDecimalArrayValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          values:
            items:
              type: string
            type: array
        required:
        - values
        type: object
    MetadataGlobalAddressArrayValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          values:
            items:
              type: string
            type: array
        required:
        - values
        type: object
    MetadataPublicKeyArrayValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          values:
            items:
              $ref: '#/components/schemas/PublicKey'
            type: array
        required:
        - values
        type: object
    MetadataNonFungibleGlobalIdArrayValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          values:
            items:
              $ref: '#/components/schemas/MetadataNonFungibleGlobalIdArrayValue_allOf_values'
            type: array
        required:
        - values
        type: object
    MetadataNonFungibleLocalIdArrayValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          values:
            items:
              type: string
            type: array
        required:
        - values
        type: object
    MetadataInstantArrayValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - description: |
          See documentation of `MetadataInstantValue` for detailed description of `values` vs `values_unix_timestamp_seconds`.
        properties:
          values:
            items:
              type: string
            type: array
          values_unix_timestamp_seconds:
            items:
              type: string
            type: array
        required:
        - values
        - values_unix_timestamp_seconds
        type: object
    MetadataUrlArrayValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          values:
            items:
              type: string
            type: array
        required:
        - values
        type: object
    MetadataOriginArrayValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          values:
            items:
              type: string
            type: array
        required:
        - values
        type: object
    MetadataPublicKeyHashArrayValue:
      allOf:
      - $ref: '#/components/schemas/MetadataTypedValue'
      - properties:
          values:
            items:
              $ref: '#/components/schemas/PublicKeyHash'
            type: array
        required:
        - values
        type: object
    ProgrammaticScryptoSborValueKind:
      description: |
        These are the Scrypto SBOR `ValueKind`s, but with `Bytes` added as an alias for `Vec`, to display such values as hex-encoded strings.
      enum:
      - Bool
      - I8
      - I16
      - I32
      - I64
      - I128
      - U8
      - U16
      - U32
      - U64
      - U128
      - String
      - Enum
      - Array
      - Bytes
      - Map
      - Tuple
      - Reference
      - Own
      - Decimal
      - PreciseDecimal
      - NonFungibleLocalId
      type: string
    ProgrammaticScryptoSborValue:
      description: |
        Arbitrary SBOR value represented as programmatic JSON with optional property name annotations.

        All scalar types (`Bool`, `I*`, `U*`, `String`, `Reference`, `Own`, `Decimal`, `PreciseDecimal`, `NonFungibleLocalId`)
        convey their value via `value` string property with notable exception of `Bool` type that uses regular JSON boolean type.
        Numeric values as string-encoded to preserve accuracy and simplify implementation on platforms with no native support
        for 64-bit long numerical values.

        Common properties represented as nullable strings:
          * `type_name` is only output when a schema is present and the type has a name,
          * `field_name` is only output when the value is a child of a `Tuple` or `Enum`, which has a type with named fields,
          * `variant_name` is only output when a schema is present and the type is an `Enum`.

        The following is a non-normative example annotated `Tuple` value with `String` and `U32` fields:
        ```
        {
          "kind": "Tuple",
          "type_name": "CustomStructure",
          "fields": [
            {
              "kind": "String",
              "field_name": "favorite_color",
              "value": "Blue"
            },
            {
              "kind": "U32",
              "field_name": "usage_counter",
              "value": "462231"
            }
          ]
        }
        ```
      discriminator:
        mapping:
          Bool: '#/components/schemas/ProgrammaticScryptoSborValueBool'
          I8: '#/components/schemas/ProgrammaticScryptoSborValueI8'
          I16: '#/components/schemas/ProgrammaticScryptoSborValueI16'
          I32: '#/components/schemas/ProgrammaticScryptoSborValueI32'
          I64: '#/components/schemas/ProgrammaticScryptoSborValueI64'
          I128: '#/components/schemas/ProgrammaticScryptoSborValueI128'
          U8: '#/components/schemas/ProgrammaticScryptoSborValueU8'
          U16: '#/components/schemas/ProgrammaticScryptoSborValueU16'
          U32: '#/components/schemas/ProgrammaticScryptoSborValueU32'
          U64: '#/components/schemas/ProgrammaticScryptoSborValueU64'
          U128: '#/components/schemas/ProgrammaticScryptoSborValueU128'
          String: '#/components/schemas/ProgrammaticScryptoSborValueString'
          Enum: '#/components/schemas/ProgrammaticScryptoSborValueEnum'
          Array: '#/components/schemas/ProgrammaticScryptoSborValueArray'
          Bytes: '#/components/schemas/ProgrammaticScryptoSborValueBytes'
          Map: '#/components/schemas/ProgrammaticScryptoSborValueMap'
          Tuple: '#/components/schemas/ProgrammaticScryptoSborValueTuple'
          Reference: '#/components/schemas/ProgrammaticScryptoSborValueReference'
          Own: '#/components/schemas/ProgrammaticScryptoSborValueOwn'
          Decimal: '#/components/schemas/ProgrammaticScryptoSborValueDecimal'
          PreciseDecimal: '#/components/schemas/ProgrammaticScryptoSborValuePreciseDecimal'
          NonFungibleLocalId: '#/components/schemas/ProgrammaticScryptoSborValueNonFungibleLocalId'
        propertyName: kind
      example:
        type_name: type_name
        kind: Bool
        field_name: field_name
      properties:
        kind:
          $ref: '#/components/schemas/ProgrammaticScryptoSborValueKind'
        type_name:
          description: |
            The name of the type of this value.
            This is only output when a schema is present and the type has a name.
            This property is ignored when the value is used as an input to the API.
          nullable: true
          type: string
        field_name:
          description: |
            The name of the field which hosts this value.
            This property is only included if this value is a child of a `Tuple` or `Enum` with named fields.
            This property is ignored when the value is used as an input to the API.
          nullable: true
          type: string
      required:
      - kind
      type: object
    ProgrammaticScryptoSborValueBool:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          value:
            type: boolean
        required:
        - value
        type: object
    ProgrammaticScryptoSborValueI8:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    ProgrammaticScryptoSborValueI16:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    ProgrammaticScryptoSborValueI32:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    ProgrammaticScryptoSborValueI64:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    ProgrammaticScryptoSborValueI128:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    ProgrammaticScryptoSborValueU8:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    ProgrammaticScryptoSborValueU16:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    ProgrammaticScryptoSborValueU32:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    ProgrammaticScryptoSborValueU64:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    ProgrammaticScryptoSborValueU128:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    ProgrammaticScryptoSborValueString:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    ProgrammaticScryptoSborValueEnum:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          variant_id:
            type: string
          variant_name:
            type: string
          fields:
            items:
              $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
            type: array
        required:
        - fields
        - variant_id
        type: object
    ProgrammaticScryptoSborValueArray:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          element_kind:
            $ref: '#/components/schemas/ProgrammaticScryptoSborValueKind'
          element_type_name:
            type: string
          elements:
            items:
              $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
            type: array
        required:
        - element_kind
        - elements
        type: object
    ProgrammaticScryptoSborValueBytes:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          element_kind:
            $ref: '#/components/schemas/ProgrammaticScryptoSborValueKind'
          element_type_name:
            type: string
          hex:
            $ref: '#/components/schemas/HexString'
        required:
        - element_kind
        - hex
        type: object
    ProgrammaticScryptoSborValueMap:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          key_kind:
            $ref: '#/components/schemas/ProgrammaticScryptoSborValueKind'
          key_type_name:
            type: string
          value_kind:
            $ref: '#/components/schemas/ProgrammaticScryptoSborValueKind'
          value_type_name:
            type: string
          entries:
            items:
              $ref: '#/components/schemas/ProgrammaticScryptoSborValueMapEntry'
            type: array
        required:
        - entries
        - key_kind
        - value_kind
        type: object
    ProgrammaticScryptoSborValueMapEntry:
      properties:
        key:
          $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
        value:
          $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      required:
      - key
      - value
      type: object
    ProgrammaticScryptoSborValueTuple:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          fields:
            items:
              $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
            type: array
        required:
        - fields
        type: object
    ProgrammaticScryptoSborValueReference:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          value:
            $ref: '#/components/schemas/Address'
        required:
        - value
        type: object
    ProgrammaticScryptoSborValueOwn:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          value:
            $ref: '#/components/schemas/Address'
        required:
        - value
        type: object
    ProgrammaticScryptoSborValueDecimal:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    ProgrammaticScryptoSborValuePreciseDecimal:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    ProgrammaticScryptoSborValueNonFungibleLocalId:
      allOf:
      - $ref: '#/components/schemas/ProgrammaticScryptoSborValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    BlueprintRoyaltyConfig:
      example:
        is_enabled: true
        method_rules:
        - royalty_amount:
            amount: amount
            unit: XRD
          method_name: method_name
        - royalty_amount:
            amount: amount
            unit: XRD
          method_name: method_name
      properties:
        is_enabled:
          type: boolean
        method_rules:
          description: The royalty rules by method. The array is only present if royalties
            are enabled.
          items:
            $ref: '#/components/schemas/BlueprintMethodRoyalty'
          type: array
      required:
      - is_enabled
      type: object
    BlueprintMethodRoyalty:
      example:
        royalty_amount:
          amount: amount
          unit: XRD
        method_name: method_name
      properties:
        method_name:
          type: string
        royalty_amount:
          $ref: '#/components/schemas/RoyaltyAmount'
      required:
      - method_name
      type: object
    ComponentRoyaltyConfig:
      properties:
        is_enabled:
          type: boolean
        method_rules:
          description: The royalty rules by method. The array is only present if royalties
            are enabled.
          items:
            $ref: '#/components/schemas/ComponentMethodRoyalty'
          type: array
      required:
      - is_enabled
      type: object
    ComponentMethodRoyalty:
      properties:
        method_name:
          type: string
        royalty_amount:
          $ref: '#/components/schemas/RoyaltyAmount'
      required:
      - method_name
      type: object
    RoyaltyAmount:
      example:
        amount: amount
        unit: XRD
      properties:
        amount:
          description: String-encoded decimal representing the amount of a related
            fungible resource.
          type: string
        unit:
          enum:
          - XRD
          - USD
          type: string
      required:
      - amount
      - unit
      type: object
    ComponentEntityRoleAssignmentEntry_assignment:
      properties:
        resolution:
          $ref: '#/components/schemas/RoleAssignmentResolution'
        explicit_rule:
          description: |
            This type is defined in the Core API as `AccessRule`. See the Core API documentation for more details.
          type: object
      required:
      - resolution
      type: object
    ValidatorCollectionItem_effective_fee_factor_current:
      example:
        fee_factor: fee_factor
      properties:
        fee_factor:
          description: String-encoded decimal representing the amount of a related
            fungible resource.
          type: string
      required:
      - fee_factor
      type: object
    ValidatorCollectionItem_effective_fee_factor_pending:
      example:
        fee_factor: fee_factor
        effective_at_epoch: 5962133916
      nullable: true
      properties:
        fee_factor:
          description: String-encoded decimal representing the amount of a related
            fungible resource.
          type: string
        effective_at_epoch:
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
      required:
      - effective_at_epoch
      - fee_factor
      type: object
    ValidatorCollectionItem_effective_fee_factor:
      example:
        current:
          fee_factor: fee_factor
        pending:
          fee_factor: fee_factor
          effective_at_epoch: 5962133916
      properties:
        current:
          $ref: '#/components/schemas/ValidatorCollectionItem_effective_fee_factor_current'
        pending:
          $ref: '#/components/schemas/ValidatorCollectionItem_effective_fee_factor_pending'
      required:
      - current
      type: object
    NetworkConfigurationResponse_well_known_addresses:
      example:
        secp256k1_signature_virtual_badge: secp256k1_signature_virtual_badge
        account_owner_badge: account_owner_badge
        locker_package: locker_package
        access_controller_package: access_controller_package
        resource_package: resource_package
        package_package: package_package
        account_package: account_package
        system_transaction_badge: system_transaction_badge
        global_caller_virtual_badge: global_caller_virtual_badge
        access_rules_package: access_rules_package
        metadata_module_package: metadata_module_package
        role_assignment_module_package: role_assignment_module_package
        transaction_processor_package: transaction_processor_package
        transaction_tracker: transaction_tracker
        faucet: faucet
        ed25519_signature_virtual_badge: ed25519_signature_virtual_badge
        package_owner_badge: package_owner_badge
        consensus_manager: consensus_manager
        consensus_manager_package: consensus_manager_package
        genesis_helper_package: genesis_helper_package
        faucet_package: faucet_package
        xrd: xrd
        validator_owner_badge: validator_owner_badge
        transaction_tracker_package: transaction_tracker_package
        royalty_module_package: royalty_module_package
        pool_package: pool_package
        identity_package: identity_package
        package_of_direct_caller_virtual_badge: package_of_direct_caller_virtual_badge
        test_utils_package: test_utils_package
        genesis_helper: genesis_helper
        identity_owner_badge: identity_owner_badge
      properties:
        xrd:
          description: Bech32m-encoded human readable version of the address.
          type: string
        secp256k1_signature_virtual_badge:
          description: Bech32m-encoded human readable version of the address.
          type: string
        ed25519_signature_virtual_badge:
          description: Bech32m-encoded human readable version of the address.
          type: string
        package_of_direct_caller_virtual_badge:
          description: Bech32m-encoded human readable version of the address.
          type: string
        global_caller_virtual_badge:
          description: Bech32m-encoded human readable version of the address.
          type: string
        system_transaction_badge:
          description: Bech32m-encoded human readable version of the address.
          type: string
        package_owner_badge:
          description: Bech32m-encoded human readable version of the address.
          type: string
        validator_owner_badge:
          description: Bech32m-encoded human readable version of the address.
          type: string
        account_owner_badge:
          description: Bech32m-encoded human readable version of the address.
          type: string
        identity_owner_badge:
          description: Bech32m-encoded human readable version of the address.
          type: string
        package_package:
          description: Bech32m-encoded human readable version of the address.
          type: string
        resource_package:
          description: Bech32m-encoded human readable version of the address.
          type: string
        account_package:
          description: Bech32m-encoded human readable version of the address.
          type: string
        identity_package:
          description: Bech32m-encoded human readable version of the address.
          type: string
        consensus_manager_package:
          description: Bech32m-encoded human readable version of the address.
          type: string
        access_controller_package:
          description: Bech32m-encoded human readable version of the address.
          type: string
        transaction_processor_package:
          description: Bech32m-encoded human readable version of the address.
          type: string
        metadata_module_package:
          description: Bech32m-encoded human readable version of the address.
          type: string
        royalty_module_package:
          description: Bech32m-encoded human readable version of the address.
          type: string
        access_rules_package:
          description: Bech32m-encoded human readable version of the address.
          type: string
        role_assignment_module_package:
          description: Bech32m-encoded human readable version of the address.
          type: string
        genesis_helper_package:
          description: Bech32m-encoded human readable version of the address.
          type: string
        faucet_package:
          description: Bech32m-encoded human readable version of the address.
          type: string
        consensus_manager:
          description: Bech32m-encoded human readable version of the address.
          type: string
        genesis_helper:
          description: Bech32m-encoded human readable version of the address.
          type: string
        faucet:
          description: Bech32m-encoded human readable version of the address.
          type: string
        pool_package:
          description: Bech32m-encoded human readable version of the address.
          type: string
        locker_package:
          description: Bech32m-encoded human readable version of the address.
          type: string
        transaction_tracker:
          description: Bech32m-encoded human readable version of the address.
          type: string
        transaction_tracker_package:
          description: Bech32m-encoded human readable version of the address.
          type: string
        test_utils_package:
          description: Bech32m-encoded human readable version of the address.
          type: string
      required:
      - access_controller_package
      - access_rules_package
      - account_owner_badge
      - account_package
      - consensus_manager
      - consensus_manager_package
      - ed25519_signature_virtual_badge
      - faucet
      - faucet_package
      - genesis_helper
      - genesis_helper_package
      - global_caller_virtual_badge
      - identity_owner_badge
      - identity_package
      - locker_package
      - metadata_module_package
      - package_of_direct_caller_virtual_badge
      - package_owner_badge
      - package_package
      - pool_package
      - resource_package
      - role_assignment_module_package
      - royalty_module_package
      - secp256k1_signature_virtual_badge
      - system_transaction_badge
      - transaction_processor_package
      - transaction_tracker
      - validator_owner_badge
      - xrd
      type: object
    TransactionPreviewResponse_logs_inner:
      example:
        level: level
        message: message
      properties:
        level:
          type: string
        message:
          type: string
      required:
      - level
      - message
      type: object
    StreamTransactionsRequest_allOf_manifest_class_filter:
      description: "Allows filtering to transactions which match the given manifest\
        \ classification. If specified, the response will contain only transactions\
        \ which have a class that matches the filter. If `match_only_most_specific`\
        \ set to true, only transactions where the queried class is most specific\
        \ will be returned. See the [docs on manifest classification](https://docs.radixdlt.com/docs/conforming-transaction-manifest-types)\
        \ for more information."
      properties:
        class:
          $ref: '#/components/schemas/ManifestClass'
        match_only_most_specific:
          default: false
          type: boolean
      required:
      - class
      type: object
    StateEntityDetailsResponseComponentDetails_allOf_state:
      description: |
        A representation of a component's inner state. If this entity is a `GenericComponent`, this field will be in a programmatic JSON
        structure (you can deserialize it as a `ProgrammaticScryptoSborValue`). Otherwise, for "native" components such as `Account`,
        `Validator`, `AccessController`, `OneResourcePool`, `TwoResourcePool`, and `MultiResourcePool`, this field will be a
        custom JSON model defined in the Core API schema.
      type: object
    MetadataNonFungibleGlobalIdArrayValue_allOf_values:
      properties:
        resource_address:
          description: Bech32m-encoded human readable version of the address.
          type: string
        non_fungible_id:
          description: String-encoded non-fungible ID.
          type: string
      required:
      - non_fungible_id
      - resource_address
      type: object
x-tagGroups:
- name: Overview
  tags:
  - SubAPIs
  - Concepts
  - Architecture
  - Examples
- name: Endpoints
  tags:
  - Status
  - Transaction
  - Stream
  - State
  - Statistics
  - Extensions

