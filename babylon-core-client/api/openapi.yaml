openapi: 3.1.0
info:
  description: |
    This API is exposed by the Babylon Radix node to give clients access to the Radix Engine, Mempool and State in the node.

    The default configuration is intended for use by node-runners on a private network, and is not intended to be exposed publicly.
    Very heavy load may impact the node's function. The node exposes a configuration flag which allows disabling certain endpoints
    which may be problematic, but monitoring is advised. This configuration parameter is
    `api.core.flags.enable_unbounded_endpoints` / `RADIXDLT_CORE_API_FLAGS_ENABLE_UNBOUNDED_ENDPOINTS`.

    This API exposes queries against the node's current state (see `/lts/state/` or `/state/`), and streams of transaction history
    (under `/lts/stream/` or `/stream`).

    If you require queries against snapshots of historical ledger state, you may also wish to consider using the
    [Gateway API](https://docs-babylon.radixdlt.com/).

    ## Integration and forward compatibility guarantees

    Integrators (such as exchanges) are recommended to use the `/lts/` endpoints - they have been designed to be clear
    and simple for integrators wishing to create and monitor transactions involving fungible transfers to/from accounts.

    All endpoints under `/lts/` have high guarantees of forward compatibility in future node versions.
    We may add new fields, but existing fields will not be changed. Assuming the integrating code uses a permissive
    JSON parser which ignores unknown fields, any additions will not affect existing code.

    Other endpoints may be changed with new node versions carrying protocol-updates, although any breaking changes
    will be flagged clearly in the corresponding release notes.

    All responses may have additional fields added, so clients are advised to use JSON parsers which ignore unknown
    fields on JSON objects.
  license:
    name: "The Radix License, Version 1.0"
    url: https://www.radixfoundation.org/licenses/license-v1
  title: Radix Core API
  version: v1.3.0
  x-logo:
    url: https://cdn.document360.io/50e78792-5410-4ac9-aa43-4612b4d33953/Images/Documentation/radix-logo-banner.png
    href: https://docs.radixdlt.com
servers:
- url: localhost:3333/core
tags:
- description: |
    The following SDKs are currently available for the Core API:
    - Typescript: [@radixdlt/babylon-core-api-sdk](https://www.npmjs.com/package/@radixdlt/babylon-core-api-sdk)

    For other languages, you can use a HTTP client of your choice and code the JSON models yourself.
    You could also consider using an Open API generator, but unless you have experience with battling the gremlins in Open API generators,
    it may be more trouble than it's worth.
  name: SDKs
  x-displayName: SDKs
  x-traitTag: true
- description: |
    The API is split into 6 sub apis:
    - **Long Term Support** (`/lts/*`) - For long term support/backward compatible endpoints aimed at integrators such as exchanges.
    - **Status** (`/status/*`) - For status and configuration details for the node / engine.
    - **Transaction** (`/transaction/*`) - For transaction construction, preview, submission, and monitoring the status of an individual transaction.
    - **Mempool** (`/mempool/*`) - For information on the contents of the node's mempool.
    - **Current State** (`/state/*`) - For reading the state of entities. At present, we only support reading details from the top of the currently committed ledger.
    - **Stream** (`/stream/*`) - For reading the committed transactions.
  name: SubAPIs
  x-displayName: Sub-APIs
  x-traitTag: true
- description: "Interacting with this API effectively may require knowledge about\
    \ the Radix Babylon Transaction Model and the State Model.\n\nWe share some very\
    \ high-level details below, but please see the [official documentation](http://docs.radixdlt.com)\
    \ for more details on this.\n\n## Transactions\n\nUser transactions are formed\
    \ of a core \"intent\", which is then signed by 0+ signatories, before being notarized.\
    \ The output is called a notarized payload.\nIt is this notarized transaction\
    \ payload which is submitted to the network.\n\nFor most users, this construction\
    \ process will generally happen in their Radix Wallet. If you wish to construct\
    \ transactions programmatically or offline,\nyou will need to integrate the Radix\
    \ Engine Toolkit into your application for construction and finalization.\n\n\
    Once submitted, a transaction payload can end up being either rejected or committed.\
    \ Transactions get rejected if they fail to pass certain criteria at the given\
    \ time.\nA transaction payload can be marked as a:\n- **Permanent Rejection**\
    \ if it is never possible for it to be committed (e.g. it's statically invalid,\
    \ or only valid up until epoch 100 and it's now epoch 101)\n- **Temporary Rejection**\
    \ if it still may be possible that the transaction payload could be committed\n\
    \nA given intent typically is only part of one submitted notarized payload, but\
    \ it's possible for a notary to notarize and submit multiple payloads for the\
    \ same intent.\nThe Radix Engine ensures that any intent can only be committed\
    \ once.\n\nA committed transaction is either committed with an outcome of \"Success\"\
    \ or \"Failure\":\n- **Committed Failure** will result in fees being paid up until\
    \ the failure point, but all other changes will be discarded.\n- **Committed Success**\
    \ will result in all changes being committed.\n\nOnly committed transactions appear\
    \ on ledger. The status of rejected transactions can be read at submission time\
    \ or from the transaction status endpoint - by virtue of\na rejection cache on\
    \ the node. This cache is limited in size, so rejected statuses may no longer\
    \ be tracked after a period of time.\n\nFor a more robust handling of transaction\
    \ rejections, consider running your own Gateway.\n\n## State Model\n\nThe Radix\
    \ Engine State Model can be thought of as a forest of state sub-trees.\nA state\
    \ sub-tree consists of \"entities\". These entities have an ID, and 0 or more\
    \ \"substates\" at keys underneath them. \nThese substates are typed, and can\
    \ own other entities, forming a tree of ownership.\n\nEach state sub-tree has\
    \ a root entity, and a single Bech32M Global Address, with a human-readable-prefix\
    \ (and prefix byte) matching the root entity type.\n\nAs an example, entities\
    \ include concepts like Components, Packages, Vaults, Resource Managers and Key-Value\
    \ Stores.\nSubstates under a component include the Component Struct, Component\
    \ Data, and Access Rules substates.\n"
  name: Concepts
  x-displayName: Concepts
  x-traitTag: true
- description: |
    To construct and submit a transaction using the LTS endpoints:

    * Query `/lts/transaction/construction` to retrieve the current epoch (according to your node).
      Check also that the `ledger_clock` is close to the current time - this ensures that the node is synced up.
    * Make use of the Radix Engine Toolkit to construct the intent, sign/notarize, and compile the notarized transaction.
    * You can use `/lts/transaction/submit` to submit the transaction
    * Use `/lts/transaction/status` to check the status of the transaction
    * Use `/lts/stream/transaction-outcomes` to look up the outcome of the transaction, from its state version
  name: Construction
  x-displayName: Transaction Construction
  x-traitTag: true
- description: |
    For long term support/backward compatible endpoints aimed at integrators such as exchanges.
  name: LTS
  x-displayName: LTS Endpoints
- description: |
    For status and configuration details for the node / engine.
  name: Status
  x-displayName: Status Endpoints
- description: |
    For transaction construction, preview, submission, and monitoring the status of an individual transaction.
  name: Transaction
  x-displayName: Transaction Endpoints
- description: |
    For information on the contents of the node's mempool.
  name: Mempool
  x-displayName: Mempool Endpoints
- description: |
    For reading the state of entities. At present, we only support reading details from the top of the currently committed ledger.
  name: State
  x-displayName: State Endpoints
- description: To query the transaction or proof stream of the ledger.
  name: Stream
  x-displayName: Stream Endpoints
paths:
  /lts/transaction/construction:
    post:
      description: Returns information necessary to build a transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LtsTransactionConstructionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtsTransactionConstructionResponse'
          description: All info needed to build a transaction
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Construction Metadata
      tags:
      - LTS
      x-content-type: application/json
      x-accepts:
      - application/json
  /lts/transaction/submit:
    post:
      description: |
        Submits a notarized transaction to the network. Returns whether the transaction submission was already included in the node's mempool.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LtsTransactionSubmitRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtsTransactionSubmitResponse'
          description: Transaction Submit Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtsTransactionSubmitErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtsTransactionSubmitErrorResponse'
          description: Server error
      summary: Submit Transaction
      tags:
      - LTS
      x-content-type: application/json
      x-accepts:
      - application/json
  /lts/transaction/status:
    post:
      description: |
        Shares the node's knowledge of any payloads associated with the given intent hash.
        Generally there will be a single payload for a given intent, but it's theoretically possible there may be multiple.
        This knowledge is summarised into a status for the intent. This summarised status in the response is likely sufficient
        for most clients.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LtsTransactionStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtsTransactionStatusResponse'
          description: Transaction status response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Transaction Status
      tags:
      - LTS
      x-content-type: application/json
      x-accepts:
      - application/json
  /lts/state/account-all-fungible-resource-balances:
    post:
      description: Returns balances for all resources associated with an account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LtsStateAccountAllFungibleResourceBalancesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtsStateAccountAllFungibleResourceBalancesResponse'
          description: Account all resource balances response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get All Account Balances
      tags:
      - LTS
      x-content-type: application/json
      x-accepts:
      - application/json
  /lts/state/account-fungible-resource-balance:
    post:
      description: Returns balance of a single fungible resource in an account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LtsStateAccountFungibleResourceBalanceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtsStateAccountFungibleResourceBalanceResponse'
          description: Account resource balance response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Single Account Balance
      tags:
      - LTS
      x-content-type: application/json
      x-accepts:
      - application/json
  /lts/state/account-deposit-behaviour:
    post:
      description: Returns deposit behaviour of a single account for multiple resource
        addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LtsStateAccountDepositBehaviourRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtsStateAccountDepositBehaviourResponse'
          description: Account deposit behaviour response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Account Deposit Behaviour
      tags:
      - LTS
      x-content-type: application/json
      x-accepts:
      - application/json
  /lts/stream/transaction-outcomes:
    post:
      description: |
        Returns a list of committed transaction outcomes (containing balance changes) from a given state version.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LtsStreamTransactionOutcomesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtsStreamTransactionOutcomesResponse'
          description: Paged response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Transaction Outcomes
      tags:
      - LTS
      x-content-type: application/json
      x-accepts:
      - application/json
  /lts/stream/account-transaction-outcomes:
    post:
      description: |
        Returns a list of committed transaction outcomes (containing balance changes) from a given state version, filtered to only transactions which involved the given account.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LtsStreamAccountTransactionOutcomesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtsStreamAccountTransactionOutcomesResponse'
          description: Paged response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Account Transaction Outcomes
      tags:
      - LTS
      x-content-type: application/json
      x-accepts:
      - application/json
  /status/network-configuration:
    post:
      description: Returns the network configuration of the network the node is connected
        to.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConfigurationResponse'
          description: Network Configuration
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Network Configuration
      tags:
      - Status
      x-accepts:
      - application/json
  /status/network-status:
    post:
      description: Returns the current state and status of the node's copy of the
        ledger.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkStatusResponse'
          description: Network Status
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Network Status
      tags:
      - Status
      x-content-type: application/json
      x-accepts:
      - application/json
  /status/scenarios:
    post:
      description: |
        Get results of test "Scenarios" executed on this Network.
        Note: these Scenarios are meant to only be executed on test Networks; on a production Node,
        the response is expected to be empty.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenariosRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenariosResponse'
          description: Scenarios' results
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Scenarios' results.
      tags:
      - Status
      x-content-type: application/json
      x-accepts:
      - application/json
  /mempool/list:
    post:
      description: Returns the hashes of all the transactions currently in the mempool
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MempoolListRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MempoolListResponse'
          description: Mempool List Response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Mempool List
      tags:
      - Mempool
      x-content-type: application/json
      x-accepts:
      - application/json
  /mempool/transaction:
    post:
      description: Returns the payload of a transaction currently in the mempool
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MempoolTransactionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MempoolTransactionResponse'
          description: Mempool Transaction Response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Not found error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Mempool Transaction
      tags:
      - Mempool
      x-content-type: application/json
      x-accepts:
      - application/json
  /transaction/parse:
    post:
      description: "Extracts the contents and hashes of various types of transaction\
        \ payloads, or sub-payloads."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionParseRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionParseResponse'
          description: Transaction Parse Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Parse Transaction Payload
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts:
      - application/json
  /transaction/submit:
    post:
      description: |
        Submits a notarized transaction to the network. Returns whether the transaction submission was already included in the node's mempool.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionSubmitRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSubmitResponse'
          description: Transaction Submit Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSubmitErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSubmitErrorResponse'
          description: Server error
      summary: Transaction Submit
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts:
      - application/json
  /transaction/status:
    post:
      description: |
        Shares the node's knowledge of any payloads associated with the given intent hash.
        Generally there will be a single payload for a given intent, but it's theoretically possible there may be multiple.
        This knowledge is summarised into a status for the intent. This summarised status in the response is likely sufficient
        for most clients.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionStatusResponse'
          description: Transaction status response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Transaction Status
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts:
      - application/json
  /transaction/receipt:
    post:
      description: |
        Gets the transaction receipt for a committed transaction.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionReceiptRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionReceiptResponse'
          description: Committed transaction found response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Committed transaction not found response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Transaction Receipt
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts:
      - application/json
  /transaction/call-preview:
    post:
      description: |
        Preview a scrypto function or method call against the latest network state.
        Returns the result of the scrypto function or method call.
      requestBody:
        content:
          application/json:
            examples:
              method:
                summary: A method call example
                value:
                  target:
                    type: method
                    component_address: component_loc1qftacppvmr9ezmekxqpq58en0nk954x0a7jv2zz0hc7qfxlgx4
                    method_name: lock_fee
                  arguments:
                  - a120000000000010632d5ec66b050000000000000000000000000000000000000000000000
              function:
                summary: A function call example
                value:
                  target:
                    type: function
                    package_address: package_loc1q9ufgsc8yh5fkv8kzny3vnp68gkmuytc004k0j8dkwvs0xq76q
                    blueprint_name: GumballMachine
                    function_name: instantiate_gumball_machine
                  arguments:
                  - a120000000000010632d5ec66b050000000000000000000000000000000000000000000000
            schema:
              $ref: '#/components/schemas/TransactionCallPreviewRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCallPreviewResponse'
          description: Result of the scrypto function call
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Scrypto Call Preview
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts:
      - application/json
  /transaction/preview:
    post:
      description: |
        Preview a transaction against the latest network state, and returns the preview receipt.
        If the node has enabled it, you may be able to also preview against recent network state.

        For V2 transactions (and beyond) the `/preview-v2` endpoint should be used instead.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionPreviewRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionPreviewResponse'
          description: Transaction preview response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Transaction Preview V1
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts:
      - application/json
  /transaction/preview-v2:
    post:
      description: |
        Previews a transaction against the latest network state, and returns the preview receipt.
        If the node has enabled it, you may be able to also preview against recent network state.

        This endpoint supports V2 transactions (and beyond). If you still need to preview V1
        transactions, you should use the `/preview` endpoint instead.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionPreviewV2Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionPreviewV2Response'
          description: Transaction preview response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionPreviewV2ErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionPreviewV2ErrorResponse'
          description: Server error
      summary: Transaction Preview V2
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts:
      - application/json
  /stream/proofs:
    post:
      description: |
        Returns a stream of proofs committed to the node's ledger.

        NOTE: This endpoint may return different results on different nodes:
        * Each node may persist different subset of signatures on a given proofs, as long as enough
        of the validator set has signed.
        * Inside an epoch, different nodes may receive and persist / keep different proofs, subject to
        constraints on gaps between proofs.

        Proofs during an epoch can also be garbage collected by the node after the fact. Therefore
        proofs may disappear from this stream.

        Some proofs (such as during genesis and protocol update enactment) are created on a node and don't
        include signatures.

        This stream accepts four different options in the request:
        * All proofs forward (from state version)
        * All end-of-epoch proofs (from epoch number)
        * All end-of-epoch proofs triggering a protocol update
        * All node-injected proofs enacting genesis or a protocol update (for protocol update name, from state version)

        The end-of-epoch proofs can be used to "trustlessly" verify the validator set for a given epoch.
        By tracking the fact that validators for epoch N sign the next validator set for epoch N + 1,
        this chain of proofs can be used to provide proof of the current validator set from a hardcoded
        start.

        When a validator set is known for a given epoch, this can be used to verify the various transaction
        hash trees in the epoch, and to prove other data.

        NOTE: This endpoint was built after agreeing the new Radix convention for paged APIs. Its models
        therefore follow the new convention, rather than attempting to align with existing loose Core API conventions.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamProofsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamProofsResponse'
          description: Stream proofs response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamProofsErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamProofsErrorResponse'
          description: Server error
      summary: Stream Proofs
      tags:
      - Stream
      x-content-type: application/json
      x-accepts:
      - application/json
  /stream/transactions:
    post:
      description: |
        Returns the list of committed transactions.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamTransactionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamTransactionsResponse'
          description: Committed transactions response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamTransactionsErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamTransactionsErrorResponse'
          description: Server error
      summary: Get Committed Transactions
      tags:
      - Stream
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/consensus-manager:
    post:
      description: |
        Reads the consensus manager's substate/s from the top of the current ledger.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateConsensusManagerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateConsensusManagerResponse'
          description: Current state response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Consensus Manager Details
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/account:
    post:
      description: |
        Reads the account's substate/s from the top of the current ledger.
        Also returns all vaults under the account.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateAccountResponse'
          description: Current state response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Not found error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Account Details
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/component:
    post:
      description: |
        Reads the component's substate/s from the top of the current ledger.
        Also recursively extracts vault balance totals from the component's entity subtree.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateComponentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateComponentResponse'
          description: Current state response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Not found error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Component Details
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/validator:
    post:
      description: |
        Reads the validator's substate/s from the top of the current ledger.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateValidatorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateValidatorResponse'
          description: Current state response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Not found error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Validator Details
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/access-controller:
    post:
      description: |
        Reads the access controller's substate/s from the top of the current ledger.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateAccessControllerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateAccessControllerResponse'
          description: Current state response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Not found error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Access Controller Details
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/resource:
    post:
      description: |
        Reads the resource manager's substate/s from the top of the current ledger.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateResourceResponse'
          description: Current state response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Not found error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Resource Details
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/non-fungible:
    post:
      description: |
        Reads the data associated with a single Non-Fungible Unit under a Non-Fungible Resource.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateNonFungibleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateNonFungibleResponse'
          description: Current state response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Not found error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Non-Fungible Details
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
  /state/package:
    post:
      description: |
        Reads the package's substate/s from the top of the current ledger.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatePackageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatePackageResponse'
          description: Current state response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Not found error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Package Details
      tags:
      - State
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  schemas:
    NetworkIdentifier:
      description: The logical name of the network
      example: "{{network}}"
      type: string
    SborFormatOptions:
      description: Requested SBOR formats to include in the response
      example:
        programmatic_json: true
        raw: true
      properties:
        raw:
          description: Whether to return the raw hex-encoded bytes (default true)
          type: boolean
        programmatic_json:
          description: "Whether to return the programmatic json format (normally default\
            \ true, defaults false for streamed transactions)"
          type: boolean
    TransactionFormatOptions:
      description: Requested transaction formats to include in the response
      example:
        blobs: true
        raw_notarized_transaction: true
        balance_changes: true
        manifest: true
        raw_system_transaction: true
        message: true
        raw_ledger_transaction: true
      properties:
        manifest:
          description: Whether to return the raw manifest (default true)
          type: boolean
        blobs:
          description: Whether to return the hex-encoded blobs (default false)
          type: boolean
        message:
          description: Whether to return the transaction message (default true)
          type: boolean
        balance_changes:
          description: Whether to return the transaction balance changes (default
            false)
          type: boolean
        raw_system_transaction:
          description: Whether to return the raw hex-encoded system transaction bytes
            (default false)
          type: boolean
        raw_notarized_transaction:
          description: Whether to return the raw hex-encoded notarized transaction
            bytes (default true)
          type: boolean
        raw_ledger_transaction:
          description: Whether to return the raw hex-encoded ledger transaction bytes
            (default false)
          type: boolean
    SubstateFormatOptions:
      description: Requested substate formats to include in the response
      example:
        typed: true
        previous: true
        raw: true
        hash: true
      properties:
        raw:
          description: Whether to return the raw substate value bytes (default false)
          type: boolean
        hash:
          description: Whether to return the raw substate value bytes hash (default
            false)
          type: boolean
        typed:
          description: Whether to return the typed substate information (default true)
          type: boolean
        previous:
          description: Whether to return the previous substate value for updates and
            deletes (default false)
          type: boolean
    LedgerStateSelectorType:
      enum:
      - ByStateVersion
      type: string
    LedgerStateSelector:
      description: |
        An optional specification of a historical ledger state at which to execute the request.
        The "historical state" feature (see the `db.historical_substate_values.enable` flag) must be
        enabled on the Node, and the requested point in history must be recent enough (in accordance
        with the Node's configured `state_hash_tree.state_version_history_length`).
      discriminator:
        mapping:
          ByStateVersion: '#/components/schemas/VersionLedgerStateSelector'
        propertyName: type
      example:
        type: ByStateVersion
      properties:
        type:
          $ref: '#/components/schemas/LedgerStateSelectorType'
      required:
      - type
    VersionLedgerStateSelector:
      allOf:
      - $ref: '#/components/schemas/LedgerStateSelector'
      - properties:
          state_version:
            $ref: '#/components/schemas/StateVersion'
        required:
        - state_version
    ErrorResponseType:
      enum:
      - Basic
      - TransactionSubmit
      - LtsTransactionSubmit
      - TransactionPreviewV2
      - StreamTransactions
      - StreamProofs
      type: string
    ErrorResponse:
      discriminator:
        mapping:
          Basic: '#/components/schemas/BasicErrorResponse'
          TransactionSubmit: '#/components/schemas/TransactionSubmitErrorResponse'
          LtsTransactionSubmit: '#/components/schemas/LtsTransactionSubmitErrorResponse'
          TransactionPreviewV2: '#/components/schemas/TransactionPreviewV2ErrorResponse'
          StreamTransactions: '#/components/schemas/StreamTransactionsErrorResponse'
          StreamProofs: '#/components/schemas/StreamProofsErrorResponse'
        propertyName: error_type
      properties:
        error_type:
          $ref: '#/components/schemas/ErrorResponseType'
        code:
          description: A numeric code corresponding to the given HTTP error code.
          type: integer
        message:
          description: A human-readable error message.
          type: string
        trace_id:
          description: "A GUID to be used when reporting errors, to allow correlation\
            \ with the Core API's error logs, in the case where the Core API details\
            \ are hidden."
          type: string
      required:
      - code
      - error_type
      - message
    BasicErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - type: object
      example:
        trace_id: trace_id
        code: 1
        error_type: Basic
        message: message
    ContinuationToken:
      description: |
        A continuation token is returned if and only if there are further non-empty pages of items currently available.
        The token can be provided in a following request to fetch the next page of results.
        The filter and sort should not be changed when re-using the continuation token.
      type: string
    Decimal:
      description: |
        A string-encoded fixed-precision decimal to 18 decimal places.
        A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
      type: string
    NotarizedTransaction:
      properties:
        hash:
          description: |
            The hex-encoded notarized transaction hash for a user transaction.
            This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
          maxLength: 64
          minLength: 64
          type: string
        hash_bech32m:
          description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
          type: string
        payload_hex:
          description: The hex-encoded full notarized transaction payload. Returning
            this can be disabled in TransactionFormatOptions on your request (default
            true).
          type: string
        signed_intent:
          $ref: '#/components/schemas/SignedTransactionIntent'
        notary_signature:
          $ref: '#/components/schemas/Signature'
      required:
      - hash
      - hash_bech32m
      - notary_signature
      - signed_intent
    SignedTransactionIntent:
      properties:
        hash:
          description: |
            The hex-encoded signed intent hash for a user transaction.
            This hash identifies the transaction intent, plus additional signatures.
            This hash is signed by the notary, to create the submittable `NotarizedTransaction`.
          maxLength: 64
          minLength: 64
          type: string
        hash_bech32m:
          description: The Bech32m-encoded human readable `SignedTransactionIntentHash`.
          type: string
        intent:
          $ref: '#/components/schemas/TransactionIntent'
        intent_signatures:
          items:
            $ref: '#/components/schemas/SignatureWithPublicKey'
          type: array
      required:
      - hash
      - hash_bech32m
      - intent
      - intent_signatures
    TransactionIntent:
      properties:
        hash:
          description: |
            The hex-encoded transaction intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core "intent" of the transaction. Each transaction intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
          maxLength: 64
          minLength: 64
          type: string
        hash_bech32m:
          description: The Bech32m-encoded human readable `TransactionIntentHash`.
          type: string
        header:
          $ref: '#/components/schemas/TransactionHeader'
        instructions:
          description: The decompiled transaction manifest instructions. Only returned
            if enabled in `TransactionFormatOptions` on your request.
          type: string
        blobs_hex:
          additionalProperties:
            description: The hex-encoded blob content
            type: string
          description: "A map of the hex-encoded blob hash, to hex-encoded blob content.\
            \ Only returned if enabled in `TransactionFormatOptions` on your request."
        message:
          $ref: '#/components/schemas/TransactionMessage'
      required:
      - hash
      - hash_bech32m
      - header
    TransactionMessageType:
      enum:
      - Plaintext
      - Encrypted
      type: string
    TransactionMessage:
      discriminator:
        mapping:
          Plaintext: '#/components/schemas/PlaintextTransactionMessage'
          Encrypted: '#/components/schemas/EncryptedTransactionMessage'
        propertyName: type
      example:
        type: Plaintext
      properties:
        type:
          $ref: '#/components/schemas/TransactionMessageType'
      required:
      - type
    PlaintextTransactionMessage:
      allOf:
      - $ref: '#/components/schemas/TransactionMessage'
      - description: An unencrypted message.
        properties:
          mime_type:
            description: |
              Intended to represent the RFC 2046 MIME type of the `content`.
              A client cannot trust that this field is a valid mime type - in particular, the
              choice between `String` or `Binary` representation of the content is not enforced by
              this `mime_type`.
            type: string
          content:
            $ref: '#/components/schemas/PlaintextMessageContent'
        required:
        - content
        - mime_type
    PlaintextMessageContentType:
      enum:
      - String
      - Binary
      type: string
    PlaintextMessageContent:
      discriminator:
        mapping:
          String: '#/components/schemas/StringPlaintextMessageContent'
          Binary: '#/components/schemas/BinaryPlaintextMessageContent'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/PlaintextMessageContentType'
      required:
      - type
    StringPlaintextMessageContent:
      allOf:
      - $ref: '#/components/schemas/PlaintextMessageContent'
      - properties:
          value:
            description: The value of a message that the author decided to provide
              as a UTF-8 string.
            type: string
        required:
        - value
    BinaryPlaintextMessageContent:
      allOf:
      - $ref: '#/components/schemas/PlaintextMessageContent'
      - properties:
          value_hex:
            description: The hex-encoded value of a message that the author decided
              to provide as raw bytes.
            type: string
        required:
        - value_hex
    EncryptedTransactionMessage:
      allOf:
      - $ref: '#/components/schemas/TransactionMessage'
      - description: A `PlaintextTransactionMessage` encrypted with "Multi-party ECIES"
          for a number of decryptors (public keys).
        properties:
          encrypted_hex:
            description: |
              The hex-encoded (128-bit) AES-GCM encrypted bytes of an SBOR-encoded `PlaintextTransactionMessage`.
              The bytes are serialized as the concatenation `Nonce/IV (12 bytes) || Cipher (variable length) || Tag/MAC (16 bytes)`:
            type: string
          curve_decryptor_sets:
            items:
              $ref: '#/components/schemas/EncryptedMessageCurveDecryptorSet'
            type: array
        required:
        - curve_decryptor_sets
        - encrypted_hex
    EncryptedMessageCurveDecryptorSet:
      description: |
        A decryptor set for a particular ECDSA curve type.
        The (128-bit) AES-GCM symmetric key is encrypted separately for each decryptor public key via (256-bit) AES-KeyWrap.
        AES-KeyWrap uses a key derived via a KDF (Key Derivation Function) using a shared secret.
        For each decryptor public key, we create a shared curve point `G` via static Diffie-Helman between the decryptor public key, and a per-transaction ephemeral public key for that curve type.
        We then use that shared secret with a key derivation function to create the (256-bit) KEK (Key Encrypting Key):
        `KEK = HKDF(hash: Blake2b, secret: x co-ord of G, salt: [], length: 256 bits)`.
      properties:
        dh_ephemeral_public_key:
          $ref: '#/components/schemas/PublicKey'
        decryptors:
          items:
            $ref: '#/components/schemas/EncryptedMessageDecryptor'
          type: array
      required:
      - decryptors
      - dh_ephemeral_public_key
    EncryptedMessageDecryptor:
      properties:
        public_key_fingerprint_hex:
          description: "The last 8 bytes of the Blake2b-256 hash of the public key\
            \ bytes, in their standard Radix byte-serialization."
          type: string
        aes_wrapped_key_hex:
          description: |
            The hex-encoded wrapped key bytes from applying RFC 3394 (256-bit) AES-KeyWrap to the message ephemeral public key, with the secret KEK provided by static Diffie-Helman between the decryptor public key, and the `dh_ephemeral_public_key` for that curve type.
            The bytes are serialized (according to RFC 3394) as the concatenation `IV (first 8 bytes) || Cipher`.

            The message ephemeral public key is 128-bit in V1 transactions, but 256-bit in V2 transactions.
            The Cipher is the wrapped ephemeral public key, and is encoded as two 64-bit blocks in V1, and four 64-bit blocks in V2.
          type: string
      required:
      - aes_wrapped_key_hex
      - public_key_fingerprint_hex
    TransactionHeader:
      properties:
        network_id:
          description: The logical id of the network
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        start_epoch_inclusive:
          description: |
            An integer between `0` and `10^10`, marking the epoch from which the transaction can be submitted.
            In the case of uncommitted transactions, a value of `10^10` indicates that the epoch was >= `10^10`.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        end_epoch_exclusive:
          description: |
            An integer between `0` and `10^10`, marking the epoch from which the transaction will no longer be valid, and be rejected.
            In the case of uncommitted transactions, a value of `10^10` indicates that the epoch was >= `10^10`.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        nonce:
          description: |
            An integer between `0` and `2^32 - 1`, chosen to allow a unique intent to be created (to enable submitting an otherwise identical/duplicate intent).

            As of Cuttlefish and V2 transaction models, this is now referred to in documentation as the `intent_discriminator`.
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        notary_public_key:
          $ref: '#/components/schemas/PublicKey'
        notary_is_signatory:
          description: Specifies whether the notary public key should be included
            in the transaction signers list
          type: boolean
        tip_percentage:
          description: "An integer between `0` and `65535`, giving the validator tip\
            \ as a percentage amount. A value of `1` corresponds to 1% of the fee."
          format: int32
          maximum: 65535
          minimum: 0
          type: integer
      required:
      - end_epoch_exclusive
      - network_id
      - nonce
      - notary_is_signatory
      - notary_public_key
      - start_epoch_inclusive
      - tip_percentage
    NetworkIdentifierByte:
      description: The logical id of the network
      format: int32
      maximum: 255
      minimum: 0
      type: integer
    NotarizedTransactionV2:
      properties:
        hash:
          description: |
            The hex-encoded notarized transaction hash for a user transaction.
            This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
          maxLength: 64
          minLength: 64
          type: string
        hash_bech32m:
          description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
          type: string
        payload_hex:
          description: The hex-encoded full notarized transaction payload. Returning
            this can be disabled in TransactionFormatOptions on your request (default
            true).
          type: string
        signed_transaction_intent:
          $ref: '#/components/schemas/SignedTransactionIntentV2'
        notary_signature:
          $ref: '#/components/schemas/Signature'
      required:
      - hash
      - hash_bech32m
      - notary_signature
      - signed_transaction_intent
    SignedTransactionIntentV2:
      properties:
        hash:
          description: |
            The hex-encoded signed intent hash for a user transaction.
            This hash identifies the transaction intent, plus additional signatures.
            This hash is signed by the notary, to create the submittable `NotarizedTransaction`.
          maxLength: 64
          minLength: 64
          type: string
        hash_bech32m:
          description: The Bech32m-encoded human readable `SignedTransactionIntentHash`.
          type: string
        transaction_intent:
          $ref: '#/components/schemas/TransactionIntentV2'
        transaction_intent_signatures:
          $ref: '#/components/schemas/IntentSignatures'
        non_root_subintent_signatures:
          description: |
            This gives the signatures for each subintent in `non_root_subintents` in `TransactionIntentV2`.
            For committed transactions, these arrays are of equal length and correspond one-to-one in order.
          items:
            $ref: '#/components/schemas/IntentSignatures'
          type: array
      required:
      - hash
      - hash_bech32m
      - non_root_subintent_signatures
      - transaction_intent
      - transaction_intent_signatures
    IntentSignatures:
      description: Signatures against the given intent.
      properties:
        signatures:
          items:
            $ref: '#/components/schemas/SignatureWithPublicKey'
          type: array
      required:
      - signatures
    TransactionIntentV2:
      properties:
        hash:
          description: |
            The hex-encoded transaction intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core "intent" of the transaction. Each transaction intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
          maxLength: 64
          minLength: 64
          type: string
        hash_bech32m:
          description: The Bech32m-encoded human readable `TransactionIntentHash`.
          type: string
        transaction_header:
          $ref: '#/components/schemas/TransactionHeaderV2'
        root_intent_core:
          $ref: '#/components/schemas/IntentCoreV2'
        non_root_subintents:
          items:
            $ref: '#/components/schemas/SubintentV2'
          type: array
      required:
      - hash
      - hash_bech32m
      - non_root_subintents
      - root_intent_core
      - transaction_header
    TransactionHeaderV2:
      properties:
        notary_public_key:
          $ref: '#/components/schemas/PublicKey'
        notary_is_signatory:
          description: Specifies whether the notary public key should be included
            in the transaction signers list
          type: boolean
        tip_basis_points:
          description: |
            An integer between `0` and `2^32 - 1 = 4294967295`, giving the validator tip as a basis points amount.
            That is, a value of `1` corresponds to an additional tip on 0.01% of the base fee.
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
      required:
      - notary_is_signatory
      - notary_public_key
      - tip_basis_points
    SubintentV2:
      properties:
        hash:
          description: |
            The hex-encoded subintent hash for a subintent, also known as the partial transaction id.
            This hash identifies the subintent. Each subintent can only be *successfully* committed once,
            but unlike a transaction intent, could be committed as a failure zero or more times first.
            This hash gets signed by any signatories on subintent.
          maxLength: 64
          minLength: 64
          type: string
        hash_bech32m:
          description: The Bech32m-encoded human readable `SubintentHash`.
          type: string
        intent_core:
          $ref: '#/components/schemas/IntentCoreV2'
      required:
      - hash
      - hash_bech32m
      - intent_core
    IntentCoreV2:
      properties:
        intent_header:
          $ref: '#/components/schemas/IntentHeaderV2'
        children_specifiers:
          items:
            $ref: '#/components/schemas/SubintentHashBech32m'
          type: array
        blobs_hex:
          additionalProperties:
            description: The hex-encoded blob content
            type: string
          description: "A map of the hex-encoded blob hash, to hex-encoded blob content.\
            \ Only returned if enabled in `TransactionFormatOptions` on your request."
        message:
          $ref: '#/components/schemas/TransactionMessage'
        instructions:
          description: The decompiled transaction manifest instructions. Only returned
            if enabled in `TransactionFormatOptions` on your request.
          type: string
      required:
      - children_specifiers
      - intent_header
    IntentHeaderV2:
      description: |
        The metadata common to both transaction intents and subintents.

        The `min_proposer_timestamp_inclusive` and `max_proposer_timestamp_exclusive` are both optional.
      properties:
        network_id:
          description: The logical id of the network
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        start_epoch_inclusive:
          description: |
            An integer between `0` and `10^10`, marking the epoch from which the transaction can be submitted.
            In the case of uncommitted transactions, a value of `10^10` indicates that the epoch was >= `10^10`.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        end_epoch_exclusive:
          description: |
            An integer between `0` and `10^10`, marking the epoch from which the transaction will no longer be valid, and be rejected.
            In the case of uncommitted transactions, a value of `10^10` indicates that the epoch was >= `10^10`.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        min_proposer_timestamp_inclusive:
          $ref: '#/components/schemas/ScryptoInstant'
        max_proposer_timestamp_exclusive:
          $ref: '#/components/schemas/ScryptoInstant'
        intent_discriminator:
          description: |
            The string representation of an integer between `0` and `2^64 - 1`, which can be chosen to ensure that
            a unique intent can be created. It only needs to be unique for a particular intent content and epoch/timestamp,
            and can be safely selected randomly to very high probability.

            This field was called `nonce` in the V1 models, but was a misleading name, as it got confused with a
            cryptographic nonce or an Ethereum-style nonce, and it is neither.
          type: string
      required:
      - end_epoch_exclusive
      - intent_discriminator
      - network_id
      - start_epoch_inclusive
    LedgerStateSummary:
      example:
        state_version: 8008281904611
        header_summary:
          epoch_round:
            round: 1465812980
            epoch: 6027456183
          proposer_timestamp:
            date_time: date_time
            unix_timestamp_ms: 60274561830704
          ledger_hashes:
            state_tree_hash: state_tree_hash
            transaction_tree_hash: transaction_tree_hash
            receipt_tree_hash: receipt_tree_hash
      properties:
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        header_summary:
          $ref: '#/components/schemas/LedgerHeaderSummary'
      required:
      - header_summary
      - state_version
    LedgerHeaderSummary:
      example:
        epoch_round:
          round: 1465812980
          epoch: 6027456183
        proposer_timestamp:
          date_time: date_time
          unix_timestamp_ms: 60274561830704
        ledger_hashes:
          state_tree_hash: state_tree_hash
          transaction_tree_hash: transaction_tree_hash
          receipt_tree_hash: receipt_tree_hash
      properties:
        epoch_round:
          $ref: '#/components/schemas/EpochRound'
        ledger_hashes:
          $ref: '#/components/schemas/LedgerHashes'
        proposer_timestamp:
          $ref: '#/components/schemas/InstantMs'
      required:
      - epoch_round
      - ledger_hashes
      - proposer_timestamp
    LedgerHashes:
      example:
        state_tree_hash: state_tree_hash
        transaction_tree_hash: transaction_tree_hash
        receipt_tree_hash: receipt_tree_hash
      properties:
        state_tree_hash:
          description: |
            The hex-encoded root hash of the state tree. This captures the current state of the state on the ledger.
          maxLength: 64
          minLength: 64
          type: string
        transaction_tree_hash:
          description: |
            The hex-encoded root hash of the transaction tree. This captures the ledger transactions committed to the ledger.
          maxLength: 64
          minLength: 64
          type: string
        receipt_tree_hash:
          description: |
            The hex-encoded root hash of the receipt tree. This captures the consensus-agreed output of each transaction on the ledger.
          maxLength: 64
          minLength: 64
          type: string
      required:
      - receipt_tree_hash
      - state_tree_hash
      - transaction_tree_hash
    StateVersion:
      format: int64
      maximum: 100000000000000
      minimum: 1
      type: integer
    TransactionIdentifiers:
      example:
        intent_hash: intent_hash
        intent_hash_bech32m: intent_hash_bech32m
        signed_intent_hash: signed_intent_hash
        payload_hash: payload_hash
        payload_hash_bech32m: payload_hash_bech32m
        signed_intent_hash_bech32m: signed_intent_hash_bech32m
      properties:
        intent_hash:
          description: |
            The hex-encoded transaction intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core "intent" of the transaction. Each transaction intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
          maxLength: 64
          minLength: 64
          type: string
        intent_hash_bech32m:
          description: The Bech32m-encoded human readable `TransactionIntentHash`.
          type: string
        signed_intent_hash:
          description: |
            The hex-encoded signed intent hash for a user transaction.
            This hash identifies the transaction intent, plus additional signatures.
            This hash is signed by the notary, to create the submittable `NotarizedTransaction`.
          maxLength: 64
          minLength: 64
          type: string
        signed_intent_hash_bech32m:
          description: The Bech32m-encoded human readable `SignedTransactionIntentHash`.
          type: string
        payload_hash:
          description: |
            The hex-encoded notarized transaction hash for a user transaction.
            This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
          maxLength: 64
          minLength: 64
          type: string
        payload_hash_bech32m:
          description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
          type: string
      required:
      - intent_hash
      - intent_hash_bech32m
      - payload_hash
      - payload_hash_bech32m
      - signed_intent_hash
      - signed_intent_hash_bech32m
    TransactionIntentHashInput:
      description: |
        The transaction intent hash for a user transaction, also known as the transaction id.
        This hash identifies the core "intent" of the transaction. Each transaction intent can only be committed once.
        This hash gets signed by any signatories on the transaction, to create the signed intent.
        Either hex or Bech32m-encoded strings are supported.
      type: string
    TransactionIntentHash:
      description: |
        The hex-encoded transaction intent hash for a user transaction, also known as the transaction id.
        This hash identifies the core "intent" of the transaction. Each transaction intent can only be committed once.
        This hash gets signed by any signatories on the transaction, to create the signed intent.
      maxLength: 64
      minLength: 64
      type: string
    TransactionIntentHashBech32m:
      description: The Bech32m-encoded human readable `TransactionIntentHash`.
      type: string
    SubintentHash:
      description: |
        The hex-encoded subintent hash for a subintent, also known as the partial transaction id.
        This hash identifies the subintent. Each subintent can only be *successfully* committed once,
        but unlike a transaction intent, could be committed as a failure zero or more times first.
        This hash gets signed by any signatories on subintent.
      maxLength: 64
      minLength: 64
      type: string
    SubintentHashBech32m:
      description: The Bech32m-encoded human readable `SubintentHash`.
      type: string
    SignedTransactionIntentHash:
      description: |
        The hex-encoded signed intent hash for a user transaction.
        This hash identifies the transaction intent, plus additional signatures.
        This hash is signed by the notary, to create the submittable `NotarizedTransaction`.
      maxLength: 64
      minLength: 64
      type: string
    SignedTransactionIntentHashBech32m:
      description: The Bech32m-encoded human readable `SignedTransactionIntentHash`.
      type: string
    NotarizedTransactionHashInput:
      description: |
        This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
        This hash should either be hex or Bech32m-encoded.
      type: string
    NotarizedTransactionHash:
      description: |
        The hex-encoded notarized transaction hash for a user transaction.
        This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
      maxLength: 64
      minLength: 64
      type: string
    NotarizedTransactionHashBech32m:
      description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
      type: string
    LedgerPayloadHash:
      description: |
        The hex-encoded ledger payload transaction hash.
        This is a wrapper for both user transactions, and system transactions such as genesis and round changes.
      maxLength: 64
      minLength: 64
      type: string
    LedgerPayloadHashBech32m:
      description: The Bech32m-encoded human readable `LedgerPayloadHash`.
      type: string
    CommittedIntentMetadata:
      properties:
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        payload_hash:
          description: |
            The hex-encoded notarized transaction hash for a user transaction.
            This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
          maxLength: 64
          minLength: 64
          type: string
        payload_hash_bech32m:
          description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
          type: string
        is_same_transaction:
          description: |
            Whether the intent was committed in a transaction with the same payload.
            This is a convenience field, which can also be computed using `payload_hash` by a client
            knowing the payload of the submitted transaction.
          type: boolean
      required:
      - is_same_transaction
      - payload_hash
      - payload_hash_bech32m
      - state_version
    TransactionStatus:
      description: The status of the transaction
      enum:
      - Succeeded
      - Failed
      - Rejected
      type: string
    TransactionReceipt:
      description: The transaction execution receipt
      example:
        output:
        - programmatic_json: ""
          hex: hex
        - programmatic_json: ""
          hex: hex
        error_message: error_message
        fee_summary:
          xrd_total_storage_cost: xrd_total_storage_cost
          xrd_total_execution_cost: xrd_total_execution_cost
          execution_cost_units_consumed: 343953088
          xrd_total_finalization_cost: xrd_total_finalization_cost
          finalization_cost_units_consumed: 2588772717
          xrd_total_royalty_cost: xrd_total_royalty_cost
          xrd_total_tipping_cost: xrd_total_tipping_cost
        next_epoch:
          significant_protocol_update_readiness:
          - signalled_stake: signalled_stake
            readiness_signal_name: readiness_signal_name
          - signalled_stake: signalled_stake
            readiness_signal_name: readiness_signal_name
          validators:
          - stake: stake
            address: address
            key:
              key_hex: key_hex
              key_type: EcdsaSecp256k1
          - stake: stake
            address: address
            key:
              key_hex: key_hex
              key_type: EcdsaSecp256k1
          epoch: 2027123023
        fee_destination:
          to_burn: to_burn
          to_validator_set: to_validator_set
          to_proposer: to_proposer
          to_royalty_recipients:
          - royalty_recipient:
              entity_type: GlobalPackage
              entity_address: entity_address
              is_global: true
            xrd_amount: xrd_amount
          - royalty_recipient:
              entity_type: GlobalPackage
              entity_address: entity_address
              is_global: true
            xrd_amount: xrd_amount
        costing_parameters:
          finalization_cost_unit_price: finalization_cost_unit_price
          execution_cost_unit_loan: 2560717018
          finalization_cost_unit_limit: 2421234836
          execution_cost_unit_price: execution_cost_unit_price
          xrd_storage_price: xrd_storage_price
          xrd_usd_price: xrd_usd_price
          execution_cost_unit_limit: 629561881
          xrd_archive_storage_price: xrd_archive_storage_price
          tip_percentage: 15087
          tip_proportion: tip_proportion
        state_updates:
          deleted_substates:
          - system_structure:
              type: SystemField
            previous_value:
              substate_data_hash: substate_data_hash
              substate_data:
                substate_type: null
                is_locked: true
              substate_hex: substate_hex
            substate_id:
              substate_type: BootLoaderModuleFieldSystemBoot
              substate_key:
                key_type: Field
                db_sort_key_hex: db_sort_key_hex
              entity_type: null
              partition_kind: null
              partition_number: 237
              entity_address: entity_address
              entity_module: null
          - system_structure:
              type: SystemField
            previous_value:
              substate_data_hash: substate_data_hash
              substate_data:
                substate_type: null
                is_locked: true
              substate_hex: substate_hex
            substate_id:
              substate_type: BootLoaderModuleFieldSystemBoot
              substate_key:
                key_type: Field
                db_sort_key_hex: db_sort_key_hex
              entity_type: null
              partition_kind: null
              partition_number: 237
              entity_address: entity_address
              entity_module: null
          deleted_partitions:
          - entity_type: null
            partition_kind: Field
            partition_number: 180
            entity_address: entity_address
            entity_module: TypeInfo
          - entity_type: null
            partition_kind: Field
            partition_number: 180
            entity_address: entity_address
            entity_module: TypeInfo
          created_substates:
          - system_structure:
              type: SystemField
            substate_id:
              substate_type: BootLoaderModuleFieldSystemBoot
              substate_key:
                key_type: Field
                db_sort_key_hex: db_sort_key_hex
              entity_type: null
              partition_kind: null
              partition_number: 237
              entity_address: entity_address
              entity_module: null
            value:
              substate_data_hash: substate_data_hash
              substate_data:
                substate_type: null
                is_locked: true
              substate_hex: substate_hex
          - system_structure:
              type: SystemField
            substate_id:
              substate_type: BootLoaderModuleFieldSystemBoot
              substate_key:
                key_type: Field
                db_sort_key_hex: db_sort_key_hex
              entity_type: null
              partition_kind: null
              partition_number: 237
              entity_address: entity_address
              entity_module: null
            value:
              substate_data_hash: substate_data_hash
              substate_data:
                substate_type: null
                is_locked: true
              substate_hex: substate_hex
          updated_substates:
          - system_structure:
              type: SystemField
            previous_value:
              substate_data_hash: substate_data_hash
              substate_data:
                substate_type: null
                is_locked: true
              substate_hex: substate_hex
            substate_id:
              substate_type: BootLoaderModuleFieldSystemBoot
              substate_key:
                key_type: Field
                db_sort_key_hex: db_sort_key_hex
              entity_type: null
              partition_kind: null
              partition_number: 237
              entity_address: entity_address
              entity_module: null
            new_value:
              substate_data_hash: substate_data_hash
              substate_data:
                substate_type: null
                is_locked: true
              substate_hex: substate_hex
          - system_structure:
              type: SystemField
            previous_value:
              substate_data_hash: substate_data_hash
              substate_data:
                substate_type: null
                is_locked: true
              substate_hex: substate_hex
            substate_id:
              substate_type: BootLoaderModuleFieldSystemBoot
              substate_key:
                key_type: Field
                db_sort_key_hex: db_sort_key_hex
              entity_type: null
              partition_kind: null
              partition_number: 237
              entity_address: entity_address
              entity_module: null
            new_value:
              substate_data_hash: substate_data_hash
              substate_data:
                substate_type: null
                is_locked: true
              substate_hex: substate_hex
          new_global_entities:
          - entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
          - entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
        fee_source:
          from_vaults:
          - xrd_amount: xrd_amount
            vault_entity:
              entity_type: GlobalPackage
              entity_address: entity_address
              is_global: true
          - xrd_amount: xrd_amount
            vault_entity:
              entity_type: GlobalPackage
              entity_address: entity_address
              is_global: true
        events:
        - data:
            programmatic_json: ""
            hex: hex
          type:
            name: name
            type_reference:
              full_type_id:
                schema_hash: schema_hash
                entity_address: entity_address
                local_type_id:
                  as_sbor:
                    programmatic_json: ""
                    hex: hex
                  kind: WellKnown
                  id: 1553093137
            emitter:
              type: Function
        - data:
            programmatic_json: ""
            hex: hex
          type:
            name: name
            type_reference:
              full_type_id:
                schema_hash: schema_hash
                entity_address: entity_address
                local_type_id:
                  as_sbor:
                    programmatic_json: ""
                    hex: hex
                  kind: WellKnown
                  id: 1553093137
            emitter:
              type: Function
        status: Succeeded
      properties:
        status:
          $ref: '#/components/schemas/TransactionStatus'
        fee_summary:
          $ref: '#/components/schemas/FeeSummary'
        costing_parameters:
          $ref: '#/components/schemas/CostingParameters'
        fee_source:
          $ref: '#/components/schemas/FeeSource'
        fee_destination:
          $ref: '#/components/schemas/FeeDestination'
        state_updates:
          $ref: '#/components/schemas/StateUpdates'
        events:
          items:
            $ref: '#/components/schemas/Event'
          type: array
        next_epoch:
          $ref: '#/components/schemas/NextEpoch'
        output:
          description: |
            The return data for each line of the transaction intent's manifest.
            This property is only present if the `status` is `Succeeded`.
          items:
            $ref: '#/components/schemas/SborData'
          type: array
        error_message:
          description: |
            The error message. This property is only present if the status is `Failed` or `Rejected`.
          type: string
      required:
      - costing_parameters
      - fee_summary
      - state_updates
      - status
    FeeSummary:
      example:
        xrd_total_storage_cost: xrd_total_storage_cost
        xrd_total_execution_cost: xrd_total_execution_cost
        execution_cost_units_consumed: 343953088
        xrd_total_finalization_cost: xrd_total_finalization_cost
        finalization_cost_units_consumed: 2588772717
        xrd_total_royalty_cost: xrd_total_royalty_cost
        xrd_total_tipping_cost: xrd_total_tipping_cost
      properties:
        execution_cost_units_consumed:
          description: "An integer between `0` and `2^32 - 1`, representing the amount\
            \ of cost units consumed by the transaction execution."
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        finalization_cost_units_consumed:
          description: "An integer between `0` and `2^32 - 1`, representing the amount\
            \ of cost units consumed by the transaction finalization."
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        xrd_total_execution_cost:
          description: |
            The string-encoded decimal representing the total amount of XRD burned in the transaction as part of execution costs.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        xrd_total_finalization_cost:
          description: |
            The string-encoded decimal representing the total amount of XRD burned in the transaction as part of finalization costs.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        xrd_total_royalty_cost:
          description: |
            The string-encoded decimal representing the total amount of XRD paid in royalties as part of the transaction.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        xrd_total_storage_cost:
          description: |
            The string-encoded decimal representing the total amount of XRD paid in state expansion costs as part of the transaction.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        xrd_total_tipping_cost:
          description: |
            The string-encoded decimal representing the total amount of XRD tipped to validators in the transaction.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - execution_cost_units_consumed
      - finalization_cost_units_consumed
      - xrd_total_execution_cost
      - xrd_total_finalization_cost
      - xrd_total_royalty_cost
      - xrd_total_storage_cost
      - xrd_total_tipping_cost
    CostingParameters:
      example:
        finalization_cost_unit_price: finalization_cost_unit_price
        execution_cost_unit_loan: 2560717018
        finalization_cost_unit_limit: 2421234836
        execution_cost_unit_price: execution_cost_unit_price
        xrd_storage_price: xrd_storage_price
        xrd_usd_price: xrd_usd_price
        execution_cost_unit_limit: 629561881
        xrd_archive_storage_price: xrd_archive_storage_price
        tip_percentage: 15087
        tip_proportion: tip_proportion
      properties:
        execution_cost_unit_price:
          description: |
            The string-encoded decimal representing the XRD price of a single cost unit of transaction execution.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        execution_cost_unit_limit:
          description: "An integer between `0` and `2^32 - 1`, representing the maximum\
            \ amount of cost units available for the transaction execution."
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        execution_cost_unit_loan:
          description: "An integer between `0` and `2^32 - 1`, representing the maximum\
            \ number of cost units which can be used before fee is locked from a vault."
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        finalization_cost_unit_price:
          description: |
            The string-encoded decimal representing the XRD price of a single cost unit of transaction finalization.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        finalization_cost_unit_limit:
          description: "An integer between `0` and `2^32 - 1`, representing the maximum\
            \ amount of cost units available for the transaction finalization."
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        xrd_usd_price:
          description: |
            The string-encoded decimal representing what amount of XRD is consumed by a Royalty of 1 USD.
            This is fixed for a given protocol version, so is not an accurate representation of the XRD price.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        xrd_storage_price:
          description: |
            The string-encoded decimal representing the price of 1 byte of state storage, expressed in XRD.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        xrd_archive_storage_price:
          description: |
            The string-encoded decimal representing the price of 1 byte of archive storage, expressed in XRD.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        tip_percentage:
          deprecated: true
          description: |
            NOTE: V2 transactions specify the tip in basis points, which gets rounded down for this `tip_percentage` field.
            It is recommended to instead use the `tip_proportion` field to get a fully accurate value.

            An integer between `0` and `65535`, giving the validator tip as a percentage amount. A value of `1` corresponds to 1% of the fee.
          format: int32
          maximum: 65535
          minimum: 0
          type: integer
        tip_proportion:
          description: |
            A string-encoded decimal, giving the validator tip as a proportional amount.
            A value of `"0.01"` corresponds to 1% of the fee being paid as a tip.

            NOTE: This field is not marked as required for Cuttlefish launch, to permit cuttlefish clients to talk to pre-cuttlefish nodes.
            This can be changed after Cuttlefish enactment once all nodes are on Cuttlefish.
          type: string
      required:
      - execution_cost_unit_limit
      - execution_cost_unit_loan
      - execution_cost_unit_price
      - finalization_cost_unit_limit
      - finalization_cost_unit_price
      - tip_percentage
      - xrd_archive_storage_price
      - xrd_storage_price
      - xrd_usd_price
    FeeSource:
      example:
        from_vaults:
        - xrd_amount: xrd_amount
          vault_entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
        - xrd_amount: xrd_amount
          vault_entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
      properties:
        from_vaults:
          description: A breakdown of which vaults were used to pay the fee.
          items:
            $ref: '#/components/schemas/PaymentFromVault'
          type: array
      required:
      - from_vaults
    PaymentFromVault:
      example:
        xrd_amount: xrd_amount
        vault_entity:
          entity_type: GlobalPackage
          entity_address: entity_address
          is_global: true
      properties:
        vault_entity:
          $ref: '#/components/schemas/EntityReference'
        xrd_amount:
          description: |
            The string-encoded decimal representing the amount of fee in XRD paid by this vault.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - vault_entity
      - xrd_amount
    FeeDestination:
      example:
        to_burn: to_burn
        to_validator_set: to_validator_set
        to_proposer: to_proposer
        to_royalty_recipients:
        - royalty_recipient:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
          xrd_amount: xrd_amount
        - royalty_recipient:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
          xrd_amount: xrd_amount
      properties:
        to_proposer:
          description: |
            The string-encoded decimal representing the amount of fee in XRD paid to the proposer.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        to_validator_set:
          description: |
            The string-encoded decimal representing the amount of fee in XRD paid to the validator set.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        to_burn:
          description: |
            The string-encoded decimal representing the amount of fee burnt, in XRD.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        to_royalty_recipients:
          description: |
            A breakdown of where the royalties were paid to.
          items:
            $ref: '#/components/schemas/PaymentToRoyaltyRecipient'
          type: array
      required:
      - to_burn
      - to_proposer
      - to_royalty_recipients
      - to_validator_set
    PaymentToRoyaltyRecipient:
      example:
        royalty_recipient:
          entity_type: GlobalPackage
          entity_address: entity_address
          is_global: true
        xrd_amount: xrd_amount
      properties:
        royalty_recipient:
          $ref: '#/components/schemas/EntityReference'
        xrd_amount:
          description: |
            The string-encoded decimal representing the amount of fee in XRD paid as royalty to this recipient.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - royalty_recipient
      - xrd_amount
    ProposerReward:
      properties:
        validator_index:
          $ref: '#/components/schemas/ActiveValidatorIndex'
        xrd_amount:
          description: |
            The string-encoded decimal representing the amount of reward in XRD.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - validator_index
      - xrd_amount
    StateUpdates:
      description: Transaction state updates (only present if status is Succeeded
        or Failed)
      example:
        deleted_substates:
        - system_structure:
            type: SystemField
          previous_value:
            substate_data_hash: substate_data_hash
            substate_data:
              substate_type: null
              is_locked: true
            substate_hex: substate_hex
          substate_id:
            substate_type: BootLoaderModuleFieldSystemBoot
            substate_key:
              key_type: Field
              db_sort_key_hex: db_sort_key_hex
            entity_type: null
            partition_kind: null
            partition_number: 237
            entity_address: entity_address
            entity_module: null
        - system_structure:
            type: SystemField
          previous_value:
            substate_data_hash: substate_data_hash
            substate_data:
              substate_type: null
              is_locked: true
            substate_hex: substate_hex
          substate_id:
            substate_type: BootLoaderModuleFieldSystemBoot
            substate_key:
              key_type: Field
              db_sort_key_hex: db_sort_key_hex
            entity_type: null
            partition_kind: null
            partition_number: 237
            entity_address: entity_address
            entity_module: null
        deleted_partitions:
        - entity_type: null
          partition_kind: Field
          partition_number: 180
          entity_address: entity_address
          entity_module: TypeInfo
        - entity_type: null
          partition_kind: Field
          partition_number: 180
          entity_address: entity_address
          entity_module: TypeInfo
        created_substates:
        - system_structure:
            type: SystemField
          substate_id:
            substate_type: BootLoaderModuleFieldSystemBoot
            substate_key:
              key_type: Field
              db_sort_key_hex: db_sort_key_hex
            entity_type: null
            partition_kind: null
            partition_number: 237
            entity_address: entity_address
            entity_module: null
          value:
            substate_data_hash: substate_data_hash
            substate_data:
              substate_type: null
              is_locked: true
            substate_hex: substate_hex
        - system_structure:
            type: SystemField
          substate_id:
            substate_type: BootLoaderModuleFieldSystemBoot
            substate_key:
              key_type: Field
              db_sort_key_hex: db_sort_key_hex
            entity_type: null
            partition_kind: null
            partition_number: 237
            entity_address: entity_address
            entity_module: null
          value:
            substate_data_hash: substate_data_hash
            substate_data:
              substate_type: null
              is_locked: true
            substate_hex: substate_hex
        updated_substates:
        - system_structure:
            type: SystemField
          previous_value:
            substate_data_hash: substate_data_hash
            substate_data:
              substate_type: null
              is_locked: true
            substate_hex: substate_hex
          substate_id:
            substate_type: BootLoaderModuleFieldSystemBoot
            substate_key:
              key_type: Field
              db_sort_key_hex: db_sort_key_hex
            entity_type: null
            partition_kind: null
            partition_number: 237
            entity_address: entity_address
            entity_module: null
          new_value:
            substate_data_hash: substate_data_hash
            substate_data:
              substate_type: null
              is_locked: true
            substate_hex: substate_hex
        - system_structure:
            type: SystemField
          previous_value:
            substate_data_hash: substate_data_hash
            substate_data:
              substate_type: null
              is_locked: true
            substate_hex: substate_hex
          substate_id:
            substate_type: BootLoaderModuleFieldSystemBoot
            substate_key:
              key_type: Field
              db_sort_key_hex: db_sort_key_hex
            entity_type: null
            partition_kind: null
            partition_number: 237
            entity_address: entity_address
            entity_module: null
          new_value:
            substate_data_hash: substate_data_hash
            substate_data:
              substate_type: null
              is_locked: true
            substate_hex: substate_hex
        new_global_entities:
        - entity_type: GlobalPackage
          entity_address: entity_address
          is_global: true
        - entity_type: GlobalPackage
          entity_address: entity_address
          is_global: true
      properties:
        deleted_partitions:
          items:
            $ref: '#/components/schemas/PartitionId'
          type: array
        created_substates:
          items:
            $ref: '#/components/schemas/CreatedSubstate'
          type: array
        updated_substates:
          items:
            $ref: '#/components/schemas/UpdatedSubstate'
          type: array
        deleted_substates:
          items:
            $ref: '#/components/schemas/DeletedSubstate'
          type: array
        new_global_entities:
          items:
            $ref: '#/components/schemas/EntityReference'
          type: array
      required:
      - created_substates
      - deleted_partitions
      - deleted_substates
      - new_global_entities
      - updated_substates
    NextEpoch:
      example:
        significant_protocol_update_readiness:
        - signalled_stake: signalled_stake
          readiness_signal_name: readiness_signal_name
        - signalled_stake: signalled_stake
          readiness_signal_name: readiness_signal_name
        validators:
        - stake: stake
          address: address
          key:
            key_hex: key_hex
            key_type: EcdsaSecp256k1
        - stake: stake
          address: address
          key:
            key_hex: key_hex
            key_type: EcdsaSecp256k1
        epoch: 2027123023
      properties:
        epoch:
          description: "An integer between `0` and `10^10`, marking the new epoch"
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        validators:
          description: "Active validator set for the new epoch, ordered by stake descending."
          items:
            $ref: '#/components/schemas/ActiveValidator'
          type: array
        significant_protocol_update_readiness:
          items:
            $ref: '#/components/schemas/SignificantProtocolUpdateReadinessEntry'
          type: array
      required:
      - epoch
      - validators
    SignificantProtocolUpdateReadinessEntry:
      example:
        signalled_stake: signalled_stake
        readiness_signal_name: readiness_signal_name
      properties:
        readiness_signal_name:
          type: string
        signalled_stake:
          type: string
      required:
      - readiness_signal_name
      - signalled_stake
    CreatedSubstate:
      example:
        system_structure:
          type: SystemField
        substate_id:
          substate_type: BootLoaderModuleFieldSystemBoot
          substate_key:
            key_type: Field
            db_sort_key_hex: db_sort_key_hex
          entity_type: null
          partition_kind: null
          partition_number: 237
          entity_address: entity_address
          entity_module: null
        value:
          substate_data_hash: substate_data_hash
          substate_data:
            substate_type: null
            is_locked: true
          substate_hex: substate_hex
      properties:
        substate_id:
          $ref: '#/components/schemas/SubstateId'
        value:
          $ref: '#/components/schemas/SubstateValue'
        system_structure:
          $ref: '#/components/schemas/SubstateSystemStructure'
      required:
      - substate_id
      - system_structure
      - value
    UpdatedSubstate:
      example:
        system_structure:
          type: SystemField
        previous_value:
          substate_data_hash: substate_data_hash
          substate_data:
            substate_type: null
            is_locked: true
          substate_hex: substate_hex
        substate_id:
          substate_type: BootLoaderModuleFieldSystemBoot
          substate_key:
            key_type: Field
            db_sort_key_hex: db_sort_key_hex
          entity_type: null
          partition_kind: null
          partition_number: 237
          entity_address: entity_address
          entity_module: null
        new_value:
          substate_data_hash: substate_data_hash
          substate_data:
            substate_type: null
            is_locked: true
          substate_hex: substate_hex
      properties:
        substate_id:
          $ref: '#/components/schemas/SubstateId'
        new_value:
          $ref: '#/components/schemas/SubstateValue'
        previous_value:
          $ref: '#/components/schemas/SubstateValue'
        system_structure:
          $ref: '#/components/schemas/SubstateSystemStructure'
      required:
      - new_value
      - substate_id
      - system_structure
    SubstateValue:
      example:
        substate_data_hash: substate_data_hash
        substate_data:
          substate_type: null
          is_locked: true
        substate_hex: substate_hex
      properties:
        substate_hex:
          description: "The hex-encoded, SBOR-encoded substate data bytes. Only returned\
            \ if enabled in SubstateFormatOptions on your request (default false)."
          type: string
        substate_data_hash:
          description: The hex-encoded Blake2b-256 hash of the substate data bytes.
            Only returned if enabled in SubstateFormatOptions on your request (default
            false).
          type: string
        substate_data:
          $ref: '#/components/schemas/Substate'
    DeletedSubstate:
      example:
        system_structure:
          type: SystemField
        previous_value:
          substate_data_hash: substate_data_hash
          substate_data:
            substate_type: null
            is_locked: true
          substate_hex: substate_hex
        substate_id:
          substate_type: BootLoaderModuleFieldSystemBoot
          substate_key:
            key_type: Field
            db_sort_key_hex: db_sort_key_hex
          entity_type: null
          partition_kind: null
          partition_number: 237
          entity_address: entity_address
          entity_module: null
      properties:
        substate_id:
          $ref: '#/components/schemas/SubstateId'
        previous_value:
          $ref: '#/components/schemas/SubstateValue'
        system_structure:
          $ref: '#/components/schemas/SubstateSystemStructure'
      required:
      - substate_id
      - system_structure
    EntityReference:
      example:
        entity_type: GlobalPackage
        entity_address: entity_address
        is_global: true
      properties:
        entity_type:
          $ref: '#/components/schemas/EntityType'
        is_global:
          type: boolean
        entity_address:
          description: Bech32m-encoded human readable version of the entity's address
            (ie the entity's node id)
          type: string
      required:
      - entity_address
      - entity_type
      - is_global
    PartitionId:
      example:
        entity_type: null
        partition_kind: Field
        partition_number: 180
        entity_address: entity_address
        entity_module: TypeInfo
      properties:
        entity_type:
          $ref: '#/components/schemas/EntityType'
        entity_address:
          description: Bech32m-encoded human readable version of the entity's address
            (ie the entity's node id)
          type: string
        entity_module:
          $ref: '#/components/schemas/EntityModule'
        partition_kind:
          $ref: '#/components/schemas/PartitionKind'
        partition_number:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
      required:
      - entity_address
      - entity_module
      - entity_type
      - partition_kind
      - partition_number
    SubstateId:
      allOf:
      - $ref: '#/components/schemas/PartitionId'
      - properties:
          substate_type:
            $ref: '#/components/schemas/SubstateType'
          substate_key:
            $ref: '#/components/schemas/SubstateKey'
        required:
        - substate_key
        - substate_type
      example:
        substate_type: BootLoaderModuleFieldSystemBoot
        substate_key:
          key_type: Field
          db_sort_key_hex: db_sort_key_hex
        entity_type: null
        partition_kind: null
        partition_number: 237
        entity_address: entity_address
        entity_module: null
    EntityModule:
      enum:
      - TypeInfo
      - Metadata
      - RoleAssignment
      - Royalty
      - Main
      - Schema
      - BootLoader
      - ProtocolUpdateStatus
      type: string
    PartitionKind:
      description: |
        The type of the partition:
        - Field
          - Has key: TupleKey(u8) also known as an offset
          - No iteration exposed to engine
          - Is versioned / locked substate-by-substate
        - KeyValue ("ConcurrentMap")
          - Has key: MapKey(Vec<u8>)
          - No iteration exposed to engine
          - Is versioned / locked substate-by-substate
        - Index
          - Has key: MapKey(Vec<u8>)
          - Iteration exposed to engine via the MapKey's database key (ie hash of the key)
          - Is versioned / locked in its entirety
        - SortedIndex
          - Has key: SortedU16Key(U16, Vec<u8>)
          - Iteration exposed to engine via the user-controlled U16 prefix and then the MapKey's database key (ie hash of the key)
          - Is versioned / locked in its entirety
      enum:
      - Field
      - KeyValue
      - Index
      - SortedIndex
      type: string
    PartitionDescriptionType:
      enum:
      - Logical
      - Physical
      type: string
    PartitionDescription:
      properties:
        type:
          $ref: '#/components/schemas/PartitionDescriptionType'
        value:
          description: |
            An absolute or relative partition description, depending on the `type`:
            - if `Physical`, then this is a partition number,
            - if `Logical`, then this is a partition offset.
          format: int32
          maximum: 255
          minimum: 0
          type: integer
      required:
      - type
      - value
    BlueprintPayloadDefType:
      enum:
      - Static
      - Generic
      type: string
    BlueprintPayloadDef:
      discriminator:
        mapping:
          Static: '#/components/schemas/StaticBlueprintPayloadDef'
          Generic: '#/components/schemas/GenericBlueprintPayloadDef'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/BlueprintPayloadDefType'
      required:
      - type
    StaticBlueprintPayloadDef:
      allOf:
      - $ref: '#/components/schemas/BlueprintPayloadDef'
      - properties:
          type_id:
            $ref: '#/components/schemas/ScopedTypeId'
        required:
        - type_id
    GenericBlueprintPayloadDef:
      allOf:
      - $ref: '#/components/schemas/BlueprintPayloadDef'
      - properties:
          generic_index:
            description: An index within the list of generic type substitutions.
            format: int32
            maximum: 255
            minimum: 0
            type: integer
        required:
        - generic_index
    FullyScopedTypeId:
      description: |
        An identifier for a type in the context of a schema in an entity's schema partition.

        Note - this type provides a schema context even for well-known types where this context
        is effectively irrelevant.
      example:
        schema_hash: schema_hash
        entity_address: entity_address
        local_type_id:
          as_sbor:
            programmatic_json: ""
            hex: hex
          kind: WellKnown
          id: 1553093137
      properties:
        entity_address:
          description: Bech32m-encoded human readable version of the entity's address
            (ie the entity's node id)
          type: string
        schema_hash:
          description: "The hex-encoded schema hash, capturing the identity of an\
            \ SBOR schema."
          maxLength: 64
          minLength: 64
          type: string
        local_type_id:
          $ref: '#/components/schemas/LocalTypeId'
      required:
      - entity_address
      - local_type_id
      - schema_hash
    ScopedTypeId:
      description: |
        An identifier for a type in the context of a schema.

        The location of the schema store to locate the schema is not included, and
        is known from context. Currently the schema store will be in the
        schema partition under a node (typically a package).

        Note - this type provides scoping to a schema even for well-known types where
        the schema is irrelevant.
      properties:
        schema_hash:
          description: "The hex-encoded schema hash, capturing the identity of an\
            \ SBOR schema."
          maxLength: 64
          minLength: 64
          type: string
        local_type_id:
          $ref: '#/components/schemas/LocalTypeId'
      required:
      - local_type_id
      - schema_hash
    BlueprintTypeIdentifier:
      description: |
        An identifier for a defined type in the v1 blueprint version under the given package blueprint.
      properties:
        package_address:
          description: The Bech32m-encoded human readable version of the package address
          type: string
        blueprint_name:
          type: string
        type_name:
          type: string
      required:
      - blueprint_name
      - package_address
      - type_name
    SubstateKey:
      discriminator:
        mapping:
          Field: '#/components/schemas/FieldSubstateKey'
          Map: '#/components/schemas/MapSubstateKey'
          Sorted: '#/components/schemas/SortedSubstateKey'
        propertyName: key_type
      example:
        key_type: Field
        db_sort_key_hex: db_sort_key_hex
      properties:
        key_type:
          $ref: '#/components/schemas/SubstateKeyType'
        db_sort_key_hex:
          description: "The hex-encoded bytes of the partially-hashed DB sort key,\
            \ under the given entity partition"
          type: string
      required:
      - db_sort_key_hex
      - key_type
    SubstateKeyType:
      enum:
      - Field
      - Map
      - Sorted
      type: string
    FieldSubstateKey:
      allOf:
      - $ref: '#/components/schemas/SubstateKey'
      - properties:
          id:
            format: int32
            maximum: 255
            minimum: 0
            type: integer
        required:
        - id
    MapSubstateKey:
      allOf:
      - $ref: '#/components/schemas/SubstateKey'
      - properties:
          key_hex:
            description: The hex-encoded bytes of the substate key
            type: string
        required:
        - key_hex
    SortedSubstateKey:
      allOf:
      - $ref: '#/components/schemas/SubstateKey'
      - properties:
          sort_prefix_hex:
            description: The hex-encoded bytes of the sorted part of the key
            type: string
          key_hex:
            description: The hex-encoded remaining bytes of the key
            type: string
        required:
        - key_hex
        - sort_prefix_hex
    ResourceAddress:
      description: The Bech32m-encoded human readable version of the resource address
      type: string
    ComponentAddress:
      description: The Bech32m-encoded human readable version of the component address
      type: string
    PackageAddress:
      description: The Bech32m-encoded human readable version of the package address
      type: string
    GlobalAddress:
      description: The Bech32m-encoded human readable version of any global address
      type: string
    InstantMs:
      example:
        date_time: date_time
        unix_timestamp_ms: 60274561830704
      properties:
        unix_timestamp_ms:
          description: "An integer between `0` and `10^14`, marking the unix timestamp\
            \ in ms."
          format: int64
          maximum: 100000000000000
          minimum: 0
          type: integer
        date_time:
          description: |
            The RFC 3339 / ISO 8601 string representation of the timestamp. Will always use "Z"
            (denoting UTC) and include milliseconds (even if `000`).
            E.g.: `2023-01-26T18:30:09.453Z`.
          type: string
      required:
      - date_time
      - unix_timestamp_ms
    ScryptoInstant:
      properties:
        unix_timestamp_seconds:
          description: |
            A decimal string-encoded 64-bit signed integer, marking the unix timestamp in seconds.

            Note: this field accurately represents the full range of possible on-ledger values (i.e.
            `-2^63 <= seconds < 2^63`). This is contrary to the `InstantMs` type used in other
            places of this API.
          type: string
        date_time:
          description: |
            The RFC 3339 / ISO 8601 string representation of the timestamp. Will always use "Z"
            (denoting UTC) and a second-precision (i.e. *skipping* the `.000` milliseconds part).
            E.g.: `2023-01-26T18:30:09Z`.

            Note: This field will *not* be present if the actual on-ledger `unix_timestamp_seconds`
            value is outside the basic range supported by the RFC 3339 / ISO 8601 standard, which
            starts at year 1583 (i.e. the beginning of the Gregorian calendar) and ends at year
            9999 (inclusive).
          type: string
      required:
      - unix_timestamp_seconds
    InstructionResourceChanges:
      example:
        resource_changes:
        - amount: amount
          component_entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
          resource_address: resource_address
          vault_entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
        - amount: amount
          component_entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
          resource_address: resource_address
          vault_entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
        index: 343953088
      properties:
        index:
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        resource_changes:
          items:
            $ref: '#/components/schemas/ResourceChange'
          type: array
      required:
      - index
      - resource_changes
    ResourceChange:
      example:
        amount: amount
        component_entity:
          entity_type: GlobalPackage
          entity_address: entity_address
          is_global: true
        resource_address: resource_address
        vault_entity:
          entity_type: GlobalPackage
          entity_address: entity_address
          is_global: true
      properties:
        resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
        component_entity:
          $ref: '#/components/schemas/EntityReference'
        vault_entity:
          $ref: '#/components/schemas/EntityReference'
        amount:
          description: |
            The string-encoded decimal representing the XRD amount put or taken from the vault.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - amount
      - component_entity
      - resource_address
      - vault_entity
    Event:
      description: Event emitted by a transaction.
      example:
        data:
          programmatic_json: ""
          hex: hex
        type:
          name: name
          type_reference:
            full_type_id:
              schema_hash: schema_hash
              entity_address: entity_address
              local_type_id:
                as_sbor:
                  programmatic_json: ""
                  hex: hex
                kind: WellKnown
                id: 1553093137
          emitter:
            type: Function
      properties:
        type:
          $ref: '#/components/schemas/EventTypeIdentifier'
        data:
          $ref: '#/components/schemas/SborData'
      required:
      - data
      - type
    EventTypeIdentifier:
      description: Identifier of a specific event schema.
      example:
        name: name
        type_reference:
          full_type_id:
            schema_hash: schema_hash
            entity_address: entity_address
            local_type_id:
              as_sbor:
                programmatic_json: ""
                hex: hex
              kind: WellKnown
              id: 1553093137
        emitter:
          type: Function
      properties:
        emitter:
          $ref: '#/components/schemas/EventEmitterIdentifier'
        type_reference:
          $ref: '#/components/schemas/PackageTypeReference'
        name:
          type: string
      required:
      - emitter
      - name
      - type_reference
    EventEmitterIdentifierType:
      enum:
      - Function
      - Method
      type: string
    EventEmitterIdentifier:
      discriminator:
        mapping:
          Function: '#/components/schemas/FunctionEventEmitterIdentifier'
          Method: '#/components/schemas/MethodEventEmitterIdentifier'
        propertyName: type
      example:
        type: Function
      properties:
        type:
          $ref: '#/components/schemas/EventEmitterIdentifierType'
      required:
      - type
    FunctionEventEmitterIdentifier:
      allOf:
      - $ref: '#/components/schemas/EventEmitterIdentifier'
      - properties:
          package_address:
            $ref: '#/components/schemas/PackageAddress'
          blueprint_name:
            description: The blueprint under the package which emitted the event.
            type: string
        required:
        - blueprint_name
        - package_address
    MethodEventEmitterIdentifier:
      allOf:
      - $ref: '#/components/schemas/EventEmitterIdentifier'
      - properties:
          entity:
            $ref: '#/components/schemas/EntityReference'
          object_module_id:
            $ref: '#/components/schemas/ModuleId'
        required:
        - entity
        - object_module_id
    PublicKeyType:
      enum:
      - EcdsaSecp256k1
      - EddsaEd25519
      type: string
    PublicKey:
      discriminator:
        mapping:
          EcdsaSecp256k1: '#/components/schemas/EcdsaSecp256k1PublicKey'
          EddsaEd25519: '#/components/schemas/EddsaEd25519PublicKey'
        propertyName: key_type
      example:
        key_type: EcdsaSecp256k1
      properties:
        key_type:
          $ref: '#/components/schemas/PublicKeyType'
      required:
      - key_type
    EcdsaSecp256k1PublicKey:
      allOf:
      - $ref: '#/components/schemas/PublicKey'
      - properties:
          key_hex:
            description: The hex-encoded compressed ECDSA Secp256k1 public key (33
              bytes)
            maxLength: 66
            minLength: 66
            type: string
        required:
        - key_hex
      example:
        key_hex: key_hex
        key_type: EcdsaSecp256k1
    EddsaEd25519PublicKey:
      allOf:
      - $ref: '#/components/schemas/PublicKey'
      - properties:
          key_hex:
            description: The hex-encoded compressed EdDSA Ed25519 public key (32 bytes)
            maxLength: 64
            minLength: 64
            type: string
        required:
        - key_hex
    Signature:
      discriminator:
        mapping:
          EcdsaSecp256k1: '#/components/schemas/EcdsaSecp256k1Signature'
          EddsaEd25519: '#/components/schemas/EddsaEd25519Signature'
        propertyName: key_type
      properties:
        key_type:
          $ref: '#/components/schemas/PublicKeyType'
      required:
      - key_type
    EcdsaSecp256k1Signature:
      allOf:
      - $ref: '#/components/schemas/Signature'
      - properties:
          signature_hex:
            description: "A hex-encoded recoverable ECDSA Secp256k1 signature (65\
              \ bytes). The first byte is the recovery id, the remaining 64 bytes\
              \ are the compact signature, ie `CONCAT(R, s)` where `R` and `s` are\
              \ each 32-bytes in padded big-endian format."
            maxLength: 130
            minLength: 130
            type: string
        required:
        - signature_hex
    EddsaEd25519Signature:
      allOf:
      - $ref: '#/components/schemas/Signature'
      - properties:
          signature_hex:
            description: "A hex-encoded EdDSA Ed25519 signature (64 bytes). This is\
              \ `CONCAT(R, s)` where `R` and `s` are each 32-bytes in padded big-endian\
              \ format."
            maxLength: 128
            minLength: 128
            type: string
        required:
        - signature_hex
    SignatureWithPublicKey:
      discriminator:
        mapping:
          EcdsaSecp256k1: '#/components/schemas/EcdsaSecp256k1SignatureWithPublicKey'
          EddsaEd25519: '#/components/schemas/EddsaEd25519SignatureWithPublicKey'
        propertyName: key_type
      properties:
        key_type:
          $ref: '#/components/schemas/PublicKeyType'
      required:
      - key_type
    EcdsaSecp256k1SignatureWithPublicKey:
      allOf:
      - $ref: '#/components/schemas/SignatureWithPublicKey'
      - description: "Because ECDSA has recoverable signatures, this only includes\
          \ a signature"
        properties:
          recoverable_signature:
            $ref: '#/components/schemas/EcdsaSecp256k1Signature'
        required:
        - recoverable_signature
    EddsaEd25519SignatureWithPublicKey:
      allOf:
      - $ref: '#/components/schemas/SignatureWithPublicKey'
      - description: The EdDSA public key and signature
        properties:
          public_key:
            $ref: '#/components/schemas/EddsaEd25519PublicKey'
          signature:
            $ref: '#/components/schemas/EddsaEd25519Signature'
        required:
        - public_key
        - signature
    AccessRuleType:
      enum:
      - Protected
      - AllowAll
      - DenyAll
      type: string
    AccessRule:
      description: |
        A representation of an access rule in the Radix Engine.

        Note that some of the field and discriminator names use an older naming schema,
        for backwards compatibility.

        See the [advanced access rules](https://docs.radixdlt.com/docs/advanced-accessrules) docs for more information.
      discriminator:
        mapping:
          Protected: '#/components/schemas/ProtectedAccessRule'
          AllowAll: '#/components/schemas/AllowAllAccessRule'
          DenyAll: '#/components/schemas/DenyAllAccessRule'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/AccessRuleType'
      required:
      - type
    ProtectedAccessRule:
      allOf:
      - $ref: '#/components/schemas/AccessRule'
      - properties:
          access_rule:
            $ref: '#/components/schemas/CompositeRequirement'
        required:
        - access_rule
    AllowAllAccessRule:
      allOf:
      - $ref: '#/components/schemas/AccessRule'
      - type: object
    DenyAllAccessRule:
      allOf:
      - $ref: '#/components/schemas/AccessRule'
      - type: object
    CompositeRequirementType:
      description: |
        `ProofRule` is now called `BasicRequirement`.
      enum:
      - ProofRule
      - AnyOf
      - AllOf
      type: string
    CompositeRequirement:
      description: |
        This type was historically called `AccessRuleNode`.
      discriminator:
        mapping:
          ProofRule: '#/components/schemas/ProofRuleCompositeRequirement'
          AnyOf: '#/components/schemas/AnyOfCompositeRequirement'
          AllOf: '#/components/schemas/AllOfCompositeRequirement'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/CompositeRequirementType'
      required:
      - type
    ProofRuleCompositeRequirement:
      allOf:
      - $ref: '#/components/schemas/CompositeRequirement'
      - properties:
          proof_rule:
            $ref: '#/components/schemas/BasicRequirement'
        required:
        - proof_rule
    AnyOfCompositeRequirement:
      allOf:
      - $ref: '#/components/schemas/CompositeRequirement'
      - properties:
          access_rules:
            items:
              $ref: '#/components/schemas/CompositeRequirement'
            type: array
        required:
        - access_rules
    AllOfCompositeRequirement:
      allOf:
      - $ref: '#/components/schemas/CompositeRequirement'
      - properties:
          access_rules:
            items:
              $ref: '#/components/schemas/CompositeRequirement'
            type: array
        required:
        - access_rules
    BasicRequirementType:
      enum:
      - Require
      - AmountOf
      - AllOf
      - AnyOf
      - CountOf
      type: string
    BasicRequirement:
      discriminator:
        mapping:
          Require: '#/components/schemas/RequireBasicRequirement'
          AmountOf: '#/components/schemas/AmountOfBasicRequirement'
          AllOf: '#/components/schemas/AllOfBasicRequirement'
          AnyOf: '#/components/schemas/AnyOfBasicRequirement'
          CountOf: '#/components/schemas/CountOfBasicRequirement'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/BasicRequirementType'
      required:
      - type
    RequireBasicRequirement:
      allOf:
      - $ref: '#/components/schemas/BasicRequirement'
      - properties:
          requirement:
            $ref: '#/components/schemas/Requirement'
        required:
        - requirement
    AmountOfBasicRequirement:
      allOf:
      - $ref: '#/components/schemas/BasicRequirement'
      - properties:
          amount:
            type: string
          resource:
            $ref: '#/components/schemas/ResourceAddress'
        required:
        - amount
        - resource
    AllOfBasicRequirement:
      allOf:
      - $ref: '#/components/schemas/BasicRequirement'
      - properties:
          list:
            items:
              $ref: '#/components/schemas/Requirement'
            type: array
        required:
        - list
    AnyOfBasicRequirement:
      allOf:
      - $ref: '#/components/schemas/BasicRequirement'
      - properties:
          list:
            items:
              $ref: '#/components/schemas/Requirement'
            type: array
        required:
        - list
    CountOfBasicRequirement:
      allOf:
      - $ref: '#/components/schemas/BasicRequirement'
      - properties:
          count:
            type: integer
          list:
            items:
              $ref: '#/components/schemas/Requirement'
            type: array
        required:
        - count
        - list
    Requirement:
      description: This is called `ResourceOrNonFungible` in the engine.
      discriminator:
        mapping:
          Resource: '#/components/schemas/ResourceRequirement'
          NonFungible: '#/components/schemas/NonFungibleRequirement'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/RequirementType'
      required:
      - type
    RequirementType:
      enum:
      - Resource
      - NonFungible
      type: string
    ResourceRequirement:
      allOf:
      - $ref: '#/components/schemas/Requirement'
      - properties:
          resource:
            $ref: '#/components/schemas/ResourceAddress'
        required:
        - resource
    NonFungibleRequirement:
      allOf:
      - $ref: '#/components/schemas/Requirement'
      - properties:
          non_fungible:
            $ref: '#/components/schemas/NonFungibleGlobalId'
        required:
        - non_fungible
    OwnerRole:
      properties:
        rule:
          $ref: '#/components/schemas/AccessRule'
        updater:
          $ref: '#/components/schemas/OwnerRoleUpdater'
      required:
      - rule
      - updater
    OwnerRoleUpdater:
      enum:
      - None
      - Owner
      - Object
      type: string
    ResourceType:
      enum:
      - Fungible
      - NonFungible
      type: string
    NonFungibleIdType:
      enum:
      - String
      - Integer
      - Bytes
      - RUID
      type: string
    NonFungibleLocalId:
      properties:
        simple_rep:
          description: |
            The simple string representation of the non-fungible id.
            * For string ids, this is `<the-string-id>`
            * For integer ids, this is `#the-integer-id#`
            * For bytes ids, this is `[the-lower-case-hex-representation]`
            * For RUID ids, this is `{...-...-...-...}` where `...` are each 16 hex characters.
            A given non-fungible resource has a fixed `NonFungibleIdType`, so this representation uniquely identifies this non-fungible
            under the given resource address.
          type: string
        id_type:
          $ref: '#/components/schemas/NonFungibleIdType'
        sbor_hex:
          description: The hex-encoded SBOR-encoded bytes of its non-fungible id
          type: string
      required:
      - id_type
      - sbor_hex
      - simple_rep
    NonFungibleLocalIdSimpleRepresentation:
      description: |
        The simple string representation of the non-fungible id.
        * For string ids, this is `<the-string-id>`
        * For integer ids, this is `#the-integer-id#`
        * For bytes ids, this is `[the-lower-case-hex-representation]`
        * For RUID ids, this is `{...-...-...-...}` where `...` are each 16 hex characters.
        A given non-fungible resource has a fixed `NonFungibleIdType`, so this representation uniquely identifies this non-fungible
        under the given resource address.
      type: string
    NonFungibleGlobalId:
      properties:
        resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
        local_id:
          $ref: '#/components/schemas/NonFungibleLocalId'
      required:
      - local_id
      - resource_address
    ResourceAmount:
      discriminator:
        mapping:
          Fungible: '#/components/schemas/FungibleResourceAmount'
          NonFungible: '#/components/schemas/NonFungibleResourceAmount'
        propertyName: resource_type
      example:
        resource_type: Fungible
        resource_address: resource_address
      properties:
        resource_type:
          $ref: '#/components/schemas/ResourceType'
        resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
      required:
      - resource_address
      - resource_type
    FungibleResourceAmount:
      allOf:
      - $ref: '#/components/schemas/ResourceAmount'
      - properties:
          amount:
            description: |
              The string-encoded decimal representing the amount of this resource (some decimal for fungible resources, a whole integer for non-fungible resources).
              A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
            type: string
        required:
        - amount
    NonFungibleResourceAmount:
      allOf:
      - $ref: '#/components/schemas/ResourceAmount'
      - properties:
          amount:
            description: |
              The string-encoded decimal representing the amount of this resource (some decimal for fungible resources, a whole integer for non-fungible resources).
              A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
            type: string
          non_fungible_ids:
            items:
              $ref: '#/components/schemas/NonFungibleLocalId'
            type: array
        required:
        - amount
        - non_fungible_ids
    PresentedBadgeType:
      enum:
      - Resource
      - NonFungible
      type: string
    PresentedBadge:
      discriminator:
        mapping:
          Resource: '#/components/schemas/ResourcePresentedBadge'
          NonFungible: '#/components/schemas/NonFungiblePresentedBadge'
        propertyName: type
      example:
        type: Resource
        resource_address: resource_address
      properties:
        type:
          $ref: '#/components/schemas/PresentedBadgeType'
        resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
      required:
      - resource_address
      - type
    ResourcePresentedBadge:
      allOf:
      - $ref: '#/components/schemas/PresentedBadge'
      - type: object
    NonFungiblePresentedBadge:
      allOf:
      - $ref: '#/components/schemas/PresentedBadge'
      - properties:
          local_id:
            $ref: '#/components/schemas/NonFungibleLocalIdSimpleRepresentation'
        required:
        - local_id
    DataStruct:
      properties:
        struct_data:
          $ref: '#/components/schemas/SborData'
        owned_entities:
          items:
            $ref: '#/components/schemas/EntityReference'
          type: array
        referenced_entities:
          items:
            $ref: '#/components/schemas/EntityReference'
          type: array
      required:
      - owned_entities
      - referenced_entities
      - struct_data
    SborData:
      description: |
        Various representations of an SBOR payload.
        Some endpoints may allow opting in/out of each representation.
      example:
        programmatic_json: ""
        hex: hex
      properties:
        hex:
          description: "The hex-encoded, raw SBOR-encoded data"
          type: string
        programmatic_json: {}
    BlueprintRoyaltyConfig:
      properties:
        is_enabled:
          type: boolean
        method_rules:
          description: The royalty rules by method. The array is only present if royalties
            are enabled.
          items:
            $ref: '#/components/schemas/BlueprintMethodRoyalty'
          type: array
      required:
      - is_enabled
    BlueprintMethodRoyalty:
      properties:
        method_name:
          type: string
        royalty_amount:
          $ref: '#/components/schemas/RoyaltyAmount'
      required:
      - method_name
    RoyaltyAmount:
      properties:
        amount:
          description: |
            A string-encoded fixed-precision decimal to 18 decimal places.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        unit:
          enum:
          - XRD
          - USD
          type: string
      required:
      - amount
      - unit
    ActiveValidator:
      example:
        stake: stake
        address: address
        key:
          key_hex: key_hex
          key_type: EcdsaSecp256k1
      properties:
        address:
          description: The Bech32m-encoded human readable version of the component
            address
          type: string
        key:
          $ref: '#/components/schemas/EcdsaSecp256k1PublicKey'
        stake:
          description: |
            A string-encoded decimal representing the validator's voting power for this epoch.
            This is a snapshot of the amount of XRD staked to the validator at the start of the epoch.
          type: string
      required:
      - address
      - key
      - stake
    ScryptoSchema:
      properties:
        sbor_data:
          $ref: '#/components/schemas/SborData'
      required:
      - sbor_data
    BlueprintDefinition:
      properties:
        interface:
          $ref: '#/components/schemas/BlueprintInterface'
        function_exports:
          additionalProperties:
            $ref: '#/components/schemas/PackageExport'
          description: A map from the function name to its export
        hook_exports:
          description: |
            A map from certain object lifecycle hooks to a callback "package export".
            There is at most one callback registered for each `ObjectHook`.
          items:
            $ref: '#/components/schemas/HookExport'
          type: array
      required:
      - function_exports
      - hook_exports
      - interface
    HookExport:
      properties:
        object_hook:
          $ref: '#/components/schemas/ObjectHook'
        export:
          $ref: '#/components/schemas/PackageExport'
      required:
      - export
      - object_hook
    ObjectHook:
      enum:
      - OnVirtualize
      - OnMove
      - OnDrop
      type: string
    BlueprintDependencies:
      properties:
        dependencies:
          items:
            $ref: '#/components/schemas/GlobalAddress'
          type: array
      required:
      - dependencies
    BlueprintInterface:
      properties:
        outer_blueprint:
          type: string
        generic_type_parameters:
          description: |
            Generic (SBOR) type parameters which need to be filled by a concrete instance
            of this blueprint.
          items:
            $ref: '#/components/schemas/GenericTypeParameter'
          type: array
        is_transient:
          description: "If true, an instantiation of this blueprint cannot be persisted.\
            \ EG buckets and proofs are transient."
          type: boolean
        features:
          items:
            type: string
          type: array
        state:
          $ref: '#/components/schemas/IndexedStateSchema'
        functions:
          additionalProperties:
            $ref: '#/components/schemas/FunctionSchema'
          description: A map from the function name to the FunctionSchema
        events:
          additionalProperties:
            $ref: '#/components/schemas/BlueprintPayloadDef'
          description: A map from the event name to the event payload type reference.
        types:
          additionalProperties:
            $ref: '#/components/schemas/ScopedTypeId'
          description: |
            A map from the registered type name to the concrete type,
            resolved against a schema from the package's schema partition.
      required:
      - events
      - features
      - functions
      - generic_type_parameters
      - is_transient
      - state
      - types
    IndexedStateSchema:
      properties:
        fields:
          $ref: '#/components/schemas/BlueprintSchemaFieldPartition'
        collections:
          items:
            $ref: '#/components/schemas/BlueprintSchemaCollectionPartition'
          type: array
        num_partitions:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
      required:
      - collections
      - num_partitions
    GenericTypeParameter:
      properties:
        constraints:
          $ref: '#/components/schemas/GenericTypeParameterConstraints'
      required:
      - constraints
    GenericTypeParameterConstraints:
      description: |
        The constraints on the concrete type provided to fill the generic type parameter.
        Note: currently, we only support the wildcard (i.e. `Any`) generic type.
      enum:
      - Any
      type: string
    SubstateSystemStructureType:
      enum:
      - SystemField
      - SystemSchema
      - KeyValueStoreEntry
      - ObjectField
      - ObjectKeyValuePartitionEntry
      - ObjectIndexPartitionEntry
      - ObjectSortedIndexPartitionEntry
      type: string
    SubstateSystemStructure:
      discriminator:
        mapping:
          SystemField: '#/components/schemas/SystemFieldStructure'
          SystemSchema: '#/components/schemas/SystemSchemaStructure'
          KeyValueStoreEntry: '#/components/schemas/KeyValueStoreEntryStructure'
          ObjectField: '#/components/schemas/ObjectFieldStructure'
          ObjectKeyValuePartitionEntry: '#/components/schemas/ObjectKeyValuePartitionEntryStructure'
          ObjectIndexPartitionEntry: '#/components/schemas/ObjectIndexPartitionEntryStructure'
          ObjectSortedIndexPartitionEntry: '#/components/schemas/ObjectSortedIndexPartitionEntryStructure'
        propertyName: type
      example:
        type: SystemField
      properties:
        type:
          $ref: '#/components/schemas/SubstateSystemStructureType'
      required:
      - type
    SystemFieldStructure:
      allOf:
      - $ref: '#/components/schemas/SubstateSystemStructure'
      - properties:
          field_kind:
            $ref: '#/components/schemas/SystemFieldKind'
        required:
        - field_kind
    SystemSchemaStructure:
      allOf:
      - $ref: '#/components/schemas/SubstateSystemStructure'
      - type: object
    KeyValueStoreEntryStructure:
      allOf:
      - $ref: '#/components/schemas/SubstateSystemStructure'
      - properties:
          key_full_type_id:
            $ref: '#/components/schemas/FullyScopedTypeId'
          value_full_type_id:
            $ref: '#/components/schemas/FullyScopedTypeId'
        required:
        - key_full_type_id
        - value_full_type_id
    ObjectFieldStructure:
      allOf:
      - $ref: '#/components/schemas/SubstateSystemStructure'
      - properties:
          value_schema:
            $ref: '#/components/schemas/ObjectSubstateTypeReference'
        required:
        - value_schema
    ObjectKeyValuePartitionEntryStructure:
      allOf:
      - $ref: '#/components/schemas/SubstateSystemStructure'
      - $ref: '#/components/schemas/KeyValueBasedStructure'
    ObjectIndexPartitionEntryStructure:
      allOf:
      - $ref: '#/components/schemas/SubstateSystemStructure'
      - $ref: '#/components/schemas/KeyValueBasedStructure'
    ObjectSortedIndexPartitionEntryStructure:
      allOf:
      - $ref: '#/components/schemas/SubstateSystemStructure'
      - $ref: '#/components/schemas/KeyValueBasedStructure'
    KeyValueBasedStructure:
      properties:
        key_schema:
          $ref: '#/components/schemas/ObjectSubstateTypeReference'
        value_schema:
          $ref: '#/components/schemas/ObjectSubstateTypeReference'
      required:
      - key_schema
      - value_schema
    SystemFieldKind:
      enum:
      - VmBoot
      - TypeInfo
      - SystemBoot
      - KernelBoot
      - TransactionValidationConfiguration
      - ProtocolUpdateStatusSummary
      type: string
    ObjectSubstateTypeReferenceType:
      enum:
      - Package
      - ObjectInstance
      type: string
    ObjectSubstateTypeReference:
      discriminator:
        mapping:
          Package: '#/components/schemas/PackageObjectSubstateTypeReference'
          ObjectInstance: '#/components/schemas/ObjectInstanceTypeReference'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/ObjectSubstateTypeReferenceType'
      required:
      - type
    PackageObjectSubstateTypeReference:
      allOf:
      - $ref: '#/components/schemas/ObjectSubstateTypeReference'
      - $ref: '#/components/schemas/PackageTypeReference'
    ObjectInstanceTypeReference:
      allOf:
      - $ref: '#/components/schemas/ObjectSubstateTypeReference'
      - properties:
          resolved_full_type_id:
            $ref: '#/components/schemas/FullyScopedTypeId'
          generic_index:
            description: |
              The index of the generic parameter in the instance definition.
              Was called the `instance_type_index`.
            format: int32
            maximum: 255
            minimum: 0
            type: integer
        required:
        - generic_index
        - resolved_full_type_id
    PackageTypeReference:
      example:
        full_type_id:
          schema_hash: schema_hash
          entity_address: entity_address
          local_type_id:
            as_sbor:
              programmatic_json: ""
              hex: hex
            kind: WellKnown
            id: 1553093137
      properties:
        full_type_id:
          $ref: '#/components/schemas/FullyScopedTypeId'
      required:
      - full_type_id
    PackageExport:
      properties:
        code_hash:
          description: "The hex-encoded code hash, capturing the vm-type and the code\
            \ itself."
          maxLength: 64
          minLength: 64
          type: string
        export_name:
          type: string
      required:
      - code_hash
      - export_name
    CodeHash:
      description: "The hex-encoded code hash, capturing the vm-type and the code\
        \ itself."
      maxLength: 64
      minLength: 64
      type: string
    SchemaHash:
      description: "The hex-encoded schema hash, capturing the identity of an SBOR\
        \ schema."
      maxLength: 64
      minLength: 64
      type: string
    AuthConfig:
      properties:
        function_auth_type:
          $ref: '#/components/schemas/FunctionAuthType'
        function_access_rules:
          additionalProperties:
            $ref: '#/components/schemas/AccessRule'
          description: |
            A map from a function name to AccessRule.
            Only exists if `function_auth_type` is set to `FunctionAccessRules`.
        method_auth_type:
          $ref: '#/components/schemas/MethodAuthType'
        method_roles:
          $ref: '#/components/schemas/StaticRoleDefinitionAuthTemplate'
      required:
      - function_auth_type
      - method_auth_type
    FunctionAuthType:
      enum:
      - AllowAll
      - FunctionAccessRules
      - RootOnly
      type: string
    MethodAuthType:
      enum:
      - AllowAll
      - StaticRoleDefinition
      type: string
    StaticRoleDefinitionAuthTemplate:
      properties:
        role_specification:
          $ref: '#/components/schemas/RoleSpecification'
        roles:
          additionalProperties:
            $ref: '#/components/schemas/RoleDetails'
          description: A map from role name to role details
        method_accessibility_map:
          additionalProperties:
            $ref: '#/components/schemas/MethodAccessibility'
          description: A map from a method identifier to MethodAccessibility
      required:
      - method_accessibility_map
      - role_specification
    RoleSpecification:
      enum:
      - Normal
      - UseOuter
      type: string
    RoleDetails:
      properties:
        updater_roles:
          items:
            type: string
          type: array
      required:
      - updater_roles
    MethodAccessibilityType:
      enum:
      - Public
      - OuterObjectOnly
      - RoleProtected
      - OwnPackageOnly
      type: string
    MethodAccessibility:
      discriminator:
        mapping:
          Public: '#/components/schemas/PublicMethodAccessibility'
          OuterObjectOnly: '#/components/schemas/OuterObjectOnlyMethodAccessibility'
          RoleProtected: '#/components/schemas/RoleProtectedMethodAccessibility'
          OwnPackageOnly: '#/components/schemas/OwnPackageOnlyMethodAccessibility'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/MethodAccessibilityType'
      required:
      - type
    PublicMethodAccessibility:
      allOf:
      - $ref: '#/components/schemas/MethodAccessibility'
      - type: object
    OuterObjectOnlyMethodAccessibility:
      allOf:
      - $ref: '#/components/schemas/MethodAccessibility'
      - type: object
    RoleProtectedMethodAccessibility:
      allOf:
      - $ref: '#/components/schemas/MethodAccessibility'
      - properties:
          allowed_roles:
            items:
              type: string
            type: array
        required:
        - allowed_roles
    OwnPackageOnlyMethodAccessibility:
      allOf:
      - $ref: '#/components/schemas/MethodAccessibility'
      - type: object
    BlueprintSchemaFieldPartition:
      description: The fields partition of the blueprint.
      properties:
        partition_description:
          $ref: '#/components/schemas/PartitionDescription'
        fields:
          description: The field substates for this blueprint.
          items:
            $ref: '#/components/schemas/FieldSchema'
          type: array
      required:
      - fields
      - partition_description
    FieldSchema:
      properties:
        field_type_ref:
          $ref: '#/components/schemas/BlueprintPayloadDef'
        condition:
          $ref: '#/components/schemas/FieldSchemaFeatureCondition'
        transient_default_value_hex:
          description: The hex-encoded default value of this field. Only present if
            this field is transient.
          type: string
      required:
      - field_type_ref
    FieldSchemaFeatureConditionType:
      enum:
      - Always
      - IfOwnFeature
      - IfOuterObjectFeature
      type: string
    FieldSchemaFeatureCondition:
      discriminator:
        mapping:
          Always: '#/components/schemas/FieldSchemaFeatureConditionAlways'
          IfOwnFeature: '#/components/schemas/FieldSchemaFeatureConditionIfOwnFeature'
          IfOuterObjectFeature: '#/components/schemas/FieldSchemaFeatureConditionIfOuterObjectFeature'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/FieldSchemaFeatureConditionType'
      required:
      - type
    FieldSchemaFeatureConditionAlways:
      allOf:
      - $ref: '#/components/schemas/FieldSchemaFeatureCondition'
      - type: object
    FieldSchemaFeatureConditionIfOwnFeature:
      allOf:
      - $ref: '#/components/schemas/FieldSchemaFeatureCondition'
      - properties:
          feature_name:
            type: string
        required:
        - feature_name
    FieldSchemaFeatureConditionIfOuterObjectFeature:
      allOf:
      - $ref: '#/components/schemas/FieldSchemaFeatureCondition'
      - properties:
          feature_name:
            type: string
        required:
        - feature_name
    BlueprintSchemaCollectionPartition:
      description: The fields partition of the blueprint.
      properties:
        partition_description:
          $ref: '#/components/schemas/PartitionDescription'
        collection_schema:
          $ref: '#/components/schemas/BlueprintCollectionSchema'
      required:
      - collection_schema
      - partition_description
    BlueprintCollectionSchema:
      discriminator:
        mapping:
          KeyValue: '#/components/schemas/KeyValueBlueprintCollectionSchema'
          Index: '#/components/schemas/IndexBlueprintCollectionSchema'
          SortedIndex: '#/components/schemas/SortedIndexBlueprintCollectionSchema'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/BlueprintCollectionSchemaType'
      required:
      - type
    BlueprintCollectionSchemaType:
      enum:
      - KeyValue
      - Index
      - SortedIndex
      type: string
    KeyValueBlueprintCollectionSchema:
      allOf:
      - $ref: '#/components/schemas/BlueprintCollectionSchema'
      - properties:
          key_type_ref:
            $ref: '#/components/schemas/BlueprintPayloadDef'
          value_type_ref:
            $ref: '#/components/schemas/BlueprintPayloadDef'
          allow_ownership:
            description: Whether the entries of the key-value partition are allowed
              to own child nodes.
            type: boolean
        required:
        - allow_ownership
        - key_type_ref
        - value_type_ref
    IndexBlueprintCollectionSchema:
      allOf:
      - $ref: '#/components/schemas/BlueprintCollectionSchema'
      - properties:
          key_type_ref:
            $ref: '#/components/schemas/BlueprintPayloadDef'
          value_type_ref:
            $ref: '#/components/schemas/BlueprintPayloadDef'
          allow_ownership:
            description: Whether the entries of the index partition are allowed to
              own child nodes.
            type: boolean
        required:
        - allow_ownership
        - key_type_ref
        - value_type_ref
    SortedIndexBlueprintCollectionSchema:
      allOf:
      - $ref: '#/components/schemas/BlueprintCollectionSchema'
      - properties:
          key_type_ref:
            $ref: '#/components/schemas/BlueprintPayloadDef'
          value_type_ref:
            $ref: '#/components/schemas/BlueprintPayloadDef'
          allow_ownership:
            description: Whether the entries of the sorted index partition are allowed
              to own child nodes.
            type: boolean
        required:
        - allow_ownership
        - key_type_ref
        - value_type_ref
    BlueprintTypeReference:
      discriminator:
        mapping:
          BlueprintSchema: '#/components/schemas/BlueprintSchemaBlueprintTypeReference'
          InstanceSchema: '#/components/schemas/InstanceSchemaBlueprintTypeReference'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/BlueprintTypeReferenceKind'
      required:
      - type
    BlueprintTypeReferenceKind:
      enum:
      - BlueprintSchema
      - InstanceSchema
      type: string
    BlueprintSchemaBlueprintTypeReference:
      allOf:
      - $ref: '#/components/schemas/BlueprintTypeReference'
      - properties:
          local_type_id:
            $ref: '#/components/schemas/LocalTypeId'
        required:
        - local_type_id
    InstanceSchemaBlueprintTypeReference:
      allOf:
      - $ref: '#/components/schemas/BlueprintTypeReference'
      - properties:
          instance_provided_type_index:
            description: Provided by an instance's schema at the given index in its
              provided types array.
            format: int32
            maximum: 255
            minimum: 0
            type: integer
        required:
        - instance_provided_type_index
    LocalTypeId:
      example:
        as_sbor:
          programmatic_json: ""
          hex: hex
        kind: WellKnown
        id: 1553093137
      properties:
        kind:
          description: The location against which to resolve this type reference.
          enum:
          - WellKnown
          - SchemaLocal
          type: string
        id:
          description: |
            A reference to a type, interpreted according to `kind`:
            - If `WellKnown`, then it is a pointer to a well known scrypto type with that ID,
            - If `SchemaLocal`, then it is an index into the given schema.
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        as_sbor:
          $ref: '#/components/schemas/SborData'
      required:
      - as_sbor
      - id
      - kind
    VirtualLazyLoadSchema:
      properties:
        export_name:
          type: string
      required:
      - export_name
    FunctionSchema:
      properties:
        receiver_info:
          $ref: '#/components/schemas/ReceiverInfo'
        input:
          $ref: '#/components/schemas/BlueprintPayloadDef'
        output:
          $ref: '#/components/schemas/BlueprintPayloadDef'
      required:
      - input
      - output
    ReceiverInfo:
      properties:
        receiver:
          enum:
          - SelfRef
          - SelfRefMut
          type: string
        reference_type:
          $ref: '#/components/schemas/ReferenceType'
      required:
      - receiver
      - reference_type
    ReferenceType:
      properties:
        raw_bits:
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        normal:
          type: boolean
        direct_access:
          type: boolean
      required:
      - direct_access
      - normal
      - raw_bits
    EntityType:
      description: |
        To improve clarity, some `EntityType` names have been updated at Cuttlefish.

        But, due to backwards compatibility, the old names continue to be used here.

        Notably:
        * `GlobalVirtualSecp256k1Account` is now `GlobalPreallocatedSecp256k1Account` elsewhere
        * `GlobalVirtualSecp256k1Identity` is now `GlobalPreallocatedSecp256k1Identity` elsewhere
        * `GlobalVirtualEd25519Account` is now `GlobalPreallocatedEd25519Account` elsewhere
        * `GlobalVirtualEd25519Identity` is now `GlobalPreallocatedEd25519Identity` elsewhere
      enum:
      - GlobalPackage
      - GlobalConsensusManager
      - GlobalValidator
      - GlobalGenericComponent
      - GlobalAccount
      - GlobalIdentity
      - GlobalAccessController
      - GlobalVirtualSecp256k1Account
      - GlobalVirtualSecp256k1Identity
      - GlobalVirtualEd25519Account
      - GlobalVirtualEd25519Identity
      - GlobalFungibleResource
      - InternalFungibleVault
      - GlobalNonFungibleResource
      - InternalNonFungibleVault
      - InternalGenericComponent
      - InternalKeyValueStore
      - GlobalOneResourcePool
      - GlobalTwoResourcePool
      - GlobalMultiResourcePool
      - GlobalTransactionTracker
      - GlobalAccountLocker
      type: string
    EntityAddress:
      description: Bech32m-encoded human readable version of the entity's address
        (ie the entity's node id)
      type: string
    AttachedModuleId:
      enum:
      - Metadata
      - Royalty
      - RoleAssignment
      type: string
    ModuleId:
      enum:
      - Main
      - Metadata
      - Royalty
      - RoleAssignment
      type: string
    Substate:
      discriminator:
        mapping:
          BootLoaderModuleFieldKernelBoot: '#/components/schemas/BootLoaderModuleFieldKernelBootSubstate'
          BootLoaderModuleFieldSystemBoot: '#/components/schemas/BootLoaderModuleFieldSystemBootSubstate'
          BootLoaderModuleFieldVmBoot: '#/components/schemas/BootLoaderModuleFieldVmBootSubstate'
          BootLoaderModuleFieldTransactionValidationConfiguration: '#/components/schemas/BootLoaderModuleFieldTransactionValidationConfigurationSubstate'
          ProtocolUpdateStatusModuleFieldSummary: '#/components/schemas/ProtocolUpdateStatusModuleFieldSummarySubstate'
          TypeInfoModuleFieldTypeInfo: '#/components/schemas/TypeInfoModuleFieldTypeInfoSubstate'
          RoleAssignmentModuleFieldOwnerRole: '#/components/schemas/RoleAssignmentModuleFieldOwnerRoleSubstate'
          RoleAssignmentModuleRuleEntry: '#/components/schemas/RoleAssignmentModuleRuleEntrySubstate'
          RoyaltyModuleFieldState: '#/components/schemas/RoyaltyModuleFieldStateSubstate'
          RoyaltyModuleMethodRoyaltyEntry: '#/components/schemas/RoyaltyModuleMethodRoyaltyEntrySubstate'
          MetadataModuleEntry: '#/components/schemas/MetadataModuleEntrySubstate'
          PackageFieldRoyaltyAccumulator: '#/components/schemas/PackageFieldRoyaltyAccumulatorSubstate'
          PackageCodeVmTypeEntry: '#/components/schemas/PackageCodeVmTypeEntrySubstate'
          PackageCodeOriginalCodeEntry: '#/components/schemas/PackageCodeOriginalCodeEntrySubstate'
          PackageCodeInstrumentedCodeEntry: '#/components/schemas/PackageCodeInstrumentedCodeEntrySubstate'
          SchemaEntry: '#/components/schemas/SchemaEntrySubstate'
          PackageBlueprintDefinitionEntry: '#/components/schemas/PackageBlueprintDefinitionEntrySubstate'
          PackageBlueprintDependenciesEntry: '#/components/schemas/PackageBlueprintDependenciesEntrySubstate'
          PackageBlueprintRoyaltyEntry: '#/components/schemas/PackageBlueprintRoyaltyEntrySubstate'
          PackageBlueprintAuthTemplateEntry: '#/components/schemas/PackageBlueprintAuthTemplateEntrySubstate'
          FungibleResourceManagerFieldDivisibility: '#/components/schemas/FungibleResourceManagerFieldDivisibilitySubstate'
          FungibleResourceManagerFieldTotalSupply: '#/components/schemas/FungibleResourceManagerFieldTotalSupplySubstate'
          NonFungibleResourceManagerFieldIdType: '#/components/schemas/NonFungibleResourceManagerFieldIdTypeSubstate'
          NonFungibleResourceManagerFieldTotalSupply: '#/components/schemas/NonFungibleResourceManagerFieldTotalSupplySubstate'
          NonFungibleResourceManagerFieldMutableFields: '#/components/schemas/NonFungibleResourceManagerFieldMutableFieldsSubstate'
          NonFungibleResourceManagerDataEntry: '#/components/schemas/NonFungibleResourceManagerDataEntrySubstate'
          FungibleVaultFieldBalance: '#/components/schemas/FungibleVaultFieldBalanceSubstate'
          FungibleVaultFieldFrozenStatus: '#/components/schemas/FungibleVaultFieldFrozenStatusSubstate'
          NonFungibleVaultFieldBalance: '#/components/schemas/NonFungibleVaultFieldBalanceSubstate'
          NonFungibleVaultFieldFrozenStatus: '#/components/schemas/NonFungibleVaultFieldFrozenStatusSubstate'
          NonFungibleVaultContentsIndexEntry: '#/components/schemas/NonFungibleVaultContentsIndexEntrySubstate'
          ConsensusManagerFieldConfig: '#/components/schemas/ConsensusManagerFieldConfigSubstate'
          ConsensusManagerFieldState: '#/components/schemas/ConsensusManagerFieldStateSubstate'
          ConsensusManagerFieldCurrentValidatorSet: '#/components/schemas/ConsensusManagerFieldCurrentValidatorSetSubstate'
          ConsensusManagerFieldCurrentProposalStatistic: '#/components/schemas/ConsensusManagerFieldCurrentProposalStatisticSubstate'
          ConsensusManagerFieldCurrentTimeRoundedToMinutes: '#/components/schemas/ConsensusManagerFieldCurrentTimeRoundedToMinutesSubstate'
          ConsensusManagerFieldCurrentTime: '#/components/schemas/ConsensusManagerFieldCurrentTimeSubstate'
          ConsensusManagerFieldValidatorRewards: '#/components/schemas/ConsensusManagerFieldValidatorRewardsSubstate'
          ConsensusManagerRegisteredValidatorsByStakeIndexEntry: '#/components/schemas/ConsensusManagerRegisteredValidatorsByStakeIndexEntrySubstate'
          ValidatorFieldState: '#/components/schemas/ValidatorFieldStateSubstate'
          ValidatorFieldProtocolUpdateReadinessSignal: '#/components/schemas/ValidatorFieldProtocolUpdateReadinessSignalSubstate'
          AccountFieldState: '#/components/schemas/AccountFieldStateSubstate'
          AccountVaultEntry: '#/components/schemas/AccountVaultEntrySubstate'
          AccountResourcePreferenceEntry: '#/components/schemas/AccountResourcePreferenceEntrySubstate'
          AccountAuthorizedDepositorEntry: '#/components/schemas/AccountAuthorizedDepositorEntrySubstate'
          AccountLockerAccountClaimsEntry: '#/components/schemas/AccountLockerAccountClaimsEntrySubstate'
          AccessControllerFieldState: '#/components/schemas/AccessControllerFieldStateSubstate'
          GenericScryptoComponentFieldState: '#/components/schemas/GenericScryptoComponentFieldStateSubstate'
          GenericKeyValueStoreEntry: '#/components/schemas/GenericKeyValueStoreEntrySubstate'
          OneResourcePoolFieldState: '#/components/schemas/OneResourcePoolFieldStateSubstate'
          TwoResourcePoolFieldState: '#/components/schemas/TwoResourcePoolFieldStateSubstate'
          MultiResourcePoolFieldState: '#/components/schemas/MultiResourcePoolFieldStateSubstate'
          TransactionTrackerFieldState: '#/components/schemas/TransactionTrackerFieldStateSubstate'
          TransactionTrackerCollectionEntry: '#/components/schemas/TransactionTrackerCollectionEntrySubstate'
        propertyName: substate_type
      example:
        substate_type: null
        is_locked: true
      properties:
        substate_type:
          $ref: '#/components/schemas/SubstateType'
        is_locked:
          type: boolean
      required:
      - is_locked
      - substate_type
    SubstateType:
      enum:
      - BootLoaderModuleFieldSystemBoot
      - BootLoaderModuleFieldKernelBoot
      - BootLoaderModuleFieldVmBoot
      - BootLoaderModuleFieldTransactionValidationConfiguration
      - ProtocolUpdateStatusModuleFieldSummary
      - TypeInfoModuleFieldTypeInfo
      - RoleAssignmentModuleFieldOwnerRole
      - RoleAssignmentModuleRuleEntry
      - RoleAssignmentModuleMutabilityEntry
      - RoyaltyModuleFieldState
      - RoyaltyModuleMethodRoyaltyEntry
      - MetadataModuleEntry
      - PackageFieldRoyaltyAccumulator
      - PackageCodeVmTypeEntry
      - PackageCodeOriginalCodeEntry
      - PackageCodeInstrumentedCodeEntry
      - SchemaEntry
      - PackageBlueprintDefinitionEntry
      - PackageBlueprintDependenciesEntry
      - PackageBlueprintRoyaltyEntry
      - PackageBlueprintAuthTemplateEntry
      - PackageFieldFunctionAccessRules
      - FungibleResourceManagerFieldDivisibility
      - FungibleResourceManagerFieldTotalSupply
      - NonFungibleResourceManagerFieldIdType
      - NonFungibleResourceManagerFieldTotalSupply
      - NonFungibleResourceManagerFieldMutableFields
      - NonFungibleResourceManagerDataEntry
      - FungibleVaultFieldBalance
      - FungibleVaultFieldFrozenStatus
      - NonFungibleVaultFieldBalance
      - NonFungibleVaultFieldFrozenStatus
      - NonFungibleVaultContentsIndexEntry
      - ConsensusManagerFieldConfig
      - ConsensusManagerFieldState
      - ConsensusManagerFieldCurrentValidatorSet
      - ConsensusManagerFieldCurrentProposalStatistic
      - ConsensusManagerFieldCurrentTimeRoundedToMinutes
      - ConsensusManagerFieldCurrentTime
      - ConsensusManagerFieldValidatorRewards
      - ConsensusManagerRegisteredValidatorsByStakeIndexEntry
      - ValidatorFieldState
      - ValidatorFieldProtocolUpdateReadinessSignal
      - AccountFieldState
      - AccountVaultEntry
      - AccountResourcePreferenceEntry
      - AccountAuthorizedDepositorEntry
      - AccessControllerFieldState
      - GenericScryptoComponentFieldState
      - GenericKeyValueStoreEntry
      - OneResourcePoolFieldState
      - TwoResourcePoolFieldState
      - MultiResourcePoolFieldState
      - TransactionTrackerFieldState
      - TransactionTrackerCollectionEntry
      - AccountLockerAccountClaimsEntry
      type: string
    ObjectRoleKey:
      properties:
        object_module_id:
          $ref: '#/components/schemas/ModuleId'
        role_key:
          type: string
      required:
      - object_module_id
      - role_key
    MainMethodKey:
      properties:
        method_name:
          type: string
      required:
      - method_name
    MetadataKey:
      properties:
        name:
          type: string
      required:
      - name
    PackageCodeKey:
      properties:
        code_hash:
          description: "The hex-encoded code hash, capturing the vm-type and the code\
            \ itself."
          maxLength: 64
          minLength: 64
          type: string
      required:
      - code_hash
    SchemaKey:
      properties:
        schema_hash:
          description: "The hex-encoded schema hash, capturing the identity of an\
            \ SBOR schema."
          maxLength: 64
          minLength: 64
          type: string
      required:
      - schema_hash
    BlueprintVersionKey:
      properties:
        blueprint_name:
          description: "The first part of the substate key `(blueprint_name, blueprint_version)`."
          type: string
        blueprint_version:
          description: "The second part of the substate key `(blueprint_name, blueprint_version)`."
          type: string
      required:
      - blueprint_name
      - blueprint_version
    LocalNonFungibleKey:
      properties:
        non_fungible_local_id:
          $ref: '#/components/schemas/NonFungibleLocalId'
      required:
      - non_fungible_local_id
    ActiveValidatorKey:
      properties:
        stake_weighting:
          description: |
            The divided stake, giving a weighting for the validator,
            used as part of the sort key.
          format: int32
          maximum: 65535
          minimum: 0
          type: integer
        validator_address:
          description: The Bech32m-encoded human readable version of the component
            address
          type: string
      required:
      - stake_weighting
      - validator_address
    ResourceKey:
      properties:
        resource_address:
          description: The Bech32m-encoded human readable version of the component
            address
          type: string
      required:
      - resource_address
    AuthorizedDepositorKey:
      properties:
        badge:
          $ref: '#/components/schemas/AuthorizedDepositorBadge'
      required:
      - badge
    AuthorizedDepositorBadgeType:
      enum:
      - Resource
      - NonFungible
      type: string
    AuthorizedDepositorBadge:
      discriminator:
        mapping:
          Resource: '#/components/schemas/ResourceAuthorizedDepositorBadge'
          NonFungible: '#/components/schemas/NonFungibleAuthorizedDepositorBadge'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/AuthorizedDepositorBadgeType'
      required:
      - type
    ResourceAuthorizedDepositorBadge:
      allOf:
      - $ref: '#/components/schemas/AuthorizedDepositorBadge'
      - properties:
          resource_address:
            $ref: '#/components/schemas/ResourceAddress'
        required:
        - resource_address
    NonFungibleAuthorizedDepositorBadge:
      allOf:
      - $ref: '#/components/schemas/AuthorizedDepositorBadge'
      - properties:
          non_fungible_global_id:
            $ref: '#/components/schemas/NonFungibleGlobalId'
        required:
        - non_fungible_global_id
    TransactionIdKey:
      properties:
        intent_hash:
          description: |
            The hex-encoded transaction intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core "intent" of the transaction. Each transaction intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
          maxLength: 64
          minLength: 64
          type: string
        intent_hash_bech32m:
          description: The Bech32m-encoded human readable `TransactionIntentHash`.
          type: string
      required:
      - intent_hash
      - intent_hash_bech32m
    AccountAddressKey:
      properties:
        account_address:
          description: The Bech32m-encoded human readable version of the account's
            global address.
          type: string
      required:
      - account_address
    GenericKey:
      properties:
        key_data:
          $ref: '#/components/schemas/SborData'
    BootLoaderModuleFieldSystemBootSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/BootLoaderModuleFieldSystemBootValue'
        required:
        - value
    BootLoaderModuleFieldSystemBootValue:
      properties:
        system_version:
          $ref: '#/components/schemas/SystemVersion'
        system_parameters:
          $ref: '#/components/schemas/SystemParameters'
      required:
      - system_parameters
    SystemVersion:
      description: The SystemVersion was added at Cuttlefish. Before that it can be
        assumed to be V1.
      enum:
      - V1
      - V2
      - V3
      type: string
    SystemParameters:
      properties:
        network_definition:
          $ref: '#/components/schemas/NetworkDefinition'
        costing_module_config:
          $ref: '#/components/schemas/CostingModuleConfig'
        costing_parameters:
          $ref: '#/components/schemas/SystemCostingParameters'
        limit_parameters:
          $ref: '#/components/schemas/LimitParameters'
      required:
      - costing_module_config
      - costing_parameters
      - limit_parameters
      - network_definition
    CostingModuleConfig:
      properties:
        xrd_max_per_function_royalty:
          description: |
            The string-encoded decimal representing the maximum amount of XRD configurable for a single function's royalty.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        apply_execution_cost_for_all_system_calls:
          description: Whether to apply execution costing for all system calls.
          type: boolean
        apply_boot_ref_check_costing:
          description: Whether to apply costing for reference checks on boot.
          type: boolean
      required:
      - apply_boot_ref_check_costing
      - apply_execution_cost_for_all_system_calls
      - xrd_max_per_function_royalty
    NetworkDefinition:
      properties:
        id:
          description: The logical id of the network
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        logical_name:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        hrp_suffix:
          description: The network suffix of Bech32m HRPs used for addressing.
          type: string
      required:
      - hrp_suffix
      - id
      - logical_name
    SystemCostingParameters:
      properties:
        execution_cost_unit_price:
          description: |
            The string-encoded decimal representing the XRD price of a single cost unit of transaction execution.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        execution_cost_unit_limit:
          description: "An integer between `0` and `2^32 - 1`, representing the maximum\
            \ amount of cost units available for the transaction execution."
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        execution_cost_unit_loan:
          description: "An integer between `0` and `2^32 - 1`, representing the maximum\
            \ number of cost units which can be used before fee is locked from a vault."
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        finalization_cost_unit_price:
          description: |
            The string-encoded decimal representing the XRD price of a single cost unit of transaction finalization.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        finalization_cost_unit_limit:
          description: "An integer between `0` and `2^32 - 1`, representing the maximum\
            \ amount of cost units available for the transaction finalization."
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        xrd_usd_price:
          description: |
            The string-encoded decimal representing what amount of XRD is consumed by a Royalty of 1 USD.
            This is fixed for a given protocol version, so is not an accurate representation of the XRD price.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        xrd_storage_price:
          description: |
            The string-encoded decimal representing the price of 1 byte of state storage, expressed in XRD.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        xrd_archive_storage_price:
          description: |
            The string-encoded decimal representing the price of 1 byte of archive storage, expressed in XRD.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - execution_cost_unit_limit
      - execution_cost_unit_loan
      - execution_cost_unit_price
      - finalization_cost_unit_limit
      - finalization_cost_unit_price
      - xrd_archive_storage_price
      - xrd_storage_price
      - xrd_usd_price
    LimitParameters:
      properties:
        max_call_depth:
          description: |
            A decimal string-encoded 64-bit unsigned integer, representing the configured maximum
            call depth allowed during transaction execution.
          type: string
        max_heap_substate_total_bytes:
          description: |
            A decimal string-encoded 64-bit unsigned integer, representing the configured maximum
            byte size of all substates kept on the heap during a single transaction's execution.
          type: string
        max_track_substate_total_bytes:
          description: |
            A decimal string-encoded 64-bit unsigned integer, representing the configured maximum
            byte size of all substates kept in the track during a single transaction's execution.
          type: string
        max_substate_key_size:
          description: |
            A decimal string-encoded 64-bit unsigned integer, representing the configured maximum
            byte size of a Substate's key in the low-level Substate database.
          type: string
        max_substate_value_size:
          description: |
            A decimal string-encoded 64-bit unsigned integer, representing the configured maximum
            byte size of a Substate's value in the low-level Substate database.
          type: string
        max_invoke_input_size:
          description: |
            A decimal string-encoded 64-bit unsigned integer, representing the configured maximum
            byte size of a single call's input parameters.
          type: string
        max_event_size:
          description: |
            A decimal string-encoded 64-bit unsigned integer, representing the configured maximum
            byte size of a single emitted event.
          type: string
        max_log_size:
          description: |
            A decimal string-encoded 64-bit unsigned integer, representing the configured maximum
            byte size of a single logged line.
          type: string
        max_panic_message_size:
          description: |
            A decimal string-encoded 64-bit unsigned integer, representing the configured maximum
            byte size of a single panic message.
          type: string
        max_number_of_logs:
          description: |
            A decimal string-encoded 64-bit unsigned integer, representing the configured maximum
            count of log lines emitted during a single transaction's execution.
          type: string
        max_number_of_events:
          description: |
            A decimal string-encoded 64-bit unsigned integer, representing the configured maximum
            count of events emitted during a single transaction's execution.
          type: string
      required:
      - max_call_depth
      - max_event_size
      - max_heap_substate_total_bytes
      - max_invoke_input_size
      - max_log_size
      - max_number_of_events
      - max_number_of_logs
      - max_panic_message_size
      - max_substate_key_size
      - max_substate_value_size
      - max_track_substate_total_bytes
    BootLoaderModuleFieldVmBootSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/BootLoaderModuleFieldVmBootValue'
        required:
        - value
    BootLoaderModuleFieldVmBootValue:
      properties:
        scrypto_v1_minor_version:
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
      required:
      - scrypto_v1_minor_version
    BootLoaderModuleFieldKernelBootSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/BootLoaderModuleFieldKernelBootValue'
        required:
        - value
    BootLoaderModuleFieldKernelBootValue:
      properties:
        always_visible_nodes_version:
          $ref: '#/components/schemas/AlwaysVisibleGlobalNodesVersion'
    AlwaysVisibleGlobalNodesVersion:
      description: |
        This was added in Cuttlefish. Before that, this value was missing, but can be assumed to be V1.
      enum:
      - V1
      - V2
      type: string
    BootLoaderModuleFieldTransactionValidationConfigurationSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          config:
            $ref: '#/components/schemas/TransactionValidationConfig'
        required:
        - config
    TransactionValidationConfig:
      properties:
        max_signer_signatures_per_intent:
          type: string
        max_references_per_intent:
          type: string
        min_tip_percentage:
          description: Only applies to V1 transactions
          format: int32
          maximum: 65535
          minimum: 0
          type: integer
        max_tip_percentage:
          description: Only applies to V1 transactions
          format: int32
          maximum: 65535
          minimum: 0
          type: integer
        max_epoch_range:
          type: string
        max_instructions:
          type: string
        message_validation:
          $ref: '#/components/schemas/MessageValidationConfig'
        v1_transactions_allow_notary_to_duplicate_signer:
          type: boolean
        preparation_settings:
          $ref: '#/components/schemas/PreparationSettings'
        manifest_validation:
          $ref: '#/components/schemas/ManifestValidationRuleset'
        v2_transactions_allowed:
          type: boolean
        min_tip_basis_points:
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        max_tip_basis_points:
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        max_subintent_depth:
          type: string
        max_total_signature_validations:
          type: string
        max_total_references:
          type: string
      required:
      - manifest_validation
      - max_epoch_range
      - max_instructions
      - max_references_per_intent
      - max_signer_signatures_per_intent
      - max_subintent_depth
      - max_tip_basis_points
      - max_tip_percentage
      - max_total_references
      - max_total_signature_validations
      - message_validation
      - min_tip_basis_points
      - min_tip_percentage
      - preparation_settings
      - v1_transactions_allow_notary_to_duplicate_signer
      - v2_transactions_allowed
    MessageValidationConfig:
      properties:
        max_plaintext_message_length:
          type: string
        max_encrypted_message_length:
          type: string
        max_mime_type_length:
          type: string
        max_decryptors:
          type: string
      required:
      - max_decryptors
      - max_encrypted_message_length
      - max_mime_type_length
      - max_plaintext_message_length
    PreparationSettings:
      properties:
        v2_transactions_permitted:
          type: boolean
        max_user_payload_length:
          type: string
        max_ledger_payload_length:
          type: string
        max_child_subintents_per_intent:
          type: string
        max_subintents_per_transaction:
          type: string
        max_blobs:
          type: string
      required:
      - max_blobs
      - max_child_subintents_per_intent
      - max_ledger_payload_length
      - max_subintents_per_transaction
      - max_user_payload_length
      - v2_transactions_permitted
    ManifestValidationRuleset:
      enum:
      - Basic
      - Cuttlefish
      type: string
    ProtocolUpdateStatusModuleFieldSummarySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          protocol_version:
            type: string
          update_status:
            $ref: '#/components/schemas/ProtocolUpdateStatus'
        required:
        - protocol_version
        - update_status
    ProtocolUpdateStatusType:
      enum:
      - InProgress
      - Complete
      type: string
    ProtocolUpdateStatus:
      discriminator:
        mapping:
          InProgress: '#/components/schemas/InProgressProtocolUpdateStatus'
          Complete: '#/components/schemas/CompleteProtocolUpdateStatus'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/ProtocolUpdateStatusType'
      required:
      - type
    InProgressProtocolUpdateStatus:
      allOf:
      - $ref: '#/components/schemas/ProtocolUpdateStatus'
      - properties:
          latest_commit:
            $ref: '#/components/schemas/ProtocolUpdateStatusLatestCommit'
        required:
        - latest_commit
    ProtocolUpdateStatusLatestCommit:
      properties:
        batch_group_index:
          format: int64
          type: integer
        batch_group_name:
          type: string
        batch_index:
          format: int64
          type: integer
        batch_name:
          type: string
      required:
      - batch_group_index
      - batch_group_name
      - batch_index
      - batch_name
    CompleteProtocolUpdateStatus:
      allOf:
      - $ref: '#/components/schemas/ProtocolUpdateStatus'
      - type: object
    TypeInfoModuleFieldTypeInfoSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/TypeInfoModuleFieldTypeInfoValue'
        required:
        - value
    TypeInfoModuleFieldTypeInfoValue:
      properties:
        details:
          $ref: '#/components/schemas/TypeInfoDetails'
      required:
      - details
    TypeInfoType:
      enum:
      - Object
      - KeyValueStore
      type: string
    TypeInfoDetails:
      discriminator:
        mapping:
          Object: '#/components/schemas/ObjectTypeInfoDetails'
          KeyValueStore: '#/components/schemas/KeyValueStoreTypeInfoDetails'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/TypeInfoType'
      required:
      - type
    ObjectTypeInfoDetails:
      allOf:
      - $ref: '#/components/schemas/TypeInfoDetails'
      - properties:
          module_versions:
            items:
              $ref: '#/components/schemas/ModuleVersion'
            type: array
          blueprint_info:
            $ref: '#/components/schemas/BlueprintInfo'
          global:
            type: boolean
        required:
        - blueprint_info
        - global
        - module_versions
    ModuleVersion:
      properties:
        module:
          $ref: '#/components/schemas/AttachedModuleId'
        version:
          description: "A string of `Major.Minor.Patch` where Major, Minor and Patch\
            \ are all u32s."
          type: string
      required:
      - module
      - version
    BlueprintInfo:
      properties:
        package_address:
          description: The Bech32m-encoded human readable version of the package address
          type: string
        blueprint_name:
          type: string
        blueprint_version:
          type: string
        outer_object:
          description: The Bech32m-encoded human readable version of any global address
          type: string
        features:
          items:
            type: string
          type: array
        generic_substitutions:
          items:
            $ref: '#/components/schemas/GenericSubstitution'
          type: array
      required:
      - blueprint_name
      - blueprint_version
      - features
      - generic_substitutions
      - package_address
    KeyValueStoreTypeInfoDetails:
      allOf:
      - $ref: '#/components/schemas/TypeInfoDetails'
      - properties:
          key_value_store_info:
            $ref: '#/components/schemas/KeyValueStoreInfo'
        required:
        - key_value_store_info
    KeyValueStoreInfo:
      properties:
        key_generic_substitution:
          $ref: '#/components/schemas/GenericSubstitution'
        value_generic_substitution:
          $ref: '#/components/schemas/GenericSubstitution'
        allow_ownership:
          description: Whether the entries of the key-value partition are allowed
            to own child nodes.
          type: boolean
      required:
      - allow_ownership
      - key_generic_substitution
      - value_generic_substitution
    GenericSubstitutionType:
      enum:
      - Local
      - Remote
      type: string
    GenericSubstitution:
      discriminator:
        mapping:
          Local: '#/components/schemas/LocalGenericSubstitution'
          Remote: '#/components/schemas/RemoteGenericSubstitution'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/GenericSubstitutionType'
      required:
      - type
    LocalGenericSubstitution:
      allOf:
      - $ref: '#/components/schemas/GenericSubstitution'
      - description: |
          The generic substitution is provided by the instance itself.
          The `scoped_type_id` can be expanded to a `FullyScopedTypeId` by including the current entity's address.
        properties:
          scoped_type_id:
            $ref: '#/components/schemas/ScopedTypeId'
        required:
        - scoped_type_id
    RemoteGenericSubstitution:
      allOf:
      - $ref: '#/components/schemas/GenericSubstitution'
      - description: |
          The generic substitution is provided remotely by a blueprint type.
          The `resolved_full_type_id` is added by the node, and is always present in the model returned from the transaction stream API.
          Other APIs may not resolve the type from the blueprint definition.
        properties:
          blueprint_type_identifier:
            $ref: '#/components/schemas/BlueprintTypeIdentifier'
          resolved_full_type_id:
            $ref: '#/components/schemas/FullyScopedTypeId'
        required:
        - blueprint_type_identifier
    RoleAssignmentModuleFieldOwnerRoleSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/RoleAssignmentModuleFieldOwnerRoleValue'
        required:
        - value
    RoleAssignmentModuleFieldOwnerRoleValue:
      properties:
        owner_role:
          $ref: '#/components/schemas/OwnerRole'
      required:
      - owner_role
    RoleAssignmentModuleRuleEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          key:
            $ref: '#/components/schemas/ObjectRoleKey'
          value:
            $ref: '#/components/schemas/RoleAssignmentModuleRuleEntryValue'
        required:
        - key
    RoleAssignmentModuleRuleEntryValue:
      properties:
        access_rule:
          $ref: '#/components/schemas/AccessRule'
      required:
      - access_rule
    RoyaltyModuleFieldStateSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/RoyaltyModuleFieldStateValue'
        required:
        - value
    RoyaltyModuleFieldStateValue:
      properties:
        is_enabled:
          type: boolean
        vault_entity:
          $ref: '#/components/schemas/EntityReference'
      required:
      - is_enabled
      - vault_entity
    RoyaltyModuleMethodRoyaltyEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          key:
            $ref: '#/components/schemas/MainMethodKey'
          value:
            $ref: '#/components/schemas/RoyaltyModuleMethodRoyaltyEntryValue'
        required:
        - key
    RoyaltyModuleMethodRoyaltyEntryValue:
      description: "If missing, it represents a free method."
      properties:
        royalty_amount:
          $ref: '#/components/schemas/RoyaltyAmount'
    MetadataModuleEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          key:
            $ref: '#/components/schemas/MetadataKey'
          value:
            $ref: '#/components/schemas/MetadataModuleEntryValue'
        required:
        - key
    MetadataModuleEntryValue:
      description: "If missing, it represents a non-existing or deleted value."
      properties:
        data_struct:
          $ref: '#/components/schemas/DataStruct'
      required:
      - data_struct
    TransactionTrackerFieldStateSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/TransactionTrackerFieldStateValue'
        required:
        - value
    TransactionTrackerFieldStateValue:
      properties:
        start_epoch:
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        start_partition:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        partition_range_start_inclusive:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        partition_range_end_inclusive:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        epochs_per_partition:
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
      required:
      - epochs_per_partition
      - partition_range_end_inclusive
      - partition_range_start_inclusive
      - start_epoch
      - start_partition
    TransactionTrackerCollectionEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          key:
            $ref: '#/components/schemas/TransactionIdKey'
          value:
            $ref: '#/components/schemas/TransactionTrackerCollectionEntryValue'
        required:
        - key
        - value
    TransactionTrackerCollectionEntryValue:
      properties:
        status:
          $ref: '#/components/schemas/TransactionTrackerTransactionStatus'
      required:
      - status
    TransactionTrackerTransactionStatus:
      enum:
      - CommittedSuccess
      - CommittedFailure
      - Cancelled
      type: string
    PackageFieldRoyaltyAccumulatorSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/PackageFieldRoyaltyAccumulatorValue'
        required:
        - value
    PackageFieldRoyaltyAccumulatorValue:
      properties:
        vault_entity:
          $ref: '#/components/schemas/EntityReference'
      required:
      - vault_entity
    PackageCodeVmTypeEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          key:
            $ref: '#/components/schemas/PackageCodeKey'
          value:
            $ref: '#/components/schemas/PackageCodeVmTypeEntryValue'
        required:
        - key
        - value
    PackageCodeVmTypeEntryValue:
      properties:
        vm_type:
          $ref: '#/components/schemas/VmType'
      required:
      - vm_type
    VmType:
      enum:
      - Native
      - ScryptoV1
      type: string
    PackageCodeOriginalCodeEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          key:
            $ref: '#/components/schemas/PackageCodeKey'
          value:
            $ref: '#/components/schemas/PackageCodeOriginalCodeEntryValue'
        required:
        - key
        - value
    PackageCodeOriginalCodeEntryValue:
      properties:
        code_hex:
          description: |
            Either the hex-encoded WASM package code (if Scrypto), or the native package identifier.
          type: string
      required:
      - code_hex
    PackageCodeInstrumentedCodeEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          key:
            $ref: '#/components/schemas/PackageCodeKey'
          value:
            $ref: '#/components/schemas/PackageCodeInstrumentedCodeEntryValue'
        required:
        - key
        - value
    PackageCodeInstrumentedCodeEntryValue:
      properties:
        code_hex:
          description: |
            The hex-encoded instrumented WASM package code.
          type: string
      required:
      - code_hex
    SchemaEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          key:
            $ref: '#/components/schemas/SchemaKey'
          value:
            $ref: '#/components/schemas/SchemaEntryValue'
        required:
        - key
        - value
    SchemaEntryValue:
      properties:
        schema:
          $ref: '#/components/schemas/ScryptoSchema'
      required:
      - schema
    PackageBlueprintDefinitionEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          key:
            $ref: '#/components/schemas/BlueprintVersionKey'
          value:
            $ref: '#/components/schemas/PackageBlueprintDefinitionEntryValue'
        required:
        - key
        - value
    PackageBlueprintDefinitionEntryValue:
      properties:
        definition:
          $ref: '#/components/schemas/BlueprintDefinition'
      required:
      - definition
    PackageBlueprintDependenciesEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          key:
            $ref: '#/components/schemas/BlueprintVersionKey'
          value:
            $ref: '#/components/schemas/PackageBlueprintDependenciesEntryValue'
        required:
        - key
        - value
    PackageBlueprintDependenciesEntryValue:
      properties:
        dependencies:
          $ref: '#/components/schemas/BlueprintDependencies'
      required:
      - dependencies
    PackageBlueprintRoyaltyEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          key:
            $ref: '#/components/schemas/BlueprintVersionKey'
          value:
            $ref: '#/components/schemas/PackageBlueprintRoyaltyEntryValue'
        required:
        - key
        - value
    PackageBlueprintRoyaltyEntryValue:
      properties:
        royalty_config:
          $ref: '#/components/schemas/BlueprintRoyaltyConfig'
      required:
      - royalty_config
    PackageBlueprintAuthTemplateEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          key:
            $ref: '#/components/schemas/BlueprintVersionKey'
          value:
            $ref: '#/components/schemas/PackageBlueprintAuthTemplateEntryValue'
        required:
        - key
        - value
    PackageBlueprintAuthTemplateEntryValue:
      properties:
        auth_config:
          $ref: '#/components/schemas/AuthConfig'
      required:
      - auth_config
    FungibleResourceManagerFieldDivisibilitySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/FungibleResourceManagerFieldDivisibilityValue'
        required:
        - value
    FungibleResourceManagerFieldDivisibilityValue:
      properties:
        divisibility:
          maximum: 18
          minimum: 0
          type: integer
      required:
      - divisibility
    FungibleResourceManagerFieldTotalSupplySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/FungibleResourceManagerFieldTotalSupplyValue'
        required:
        - value
    FungibleResourceManagerFieldTotalSupplyValue:
      properties:
        total_supply:
          description: |
            The string-encoded decimal representing the total supply of this resource.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - total_supply
    NonFungibleResourceManagerFieldIdTypeSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/NonFungibleResourceManagerFieldIdTypeValue'
        required:
        - value
    NonFungibleResourceManagerFieldIdTypeValue:
      properties:
        non_fungible_id_type:
          $ref: '#/components/schemas/NonFungibleIdType'
      required:
      - non_fungible_id_type
    NonFungibleResourceManagerFieldTotalSupplySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/NonFungibleResourceManagerFieldTotalSupplyValue'
        required:
        - value
    NonFungibleResourceManagerFieldTotalSupplyValue:
      properties:
        total_supply:
          description: |
            The string-encoded decimal representing the total supply of this resource.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - total_supply
    NonFungibleResourceManagerFieldMutableFieldsSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/NonFungibleResourceManagerFieldMutableFieldsValue'
        required:
        - value
    NonFungibleResourceManagerFieldMutableFieldsValue:
      properties:
        mutable_fields:
          description: The fields of the NF Metadata which are mutable.
          items:
            $ref: '#/components/schemas/MutableField'
          type: array
      required:
      - mutable_fields
    MutableField:
      properties:
        name:
          type: string
        index:
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
      required:
      - index
      - name
    NonFungibleResourceManagerDataEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - description: |
          If the NF has been burned, the value is deleted and empty.
        properties:
          key:
            $ref: '#/components/schemas/LocalNonFungibleKey'
          value:
            $ref: '#/components/schemas/NonFungibleResourceManagerDataEntryValue'
        required:
        - key
    NonFungibleResourceManagerDataEntryValue:
      description: |
        If missing, it represents a burned Non-Fungible.
        A Non-Fungible with that local id cannot be minted again - the id is not re-usable.
      properties:
        data_struct:
          $ref: '#/components/schemas/DataStruct'
      required:
      - data_struct
    FungibleVaultFieldBalanceSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/FungibleVaultFieldBalanceValue'
        required:
        - value
    FungibleVaultFieldBalanceValue:
      properties:
        amount:
          description: |
            The string-encoded decimal representing the token amount in the vault.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - amount
    FungibleVaultFieldFrozenStatusSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/FungibleVaultFieldFrozenStatusValue'
        required:
        - value
    FungibleVaultFieldFrozenStatusValue:
      properties:
        frozen_status:
          $ref: '#/components/schemas/FrozenStatus'
      required:
      - frozen_status
    FrozenStatus:
      properties:
        is_withdraw_frozen:
          type: boolean
        is_deposit_frozen:
          type: boolean
        is_burn_frozen:
          type: boolean
      required:
      - is_burn_frozen
      - is_deposit_frozen
      - is_withdraw_frozen
    NonFungibleVaultFieldBalanceSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/NonFungibleVaultFieldBalanceValue'
        required:
        - value
    NonFungibleVaultFieldBalanceValue:
      properties:
        amount:
          description: |
            The string-encoded decimal representing the token amount in the vault.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - amount
    NonFungibleVaultFieldFrozenStatusSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/NonFungibleVaultFieldFrozenStatusValue'
        required:
        - value
    NonFungibleVaultFieldFrozenStatusValue:
      properties:
        frozen_status:
          $ref: '#/components/schemas/FrozenStatus'
      required:
      - frozen_status
    NonFungibleVaultContentsIndexEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          key:
            $ref: '#/components/schemas/LocalNonFungibleKey'
          value:
            $ref: '#/components/schemas/NonFungibleVaultContentsIndexEntryValue'
        required:
        - key
        - value
    NonFungibleVaultContentsIndexEntryValue:
      description: |
        This object is empty, and always present on this substate.
        Note that when a non-fungible is withdrawn from the vault, the full substate is deleted, which is marked
        by a DeletedSubstate action (rather than deletion of the value property in an UpdateSubstate action).
        This is because this is an Index entry, not a KeyValueStore entry.
      properties:
        is_present:
          description: |
            This is a dummy property which is always set to true and means nothing.
            It exists just to ensure this object has a well-defined type in OpenAPI schemas.
          type: boolean
      required:
      - is_present
    ConsensusManagerFieldConfigSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/ConsensusManagerFieldConfigValue'
        required:
        - value
    ConsensusManagerFieldConfigValue:
      properties:
        max_validators:
          description: |
            An integer between `0` and `10^10`, specifying the maximum number of validators
            in the active validator set.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        epoch_change_condition:
          $ref: '#/components/schemas/EpochChangeCondition'
        num_unstake_epochs:
          description: |
            An integer between `0` and `10^10`, specifying the minimum number of epochs
            before an unstaker can withdraw their XRD.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        total_emission_xrd_per_epoch:
          description: |
            A string-encoded fixed-precision decimal to 18 decimal places.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        min_validator_reliability:
          description: |
            A string-encoded fixed-precision decimal to 18 decimal places.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        num_owner_stake_units_unlock_epochs:
          description: |
            An integer between `0` and `10^10`, specifying the minimum number of epochs
            before an owner can take their stake units after attempting to withdraw them.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        num_fee_increase_delay_epochs:
          description: |
            An integer between `0` and `10^10`, specifying the minimum number of epochs
            before a fee increase takes effect.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        validator_creation_usd_equivalent_cost:
          description: |
            The defining decimal cost of a validator in USD.
            This is turned into an XRD cost through the current protocol-based USD/XRD multiplier.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        validator_creation_xrd_cost:
          description: |
            The decimal amount of XRD required to be passed in a bucket to create a validator.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - epoch_change_condition
      - max_validators
      - min_validator_reliability
      - num_fee_increase_delay_epochs
      - num_owner_stake_units_unlock_epochs
      - num_unstake_epochs
      - total_emission_xrd_per_epoch
      - validator_creation_usd_equivalent_cost
      - validator_creation_xrd_cost
    ConsensusManagerFieldValidatorRewardsSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/ConsensusManagerFieldValidatorRewardsValue'
        required:
        - value
    ConsensusManagerFieldValidatorRewardsValue:
      properties:
        proposer_rewards:
          items:
            $ref: '#/components/schemas/ProposerReward'
          type: array
        rewards_vault:
          $ref: '#/components/schemas/EntityReference'
      required:
      - proposer_rewards
      - rewards_vault
    EpochChangeCondition:
      properties:
        min_round_count:
          description: "An integer between `0` and `10^10`, specifying the minimum\
            \ number of rounds per epoch"
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        max_round_count:
          description: "An integer between `0` and `10^10`, specifying the maximum\
            \ number of rounds per epoch"
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        target_duration_millis:
          description: |
            An integer between `0` and `10^10`, specifying the target number of milliseconds per epoch,
            assuming the round number is within the min and max range.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
      required:
      - max_round_count
      - min_round_count
      - target_duration_millis
    ConsensusManagerFieldStateSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/ConsensusManagerFieldStateValue'
        required:
        - value
    ConsensusManagerFieldStateValue:
      properties:
        epoch:
          description: "An integer between `0` and `10^10`, marking the current epoch"
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        round:
          description: "An integer between `0` and `10^10`, marking the current round\
            \ in an epoch"
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        is_started:
          type: boolean
        effective_epoch_start:
          $ref: '#/components/schemas/InstantMs'
        actual_epoch_start:
          $ref: '#/components/schemas/InstantMs'
        current_leader:
          $ref: '#/components/schemas/ActiveValidatorIndex'
      required:
      - actual_epoch_start
      - effective_epoch_start
      - epoch
      - is_started
      - round
    ConsensusManagerFieldCurrentProposalStatisticSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/ConsensusManagerFieldCurrentProposalStatisticValue'
        required:
        - value
    ConsensusManagerFieldCurrentProposalStatisticValue:
      properties:
        completed:
          description: "The number of successfully completed proposals this epoch\
            \ for each validator, indexed by the validator order in the active set."
          items:
            format: int64
            maximum: 10000000000
            minimum: 0
            type: integer
          type: array
        missed:
          description: "The number of missed proposals this epoch for each validator,\
            \ indexed by the validator order in the active set."
          items:
            format: int64
            maximum: 10000000000
            minimum: 0
            type: integer
          type: array
      required:
      - completed
      - missed
    ConsensusManagerFieldCurrentValidatorSetSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/ConsensusManagerFieldCurrentValidatorSetValue'
        required:
        - value
    ConsensusManagerFieldCurrentValidatorSetValue:
      properties:
        validator_set:
          items:
            $ref: '#/components/schemas/ActiveValidator'
          type: array
      required:
      - validator_set
    ConsensusManagerRegisteredValidatorsByStakeIndexEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          key:
            $ref: '#/components/schemas/ActiveValidatorKey'
          value:
            $ref: '#/components/schemas/ConsensusManagerRegisteredValidatorsByStakeIndexEntryValue'
        required:
        - key
        - value
    ConsensusManagerRegisteredValidatorsByStakeIndexEntryValue:
      properties:
        active_validator:
          $ref: '#/components/schemas/ActiveValidator'
      required:
      - active_validator
    ConsensusManagerFieldCurrentTimeRoundedToMinutesSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/ConsensusManagerFieldCurrentTimeRoundedToMinutesValue'
        required:
        - value
    ConsensusManagerFieldCurrentTimeRoundedToMinutesValue:
      properties:
        proposer_timestamp_rounded_down_to_minute:
          $ref: '#/components/schemas/InstantMs'
      required:
      - proposer_timestamp_rounded_down_to_minute
    ConsensusManagerFieldCurrentTimeSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/ConsensusManagerFieldCurrentTimeValue'
        required:
        - value
    ConsensusManagerFieldCurrentTimeValue:
      properties:
        proposer_timestamp:
          $ref: '#/components/schemas/InstantMs'
      required:
      - proposer_timestamp
    ValidatorFieldStateSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/ValidatorFieldStateValue'
        required:
        - value
    ValidatorFieldStateValue:
      properties:
        sorted_key:
          $ref: '#/components/schemas/SubstateKey'
        public_key:
          $ref: '#/components/schemas/EcdsaSecp256k1PublicKey'
        is_registered:
          type: boolean
        accepts_delegated_stake:
          type: boolean
        validator_fee_factor:
          description: |
            A string-encoded fixed-precision decimal to 18 decimal places.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        validator_fee_change_request:
          $ref: '#/components/schemas/ValidatorFeeChangeRequest'
        stake_unit_resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
        stake_xrd_vault:
          $ref: '#/components/schemas/EntityReference'
        claim_token_resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
        pending_xrd_withdraw_vault:
          $ref: '#/components/schemas/EntityReference'
        locked_owner_stake_unit_vault:
          $ref: '#/components/schemas/EntityReference'
        pending_owner_stake_unit_unlock_vault:
          $ref: '#/components/schemas/EntityReference'
        pending_owner_stake_unit_withdrawals:
          items:
            $ref: '#/components/schemas/PendingOwnerStakeWithdrawal'
          type: array
        already_unlocked_owner_stake_unit_amount:
          description: |
            A string-encoded fixed-precision decimal to 18 decimal places.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - accepts_delegated_stake
      - already_unlocked_owner_stake_unit_amount
      - claim_token_resource_address
      - is_registered
      - locked_owner_stake_unit_vault
      - pending_owner_stake_unit_unlock_vault
      - pending_owner_stake_unit_withdrawals
      - pending_xrd_withdraw_vault
      - public_key
      - stake_unit_resource_address
      - stake_xrd_vault
      - validator_fee_factor
    ValidatorFeeChangeRequest:
      properties:
        epoch_effective:
          description: |
            An integer between `0` and `10^10`, marking the epoch at which the fee change becomes effective.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        new_fee_factor:
          description: |
            A string-encoded fixed-precision decimal to 18 decimal places.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - epoch_effective
      - new_fee_factor
    PendingOwnerStakeWithdrawal:
      properties:
        epoch_unlocked:
          description: |
            An integer between `0` and `10^10`, marking the epoch when the stake units are unlocked for withdrawal.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        stake_unit_amount:
          description: |
            A string-encoded fixed-precision decimal to 18 decimal places.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - epoch_unlocked
      - stake_unit_amount
    ValidatorFieldProtocolUpdateReadinessSignalSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/ValidatorFieldProtocolUpdateReadinessSignalValue'
        required:
        - value
    ValidatorFieldProtocolUpdateReadinessSignalValue:
      properties:
        protocol_version_name:
          description: |
            If present, indicates the validator is currently signalling readiness for the given protocol version.
            Is validated to be exactly 32 chars long (if it exists).
          type: string
    AccountFieldStateSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/AccountFieldStateValue'
        required:
        - value
    AccountFieldStateValue:
      properties:
        default_deposit_rule:
          $ref: '#/components/schemas/DefaultDepositRule'
      required:
      - default_deposit_rule
    DefaultDepositRule:
      description: |
        This setting has the following interpretations:
        - Allow: Allows the deposit of all resources - the deny list is honored in this state.
        - Reject: Disallows the deposit of all resources - the allow list is honored in this state.
        - AllowExisting: Only deposits of existing resources *or* XRD are accepted - both allow and deny lists are honored in this mode.
      enum:
      - Accept
      - Reject
      - AllowExisting
      type: string
    AccountVaultEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          key:
            $ref: '#/components/schemas/ResourceKey'
          value:
            $ref: '#/components/schemas/AccountVaultEntryValue'
        required:
        - key
        - value
    AccountVaultEntryValue:
      properties:
        vault:
          $ref: '#/components/schemas/EntityReference'
      required:
      - vault
    AccountResourcePreferenceEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          key:
            $ref: '#/components/schemas/ResourceKey'
          value:
            $ref: '#/components/schemas/AccountResourcePreferenceEntryValue'
        required:
        - key
    AccountResourcePreferenceEntryValue:
      properties:
        resource_preference:
          $ref: '#/components/schemas/ResourcePreference'
      required:
      - resource_preference
    ResourcePreference:
      enum:
      - Allowed
      - Disallowed
      type: string
    AccountAuthorizedDepositorEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          key:
            $ref: '#/components/schemas/AuthorizedDepositorKey'
          value:
            $ref: '#/components/schemas/AccountAuthorizedDepositorEntryValue'
        required:
        - key
    AccountAuthorizedDepositorEntryValue:
      description: Empty value. The existence of the key implies the depositor is
        authorized.
      properties:
        is_authorized:
          description: |
            This is always true. This field is just added to ensure we return some data as the value,
            so a present entry is not confused by clients for a deleted/missing entry (which would imply
            not authorized).
          type: boolean
      required:
      - is_authorized
    AccountLockerAccountClaimsEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          key:
            $ref: '#/components/schemas/AccountAddressKey'
          value:
            $ref: '#/components/schemas/AccountLockerAccountClaimsEntryValue'
        required:
        - key
        - value
    AccountLockerAccountClaimsEntryValue:
      properties:
        resource_vaults:
          $ref: '#/components/schemas/EntityReference'
      required:
      - resource_vaults
    AccessControllerFieldStateSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/AccessControllerFieldStateValue'
        required:
        - value
    AccessControllerFieldStateValue:
      properties:
        controlled_vault:
          $ref: '#/components/schemas/EntityReference'
        xrd_fee_vault:
          $ref: '#/components/schemas/EntityReference'
        timed_recovery_delay_minutes:
          description: |
            An integer between `0` and `2^32 - 1`, specifying the amount of time (in minutes) that
            it takes for timed recovery to be done. When not present, then timed recovery can not be
            performed through this access controller.
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        recovery_badge_resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
        is_primary_role_locked:
          description: Whether the primary role is currently locked.
          type: boolean
        primary_role_recovery_attempt:
          $ref: '#/components/schemas/PrimaryRoleRecoveryAttempt'
        has_primary_role_badge_withdraw_attempt:
          description: Whether the primary role badge withdraw is currently being
            attempted.
          type: boolean
        recovery_role_recovery_attempt:
          $ref: '#/components/schemas/RecoveryRoleRecoveryAttempt'
        has_recovery_role_badge_withdraw_attempt:
          description: Whether the recovery role badge withdraw is currently being
            attempted.
          type: boolean
      required:
      - controlled_vault
      - has_primary_role_badge_withdraw_attempt
      - has_recovery_role_badge_withdraw_attempt
      - is_primary_role_locked
      - recovery_badge_resource_address
    PrimaryRoleRecoveryAttempt:
      properties:
        recovery_proposal:
          $ref: '#/components/schemas/RecoveryProposal'
      required:
      - recovery_proposal
    RecoveryRoleRecoveryAttempt:
      properties:
        recovery_proposal:
          $ref: '#/components/schemas/RecoveryProposal'
        allow_timed_recovery_after:
          $ref: '#/components/schemas/ScryptoInstant'
      required:
      - recovery_proposal
    RecoveryProposal:
      properties:
        primary_role:
          $ref: '#/components/schemas/AccessRule'
        recovery_role:
          $ref: '#/components/schemas/AccessRule'
        confirmation_role:
          $ref: '#/components/schemas/AccessRule'
        timed_recovery_delay_minutes:
          description: |
            An integer between `0` and `2^32 - 1`, specifying the optional proposal delay of timed recoveries.
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
      required:
      - confirmation_role
      - primary_role
      - recovery_role
    GenericScryptoComponentFieldStateSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/GenericScryptoComponentFieldStateValue'
        required:
        - value
    GenericScryptoComponentFieldStateValue:
      properties:
        data_struct:
          $ref: '#/components/schemas/DataStruct'
      required:
      - data_struct
    GenericKeyValueStoreEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          key:
            $ref: '#/components/schemas/GenericKey'
          value:
            $ref: '#/components/schemas/GenericKeyValueStoreEntryValue'
        required:
        - key
    GenericKeyValueStoreEntryValue:
      description: "If not present, the entry has been deleted."
      properties:
        data:
          $ref: '#/components/schemas/DataStruct'
      required:
      - data
    OneResourcePoolFieldStateSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/OneResourcePoolFieldStateValue'
        required:
        - value
    OneResourcePoolFieldStateValue:
      properties:
        vault:
          $ref: '#/components/schemas/EntityReference'
        pool_unit_resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
      required:
      - pool_unit_resource_address
      - vault
    TwoResourcePoolFieldStateSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/TwoResourcePoolFieldStateValue'
        required:
        - value
    TwoResourcePoolFieldStateValue:
      properties:
        vaults:
          items:
            $ref: '#/components/schemas/PoolVault'
          maxItems: 2
          minItems: 2
          type: array
        pool_unit_resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
      required:
      - pool_unit_resource_address
      - vaults
    MultiResourcePoolFieldStateSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - properties:
          value:
            $ref: '#/components/schemas/MultiResourcePoolFieldStateValue'
        required:
        - value
    MultiResourcePoolFieldStateValue:
      properties:
        vaults:
          items:
            $ref: '#/components/schemas/PoolVault'
          minItems: 3
          type: array
        pool_unit_resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
      required:
      - pool_unit_resource_address
      - vaults
    PoolVault:
      properties:
        vault:
          $ref: '#/components/schemas/EntityReference'
        resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
      required:
      - resource_address
      - vault
    LtsTransactionConstructionRequest:
      example:
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
      required:
      - network
    LtsTransactionConstructionResponse:
      example:
        ledger_clock:
          date_time: date_time
          unix_timestamp_ms: 60274561830704
        current_epoch: 800828190
      properties:
        current_epoch:
          description: "An integer between `0` and `10^10`, marking the current epoch"
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        ledger_clock:
          $ref: '#/components/schemas/InstantMs'
      required:
      - current_epoch
      - ledger_clock
    LtsTransactionStatusRequest:
      example:
        intent_hash: intent_hash
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        intent_hash:
          description: |
            The transaction intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core "intent" of the transaction. Each transaction intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
            Either hex or Bech32m-encoded strings are supported.
          type: string
      required:
      - intent_hash
      - network
    LtsTransactionStatusResponse:
      example:
        committed_state_version: 8008281904611
        status_description: status_description
        invalid_from_epoch: 6027456183
        known_payloads:
        - error_message: error_message
          state_version: 14658129805030
          payload_hash: payload_hash
          payload_hash_bech32m: payload_hash_bech32m
          status: CommittedSuccess
        - error_message: error_message
          state_version: 14658129805030
          payload_hash: payload_hash
          payload_hash_bech32m: payload_hash_bech32m
          status: CommittedSuccess
        intent_status: CommittedSuccess
      properties:
        intent_status:
          $ref: '#/components/schemas/LtsTransactionIntentStatus'
        status_description:
          description: |
            An explanation as to why the intent status is resolved as it is.
          type: string
        committed_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        invalid_from_epoch:
          description: |
            An integer between `0` and `10^10`, marking the epoch from which the transaction will no longer be valid, and be permanently rejected.
            Only present if the intent status is InMempool or Unknown and we know about a payload.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        known_payloads:
          items:
            $ref: '#/components/schemas/LtsTransactionPayloadDetails'
          type: array
      required:
      - intent_status
      - known_payloads
      - status_description
    LtsTransactionPayloadDetails:
      example:
        error_message: error_message
        state_version: 14658129805030
        payload_hash: payload_hash
        payload_hash_bech32m: payload_hash_bech32m
        status: CommittedSuccess
      properties:
        payload_hash:
          description: |
            The hex-encoded notarized transaction hash for a user transaction.
            This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
          maxLength: 64
          minLength: 64
          type: string
        payload_hash_bech32m:
          description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
          type: string
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        status:
          $ref: '#/components/schemas/LtsTransactionPayloadStatus'
        error_message:
          description: "An explanation for the error, if failed or rejected"
          type: string
      required:
      - payload_hash
      - payload_hash_bech32m
      - status
    LtsTransactionIntentStatus:
      description: |
        The status of the transaction intent, as determined by the node.
        FateUncertain or FateUncertainButLikelyRejection mean that it's still possible that a payload containing the transaction
      enum:
      - CommittedSuccess
      - CommittedFailure
      - PermanentRejection
      - InMempool
      - NotSeen
      - FateUncertain
      - FateUncertainButLikelyRejection
      type: string
    LtsTransactionPayloadStatus:
      description: |
        The status of the transaction payload, as per this node.
        A NotInMempool status means that it wasn't rejected at last execution attempt, but it's not currently in the mempool either.
      enum:
      - CommittedSuccess
      - CommittedFailure
      - PermanentlyRejected
      - TransientlyRejected
      - InMempool
      - NotInMempool
      type: string
    LtsTransactionSubmitRequest:
      example:
        notarized_transaction_hex: notarized_transaction_hex
        force_recalculate: true
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        notarized_transaction_hex:
          description: "A hex-encoded, compiled notarized transaction."
          type: string
        force_recalculate:
          description: "If true, the transaction validity is freshly recalculated\
            \ without using any caches (defaults false)"
          type: boolean
      required:
      - network
      - notarized_transaction_hex
    LtsTransactionSubmitResponse:
      example:
        duplicate: true
      properties:
        duplicate:
          description: Is true if the transaction is a duplicate of an existing transaction
            in the mempool.
          type: boolean
      required:
      - duplicate
    LtsTransactionSubmitErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          details:
            $ref: '#/components/schemas/LtsTransactionSubmitErrorDetails'
      example:
        trace_id: trace_id
        code: 0
        error_type: Basic
        details:
          type: PriorityThresholdNotMet
        message: message
    LtsTransactionSubmitErrorDetailsType:
      enum:
      - PriorityThresholdNotMet
      - IntentAlreadyCommitted
      - Rejected
      type: string
    LtsTransactionSubmitErrorDetails:
      discriminator:
        mapping:
          PriorityThresholdNotMet: '#/components/schemas/LtsTransactionSubmitPriorityThresholdNotMetErrorDetails'
          IntentAlreadyCommitted: '#/components/schemas/LtsTransactionSubmitIntentAlreadyCommitted'
          Rejected: '#/components/schemas/LtsTransactionSubmitRejectedErrorDetails'
        propertyName: type
      example:
        type: PriorityThresholdNotMet
      properties:
        type:
          $ref: '#/components/schemas/LtsTransactionSubmitErrorDetailsType'
      required:
      - type
    LtsTransactionSubmitPriorityThresholdNotMetErrorDetails:
      allOf:
      - $ref: '#/components/schemas/LtsTransactionSubmitErrorDetails'
      - properties:
          tip_percentage:
            deprecated: true
            description: |
              NOTE: This is kept for backwards compatibility, but we recommend using `tip_proportion` instead.

              Tip percentage of the submitted (and rejected) transaction. For V2 transactions specifying basis point tips,
              the amount is rounded down.
            format: int32
            maximum: 65535
            minimum: 0
            type: integer
          min_tip_percentage_required:
            deprecated: true
            description: |
              NOTE: This is kept for backwards compatibility, but we recommend using `min_tip_proportion_required` instead.

              A lower bound for tip percentage at current mempool state. Anything lower than this will very likely result in a mempool rejection.
              A missing value means there is no tip that can guarantee submission.
            format: int32
            maximum: 65535
            minimum: 0
            type: integer
          tip_proportion:
            description: |
              The string-encoded decimal tip proportion of the submitted (and rejected) transaction.

              This field will always be present on Cuttlefish nodes, but is marked as not-required for Cuttlefish launch,
              to avoid a dependency on clients to update after the node is updated.
            type: string
          min_tip_proportion_required:
            description: |
              A lower bound for tip proportion at current mempool state. Anything lower than this will very likely result in a mempool rejection.
              A missing value means there is no tip that can guarantee submission.
            type: string
        required:
        - tip_percentage
    LtsTransactionSubmitIntentAlreadyCommitted:
      allOf:
      - $ref: '#/components/schemas/LtsTransactionSubmitErrorDetails'
      - properties:
          committed_as:
            $ref: '#/components/schemas/CommittedIntentMetadata'
        required:
        - committed_as
    LtsTransactionSubmitRejectedErrorDetails:
      allOf:
      - $ref: '#/components/schemas/LtsTransactionSubmitErrorDetails'
      - description: |
          Indicates that the transaction was executed and resulted in a rejection,
          therefore the transaction is not being added into the mempool.
        properties:
          error_message:
            description: An explanation of the error
            type: string
          is_fresh:
            description: |
              Whether (true) this rejected status has just been calculated fresh, or (false) the status is from the pending
              transaction result cache.
            type: boolean
          is_payload_rejection_permanent:
            description: |
              Whether the rejection of this payload is known to be permanent.
            type: boolean
          is_intent_rejection_permanent:
            description: |
              Whether the rejection of this intent is known to be permanent - this is a stronger statement than the payload rejection
              being permanent, as it implies any payloads containing the intent will also be permanently rejected.
            type: boolean
          retry_from_timestamp:
            $ref: '#/components/schemas/InstantMs'
          retry_from_epoch:
            description: |
              An integer between `0` and `10^10`, marking the epoch after which the node will consider recalculating the validity of the transaction.
              Only present if the rejection is temporary due to a header specifying a "from epoch" in the future.
            format: int64
            maximum: 10000000000
            minimum: 0
            type: integer
          invalid_from_epoch:
            description: |
              An integer between `0` and `10^10`, marking the epoch from which the transaction will no longer be valid, and be permanently rejected.
              Only present if the rejection isn't permanent.
            format: int64
            maximum: 10000000000
            minimum: 0
            type: integer
        required:
        - error_message
        - is_fresh
        - is_intent_rejection_permanent
        - is_payload_rejection_permanent
    LtsStateAccountAllFungibleResourceBalancesRequest:
      example:
        account_address: account_address
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        account_address:
          description: The Bech32m-encoded human readable version of the account's
            address
          type: string
      required:
      - account_address
      - network
    LtsStateAccountAllFungibleResourceBalancesResponse:
      example:
        fungible_resource_balances:
        - fungible_resource_address: fungible_resource_address
          amount: amount
        - fungible_resource_address: fungible_resource_address
          amount: amount
        state_version: 8008281904611
        account_address: account_address
        ledger_header_summary:
          epoch_round:
            round: 1465812980
            epoch: 6027456183
          proposer_timestamp:
            date_time: date_time
            unix_timestamp_ms: 60274561830704
          ledger_hashes:
            state_tree_hash: state_tree_hash
            transaction_tree_hash: transaction_tree_hash
            receipt_tree_hash: receipt_tree_hash
      properties:
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        ledger_header_summary:
          $ref: '#/components/schemas/LedgerHeaderSummary'
        account_address:
          description: The Bech32m-encoded human readable version of the account's
            address
          type: string
        fungible_resource_balances:
          description: A list containing all resource balances for the requested account.
          items:
            $ref: '#/components/schemas/LtsFungibleResourceBalance'
          type: array
      required:
      - account_address
      - fungible_resource_balances
      - ledger_header_summary
      - state_version
    LtsFungibleResourceBalance:
      example:
        fungible_resource_address: fungible_resource_address
        amount: amount
      properties:
        fungible_resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
        amount:
          description: |
            The string-encoded decimal representing the amount of the fungible resource.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - amount
      - fungible_resource_address
    LtsStateAccountFungibleResourceBalanceRequest:
      example:
        account_address: account_address
        resource_address: resource_address
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        account_address:
          description: The Bech32m-encoded human readable version of the account's
            address
          type: string
        resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
      required:
      - account_address
      - network
      - resource_address
    LtsStateAccountFungibleResourceBalanceResponse:
      example:
        state_version: 8008281904611
        account_address: account_address
        fungible_resource_balance:
          fungible_resource_address: fungible_resource_address
          amount: amount
        ledger_header_summary:
          epoch_round:
            round: 1465812980
            epoch: 6027456183
          proposer_timestamp:
            date_time: date_time
            unix_timestamp_ms: 60274561830704
          ledger_hashes:
            state_tree_hash: state_tree_hash
            transaction_tree_hash: transaction_tree_hash
            receipt_tree_hash: receipt_tree_hash
      properties:
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        ledger_header_summary:
          $ref: '#/components/schemas/LedgerHeaderSummary'
        account_address:
          description: The Bech32m-encoded human readable version of the account's
            address
          type: string
        fungible_resource_balance:
          $ref: '#/components/schemas/LtsFungibleResourceBalance'
      required:
      - account_address
      - fungible_resource_balance
      - ledger_header_summary
      - state_version
    LtsStateAccountDepositBehaviourRequest:
      example:
        badge:
          type: Resource
          resource_address: resource_address
        account_address: account_address
        resource_addresses:
        - null
        - null
        - null
        - null
        - null
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        account_address:
          description: The Bech32m-encoded human readable version of the account's
            address.
          type: string
        resource_addresses:
          description: The resource addresses to check the deposit behaviours of.
          items:
            $ref: '#/components/schemas/ResourceAddress'
          maxItems: 20
          type: array
        badge:
          $ref: '#/components/schemas/PresentedBadge'
      required:
      - account_address
      - network
    LtsStateAccountDepositBehaviourResponse:
      example:
        state_version: 8008281904611
        default_deposit_rule: Accept
        is_badge_authorized_depositor: true
        ledger_header_summary:
          epoch_round:
            round: 1465812980
            epoch: 6027456183
          proposer_timestamp:
            date_time: date_time
            unix_timestamp_ms: 60274561830704
          ledger_hashes:
            state_tree_hash: state_tree_hash
            transaction_tree_hash: transaction_tree_hash
            receipt_tree_hash: receipt_tree_hash
        resource_specific_behaviours:
          key:
            allows_try_deposit: true
            is_xrd: true
            vault_exists: true
            resource_preference: Allowed
      properties:
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        ledger_header_summary:
          $ref: '#/components/schemas/LedgerHeaderSummary'
        default_deposit_rule:
          $ref: '#/components/schemas/DefaultDepositRule'
        is_badge_authorized_depositor:
          description: |
            Whether the input `badge` belongs to the account's set of authorized depositors.
            This field will only be present if any badge was passed in the request.
          type: boolean
        resource_specific_behaviours:
          additionalProperties:
            $ref: '#/components/schemas/ResourceSpecificDepositBehaviour'
          description: |
            A map from one of the input `resource_addresses` to its specific deposit behavior configured for this account.
            This field will only be present if an array of specific resource addresses was passed in the request (even if empty).
      required:
      - default_deposit_rule
      - ledger_header_summary
      - state_version
    ResourceSpecificDepositBehaviour:
      example:
        allows_try_deposit: true
        is_xrd: true
        vault_exists: true
        resource_preference: Allowed
      properties:
        resource_preference:
          $ref: '#/components/schemas/ResourcePreference'
        vault_exists:
          description: |
            Whether the account contains a vault for the resource (even if 0 balance).
            This plays a role when `DefaultDepositRule` is `AllowExisting`.
          type: boolean
        is_xrd:
          description: |
            Whether the resource represents the native XRD fungible.
            XRD is a special case which does not require `vault_exists = true` to satisfy the `AllowExisting` rule.
          type: boolean
        allows_try_deposit:
          description: |
            The fully resolved `try_deposit_*` ability of this resource (which takes all the inputs
            into account, including the authorized depositor badge, the default deposit rule and
            the above resource-specific circumstances).
          type: boolean
      required:
      - allows_try_deposit
      - is_xrd
      - vault_exists
    LtsStreamTransactionOutcomesRequest:
      description: |
        A request to retrieve a sublist of committed transactions from the ledger.
      example:
        limit: 6
        from_state_version: 8008281904611
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        from_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        limit:
          description: The maximum number of transactions that will be returned.
          type: integer
      required:
      - from_state_version
      - limit
      - network
    LtsStreamTransactionOutcomesResponse:
      example:
        committed_transaction_outcomes:
        - user_transaction_identifiers:
            intent_hash: intent_hash
            intent_hash_bech32m: intent_hash_bech32m
            signed_intent_hash: signed_intent_hash
            payload_hash: payload_hash
            payload_hash_bech32m: payload_hash_bech32m
            signed_intent_hash_bech32m: signed_intent_hash_bech32m
          resultant_account_fungible_balances:
          - resultant_balances:
            - resultant_balance: resultant_balance
              resource_address: resource_address
            - resultant_balance: resultant_balance
              resource_address: resource_address
            account_address: account_address
          - resultant_balances:
            - resultant_balance: resultant_balance
              resource_address: resource_address
            - resultant_balance: resultant_balance
              resource_address: resource_address
            account_address: account_address
          state_version: 59621339166832
          fungible_entity_balance_changes:
          - entity_address: entity_address
            non_fee_balance_changes:
            - balance_change: balance_change
              resource_address: resource_address
            - balance_change: balance_change
              resource_address: resource_address
            fee_balance_change:
              balance_change: balance_change
              resource_address: resource_address
            fee_balance_changes:
            - balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
            - balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
          - entity_address: entity_address
            non_fee_balance_changes:
            - balance_change: balance_change
              resource_address: resource_address
            - balance_change: balance_change
              resource_address: resource_address
            fee_balance_change:
              balance_change: balance_change
              resource_address: resource_address
            fee_balance_changes:
            - balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
            - balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
          non_fungible_entity_balance_changes:
          - removed:
            - null
            - null
            added:
            - null
            - null
            entity_address: entity_address
            resource_address: resource_address
          - removed:
            - null
            - null
            added:
            - null
            - null
            entity_address: entity_address
            resource_address: resource_address
          total_fee: total_fee
          proposer_timestamp_ms: 56373766566333
          accumulator_hash: accumulator_hash
          status: Success
        - user_transaction_identifiers:
            intent_hash: intent_hash
            intent_hash_bech32m: intent_hash_bech32m
            signed_intent_hash: signed_intent_hash
            payload_hash: payload_hash
            payload_hash_bech32m: payload_hash_bech32m
            signed_intent_hash_bech32m: signed_intent_hash_bech32m
          resultant_account_fungible_balances:
          - resultant_balances:
            - resultant_balance: resultant_balance
              resource_address: resource_address
            - resultant_balance: resultant_balance
              resource_address: resource_address
            account_address: account_address
          - resultant_balances:
            - resultant_balance: resultant_balance
              resource_address: resource_address
            - resultant_balance: resultant_balance
              resource_address: resource_address
            account_address: account_address
          state_version: 59621339166832
          fungible_entity_balance_changes:
          - entity_address: entity_address
            non_fee_balance_changes:
            - balance_change: balance_change
              resource_address: resource_address
            - balance_change: balance_change
              resource_address: resource_address
            fee_balance_change:
              balance_change: balance_change
              resource_address: resource_address
            fee_balance_changes:
            - balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
            - balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
          - entity_address: entity_address
            non_fee_balance_changes:
            - balance_change: balance_change
              resource_address: resource_address
            - balance_change: balance_change
              resource_address: resource_address
            fee_balance_change:
              balance_change: balance_change
              resource_address: resource_address
            fee_balance_changes:
            - balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
            - balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
          non_fungible_entity_balance_changes:
          - removed:
            - null
            - null
            added:
            - null
            - null
            entity_address: entity_address
            resource_address: resource_address
          - removed:
            - null
            - null
            added:
            - null
            - null
            entity_address: entity_address
            resource_address: resource_address
          total_fee: total_fee
          proposer_timestamp_ms: 56373766566333
          accumulator_hash: accumulator_hash
          status: Success
        max_ledger_state_version: 14658129805030
        count: 6027
        from_state_version: 8008281904611
      properties:
        from_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        count:
          description: "An integer between `0` and `10000`, giving the total count\
            \ of transactions in the returned response"
          format: int32
          maximum: 10000
          minimum: 0
          type: integer
        max_ledger_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        committed_transaction_outcomes:
          description: A committed transaction outcomes list starting from the `from_state_version`
            (inclusive).
          items:
            $ref: '#/components/schemas/LtsCommittedTransactionOutcome'
          type: array
      required:
      - committed_transaction_outcomes
      - count
      - from_state_version
      - max_ledger_state_version
    LtsCommittedTransactionStatus:
      description: The status of the transaction
      enum:
      - Success
      - Failure
      type: string
    LtsCommittedTransactionOutcome:
      description: |
        For the given transaction, contains the status, total fee summary and individual entity resource balance changes.
        The balance changes accounts for the fee payments as well.
      example:
        user_transaction_identifiers:
          intent_hash: intent_hash
          intent_hash_bech32m: intent_hash_bech32m
          signed_intent_hash: signed_intent_hash
          payload_hash: payload_hash
          payload_hash_bech32m: payload_hash_bech32m
          signed_intent_hash_bech32m: signed_intent_hash_bech32m
        resultant_account_fungible_balances:
        - resultant_balances:
          - resultant_balance: resultant_balance
            resource_address: resource_address
          - resultant_balance: resultant_balance
            resource_address: resource_address
          account_address: account_address
        - resultant_balances:
          - resultant_balance: resultant_balance
            resource_address: resource_address
          - resultant_balance: resultant_balance
            resource_address: resource_address
          account_address: account_address
        state_version: 59621339166832
        fungible_entity_balance_changes:
        - entity_address: entity_address
          non_fee_balance_changes:
          - balance_change: balance_change
            resource_address: resource_address
          - balance_change: balance_change
            resource_address: resource_address
          fee_balance_change:
            balance_change: balance_change
            resource_address: resource_address
          fee_balance_changes:
          - balance_change: balance_change
            type: FeePayment
            resource_address: resource_address
          - balance_change: balance_change
            type: FeePayment
            resource_address: resource_address
        - entity_address: entity_address
          non_fee_balance_changes:
          - balance_change: balance_change
            resource_address: resource_address
          - balance_change: balance_change
            resource_address: resource_address
          fee_balance_change:
            balance_change: balance_change
            resource_address: resource_address
          fee_balance_changes:
          - balance_change: balance_change
            type: FeePayment
            resource_address: resource_address
          - balance_change: balance_change
            type: FeePayment
            resource_address: resource_address
        non_fungible_entity_balance_changes:
        - removed:
          - null
          - null
          added:
          - null
          - null
          entity_address: entity_address
          resource_address: resource_address
        - removed:
          - null
          - null
          added:
          - null
          - null
          entity_address: entity_address
          resource_address: resource_address
        total_fee: total_fee
        proposer_timestamp_ms: 56373766566333
        accumulator_hash: accumulator_hash
        status: Success
      properties:
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        proposer_timestamp_ms:
          description: "An integer between `0` and `10^14`, marking the proposer timestamp\
            \ in ms."
          format: int64
          maximum: 100000000000000
          minimum: 0
          type: integer
        accumulator_hash:
          description: |
            The hex-encoded transaction accumulator hash. This hash captures the order of all transactions on ledger.
            This hash is `ACC_{N+1} = combine(ACC_N, LEDGER_HASH_{N}))` (where `combine()` is an arbitrary deterministic function we use).
          maxLength: 64
          minLength: 64
          type: string
        user_transaction_identifiers:
          $ref: '#/components/schemas/TransactionIdentifiers'
        status:
          $ref: '#/components/schemas/LtsCommittedTransactionStatus'
        fungible_entity_balance_changes:
          description: |
            A list of all fungible balance updates which occurred in this transaction, aggregated by the global entity (such as account)
            which owns the vaults which were updated.
          items:
            $ref: '#/components/schemas/LtsEntityFungibleBalanceChanges'
          type: array
        non_fungible_entity_balance_changes:
          description: |
            Non fungible changes per entity and resource
          items:
            $ref: '#/components/schemas/LtsEntityNonFungibleBalanceChanges'
          type: array
        resultant_account_fungible_balances:
          description: |
            A list of the resultant fungible account balances for any balances which changed in this transaction.
            Only balances for accounts are returned, not any other kind of entity.
          items:
            $ref: '#/components/schemas/LtsResultantAccountFungibleBalances'
          type: array
        total_fee:
          description: |
            The string-encoded decimal representing the total amount of XRD paid as fee (execution, validator tip and royalties).
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - accumulator_hash
      - fungible_entity_balance_changes
      - non_fungible_entity_balance_changes
      - proposer_timestamp_ms
      - resultant_account_fungible_balances
      - state_version
      - status
      - total_fee
    LtsEntityFungibleBalanceChanges:
      example:
        entity_address: entity_address
        non_fee_balance_changes:
        - balance_change: balance_change
          resource_address: resource_address
        - balance_change: balance_change
          resource_address: resource_address
        fee_balance_change:
          balance_change: balance_change
          resource_address: resource_address
        fee_balance_changes:
        - balance_change: balance_change
          type: FeePayment
          resource_address: resource_address
        - balance_change: balance_change
          type: FeePayment
          resource_address: resource_address
      properties:
        entity_address:
          description: The Bech32m-encoded human readable version of the entity's
            address
          type: string
        fee_balance_change:
          $ref: '#/components/schemas/LtsFungibleResourceBalanceChange'
        fee_balance_changes:
          description: |
            If present, this field indicates fee-related balance changes, for example:

            - Payment of the fee (including tip and royalty)
            - Distribution of royalties
            - Distribution of the fee and tip to the consensus-manager, for distributing to the relevant
              validator/s at end of epoch

            See https://www.radixdlt.com/blog/how-fees-work-in-babylon for further information on how
            fee payment works at Babylon.
          items:
            $ref: '#/components/schemas/LtsFeeFungibleResourceBalanceChange'
          type: array
        non_fee_balance_changes:
          items:
            $ref: '#/components/schemas/LtsFungibleResourceBalanceChange'
          type: array
      required:
      - entity_address
      - fee_balance_changes
      - non_fee_balance_changes
    LtsFungibleResourceBalanceChange:
      example:
        balance_change: balance_change
        resource_address: resource_address
      properties:
        resource_address:
          description: |
            The Bech32m-encoded human readable version of the fungible resource's address
          type: string
        balance_change:
          description: |
            The string-encoded decimal representing the amount of change for the fungible resource.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - balance_change
      - resource_address
    LtsFeeFungibleResourceBalanceChange:
      example:
        balance_change: balance_change
        type: FeePayment
        resource_address: resource_address
      properties:
        type:
          $ref: '#/components/schemas/LtsFeeFungibleResourceBalanceChangeType'
        resource_address:
          description: |
            The Bech32m-encoded human readable version of the fungible resource's address
          type: string
        balance_change:
          description: |
            The string-encoded decimal representing the amount of change for the fungible resource.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - balance_change
      - resource_address
      - type
    LtsFeeFungibleResourceBalanceChangeType:
      enum:
      - FeePayment
      - FeeDistributed
      - TipDistributed
      - RoyaltyDistributed
      type: string
    LtsEntityNonFungibleBalanceChanges:
      example:
        removed:
        - null
        - null
        added:
        - null
        - null
        entity_address: entity_address
        resource_address: resource_address
      properties:
        entity_address:
          description: The Bech32m-encoded human readable version of the entity's
            address
          type: string
        resource_address:
          description: |
            The Bech32m-encoded human readable version of the non-fungible resource's address
          type: string
        added:
          items:
            $ref: '#/components/schemas/LtsNonFungibleLocalId'
          type: array
        removed:
          items:
            $ref: '#/components/schemas/LtsNonFungibleLocalId'
          type: array
      required:
      - added
      - entity_address
      - removed
      - resource_address
    LtsNonFungibleLocalId:
      description: |
        The simple string representation of the non-fungible id.
        * For string ids, this is `<the-string-id>`
        * For integer ids, this is `#the-integer-id#`
        * For bytes ids, this is `[the-lower-case-hex-representation]`
        * For RUID ids, this is `{...-...-...-...}` where `...` are each 16 hex characters.
        A given non-fungible resource has a fixed local id kind, so this representation uniquely
        identifies this non-fungible under the given resource address.
      type: string
    LtsResultantAccountFungibleBalances:
      example:
        resultant_balances:
        - resultant_balance: resultant_balance
          resource_address: resource_address
        - resultant_balance: resultant_balance
          resource_address: resource_address
        account_address: account_address
      properties:
        account_address:
          description: The Bech32m-encoded human readable version of the account's
            address
          type: string
        resultant_balances:
          items:
            $ref: '#/components/schemas/LtsResultantFungibleBalance'
          type: array
      required:
      - account_address
      - resultant_balances
    LtsResultantFungibleBalance:
      example:
        resultant_balance: resultant_balance
        resource_address: resource_address
      properties:
        resource_address:
          description: |
            The Bech32m-encoded human readable version of the fungible resource's address
          type: string
        resultant_balance:
          description: |
            The string-encoded decimal representing the resultant balance of the fungible resource.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - resource_address
      - resultant_balance
    LtsStreamAccountTransactionOutcomesRequest:
      description: |
        A request to retrieve a sublist of committed transactions from the ledger.
      example:
        limit: 6
        from_state_version: 8008281904611
        account_address: account_address
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        account_address:
          description: The Bech32m-encoded human readable version of the account's
            address
          type: string
        from_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        limit:
          description: The maximum number of transactions that will be returned.
          type: integer
      required:
      - account_address
      - from_state_version
      - limit
      - network
    LtsStreamAccountTransactionOutcomesResponse:
      example:
        committed_transaction_outcomes:
        - user_transaction_identifiers:
            intent_hash: intent_hash
            intent_hash_bech32m: intent_hash_bech32m
            signed_intent_hash: signed_intent_hash
            payload_hash: payload_hash
            payload_hash_bech32m: payload_hash_bech32m
            signed_intent_hash_bech32m: signed_intent_hash_bech32m
          resultant_account_fungible_balances:
          - resultant_balances:
            - resultant_balance: resultant_balance
              resource_address: resource_address
            - resultant_balance: resultant_balance
              resource_address: resource_address
            account_address: account_address
          - resultant_balances:
            - resultant_balance: resultant_balance
              resource_address: resource_address
            - resultant_balance: resultant_balance
              resource_address: resource_address
            account_address: account_address
          state_version: 59621339166832
          fungible_entity_balance_changes:
          - entity_address: entity_address
            non_fee_balance_changes:
            - balance_change: balance_change
              resource_address: resource_address
            - balance_change: balance_change
              resource_address: resource_address
            fee_balance_change:
              balance_change: balance_change
              resource_address: resource_address
            fee_balance_changes:
            - balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
            - balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
          - entity_address: entity_address
            non_fee_balance_changes:
            - balance_change: balance_change
              resource_address: resource_address
            - balance_change: balance_change
              resource_address: resource_address
            fee_balance_change:
              balance_change: balance_change
              resource_address: resource_address
            fee_balance_changes:
            - balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
            - balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
          non_fungible_entity_balance_changes:
          - removed:
            - null
            - null
            added:
            - null
            - null
            entity_address: entity_address
            resource_address: resource_address
          - removed:
            - null
            - null
            added:
            - null
            - null
            entity_address: entity_address
            resource_address: resource_address
          total_fee: total_fee
          proposer_timestamp_ms: 56373766566333
          accumulator_hash: accumulator_hash
          status: Success
        - user_transaction_identifiers:
            intent_hash: intent_hash
            intent_hash_bech32m: intent_hash_bech32m
            signed_intent_hash: signed_intent_hash
            payload_hash: payload_hash
            payload_hash_bech32m: payload_hash_bech32m
            signed_intent_hash_bech32m: signed_intent_hash_bech32m
          resultant_account_fungible_balances:
          - resultant_balances:
            - resultant_balance: resultant_balance
              resource_address: resource_address
            - resultant_balance: resultant_balance
              resource_address: resource_address
            account_address: account_address
          - resultant_balances:
            - resultant_balance: resultant_balance
              resource_address: resource_address
            - resultant_balance: resultant_balance
              resource_address: resource_address
            account_address: account_address
          state_version: 59621339166832
          fungible_entity_balance_changes:
          - entity_address: entity_address
            non_fee_balance_changes:
            - balance_change: balance_change
              resource_address: resource_address
            - balance_change: balance_change
              resource_address: resource_address
            fee_balance_change:
              balance_change: balance_change
              resource_address: resource_address
            fee_balance_changes:
            - balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
            - balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
          - entity_address: entity_address
            non_fee_balance_changes:
            - balance_change: balance_change
              resource_address: resource_address
            - balance_change: balance_change
              resource_address: resource_address
            fee_balance_change:
              balance_change: balance_change
              resource_address: resource_address
            fee_balance_changes:
            - balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
            - balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
          non_fungible_entity_balance_changes:
          - removed:
            - null
            - null
            added:
            - null
            - null
            entity_address: entity_address
            resource_address: resource_address
          - removed:
            - null
            - null
            added:
            - null
            - null
            entity_address: entity_address
            resource_address: resource_address
          total_fee: total_fee
          proposer_timestamp_ms: 56373766566333
          accumulator_hash: accumulator_hash
          status: Success
        max_ledger_state_version: 14658129805030
        count: 6027
        from_state_version: 8008281904611
      properties:
        from_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        count:
          description: "An integer between `0` and `10000`, giving the total count\
            \ of transactions in the returned response"
          format: int32
          maximum: 10000
          minimum: 0
          type: integer
        max_ledger_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        committed_transaction_outcomes:
          description: A committed transaction outcomes list starting from the `from_state_version`
            (inclusive).
          items:
            $ref: '#/components/schemas/LtsCommittedTransactionOutcome'
          type: array
      required:
      - committed_transaction_outcomes
      - count
      - from_state_version
      - max_ledger_state_version
    NetworkConfigurationResponse:
      example:
        well_known_addresses:
          secp256k1_signature_virtual_badge: secp256k1_signature_virtual_badge
          account_owner_badge: account_owner_badge
          locker_package: locker_package
          access_controller_package: access_controller_package
          resource_package: resource_package
          package_package: package_package
          account_package: account_package
          system_transaction_badge: system_transaction_badge
          global_caller_virtual_badge: global_caller_virtual_badge
          metadata_module_package: metadata_module_package
          role_assignment_module_package: role_assignment_module_package
          transaction_processor_package: transaction_processor_package
          transaction_tracker: transaction_tracker
          faucet: faucet
          ed25519_signature_virtual_badge: ed25519_signature_virtual_badge
          package_owner_badge: package_owner_badge
          consensus_manager: consensus_manager
          consensus_manager_package: consensus_manager_package
          genesis_helper_package: genesis_helper_package
          faucet_package: faucet_package
          xrd: xrd
          validator_owner_badge: validator_owner_badge
          transaction_tracker_package: transaction_tracker_package
          royalty_module_package: royalty_module_package
          pool_package: pool_package
          identity_package: identity_package
          package_of_direct_caller_virtual_badge: package_of_direct_caller_virtual_badge
          test_utils_package: test_utils_package
          genesis_helper: genesis_helper
          identity_owner_badge: identity_owner_badge
        address_types:
        - entity_type: GlobalPackage
          address_byte_prefix: 153
          hrp_prefix: hrp_prefix
          address_byte_length: 37
        - entity_type: GlobalPackage
          address_byte_prefix: 153
          hrp_prefix: hrp_prefix
          address_byte_length: 37
        network_id: 20
        network_hrp_suffix: network_hrp_suffix
        version:
          api_version: api_version
          core_version: core_version
        usd_price_in_xrd: usd_price_in_xrd
        network: "{{network}}"
      properties:
        version:
          $ref: '#/components/schemas/NetworkConfigurationResponse_version'
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        network_id:
          description: The logical id of the network
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        network_hrp_suffix:
          description: The network suffix used for Bech32m HRPs used for addressing.
          type: string
        usd_price_in_xrd:
          description: |
            The current value of the protocol-based USD/XRD multiplier (i.e. an amount of XRDs to be paid for 1 USD).
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        address_types:
          items:
            $ref: '#/components/schemas/AddressType'
          type: array
        well_known_addresses:
          $ref: '#/components/schemas/NetworkConfigurationResponse_well_known_addresses'
      required:
      - address_types
      - network
      - network_hrp_suffix
      - network_id
      - usd_price_in_xrd
      - version
      - well_known_addresses
    AddressType:
      example:
        entity_type: GlobalPackage
        address_byte_prefix: 153
        hrp_prefix: hrp_prefix
        address_byte_length: 37
      properties:
        hrp_prefix:
          type: string
        entity_type:
          $ref: '#/components/schemas/EntityType'
        address_byte_prefix:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        address_byte_length:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
      required:
      - address_byte_length
      - address_byte_prefix
      - entity_type
      - hrp_prefix
    NetworkStatusRequest:
      example:
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
      required:
      - network
    NetworkStatusResponse:
      example:
        genesis_epoch_round:
          round: 1465812980
          epoch: 6027456183
        post_genesis_epoch_round:
          round: 1465812980
          epoch: 6027456183
        current_protocol_version: current_protocol_version
        current_state_identifier:
          state_tree_hash: state_tree_hash
          state_version: null
          transaction_tree_hash: transaction_tree_hash
          receipt_tree_hash: receipt_tree_hash
        post_genesis_state_identifier:
          state_tree_hash: state_tree_hash
          state_version: null
          transaction_tree_hash: transaction_tree_hash
          receipt_tree_hash: receipt_tree_hash
        current_epoch_round:
          round: 1465812980
          epoch: 6027456183
        pre_genesis_state_identifier:
          state_tree_hash: state_tree_hash
          state_version: null
          transaction_tree_hash: transaction_tree_hash
          receipt_tree_hash: receipt_tree_hash
      properties:
        pre_genesis_state_identifier:
          $ref: '#/components/schemas/CommittedStateIdentifier'
        genesis_epoch_round:
          $ref: '#/components/schemas/EpochRound'
        post_genesis_state_identifier:
          $ref: '#/components/schemas/CommittedStateIdentifier'
        post_genesis_epoch_round:
          $ref: '#/components/schemas/EpochRound'
        current_state_identifier:
          $ref: '#/components/schemas/CommittedStateIdentifier'
        current_epoch_round:
          $ref: '#/components/schemas/EpochRound'
        current_protocol_version:
          description: |
            A descriptor for the current protocol version that the node is running.
          type: string
      required:
      - current_protocol_version
      - current_state_identifier
      - pre_genesis_state_identifier
    EpochRound:
      example:
        round: 1465812980
        epoch: 6027456183
      properties:
        epoch:
          description: |
            An integer between `0` and `10^10`, marking the epoch.
            Only present if the rejection is temporary due to a header specifying a "from epoch" in the future.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        round:
          description: "An integer between `0` and `10^10`, marking the current round\
            \ in an epoch"
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
      required:
      - epoch
      - round
    CommittedStateIdentifier:
      allOf:
      - properties:
          state_version:
            $ref: '#/components/schemas/StateVersion'
        required:
        - state_version
      - $ref: '#/components/schemas/LedgerHashes'
      example:
        state_tree_hash: state_tree_hash
        state_version: null
        transaction_tree_hash: transaction_tree_hash
        receipt_tree_hash: receipt_tree_hash
    ScenariosRequest:
      example:
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
      required:
      - network
    ScenariosResponse:
      example:
        executed_scenarios:
        - sequence_number: 80082
          logical_name: logical_name
          addresses:
            key: null
          committed_transactions:
          - intent_hash: intent_hash
            intent_hash_bech32m: intent_hash_bech32m
            logical_name: logical_name
            state_version: 60274561830704
          - intent_hash: intent_hash
            intent_hash_bech32m: intent_hash_bech32m
            logical_name: logical_name
            state_version: 60274561830704
        - sequence_number: 80082
          logical_name: logical_name
          addresses:
            key: null
          committed_transactions:
          - intent_hash: intent_hash
            intent_hash_bech32m: intent_hash_bech32m
            logical_name: logical_name
            state_version: 60274561830704
          - intent_hash: intent_hash
            intent_hash_bech32m: intent_hash_bech32m
            logical_name: logical_name
            state_version: 60274561830704
      properties:
        executed_scenarios:
          description: |
            Scenarios executed as part of Genesis and Protocol Updates, in their execution order.
          items:
            $ref: '#/components/schemas/ExecutedScenario'
          type: array
      required:
      - executed_scenarios
    ExecutedScenario:
      example:
        sequence_number: 80082
        logical_name: logical_name
        addresses:
          key: null
        committed_transactions:
        - intent_hash: intent_hash
          intent_hash_bech32m: intent_hash_bech32m
          logical_name: logical_name
          state_version: 60274561830704
        - intent_hash: intent_hash
          intent_hash_bech32m: intent_hash_bech32m
          logical_name: logical_name
          state_version: 60274561830704
      properties:
        sequence_number:
          description: An index of the Scenario (reflecting its execution order).
          format: int32
          maximum: 1000000
          minimum: 0
          type: integer
        logical_name:
          type: string
        committed_transactions:
          description: Transactions successfully committed by the Scenario.
          items:
            $ref: '#/components/schemas/ExecutedScenarioTransaction'
          type: array
        addresses:
          additionalProperties:
            $ref: '#/components/schemas/DescribedAddress'
          description: |
            Well-named addresses touched/created by the Scenario, keyed by their name.
      required:
      - addresses
      - committed_transactions
      - logical_name
      - sequence_number
    ExecutedScenarioTransaction:
      example:
        intent_hash: intent_hash
        intent_hash_bech32m: intent_hash_bech32m
        logical_name: logical_name
        state_version: 60274561830704
      properties:
        logical_name:
          type: string
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        intent_hash:
          description: |
            The hex-encoded transaction intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core "intent" of the transaction. Each transaction intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
          maxLength: 64
          minLength: 64
          type: string
        intent_hash_bech32m:
          description: The Bech32m-encoded human readable `TransactionIntentHash`.
          type: string
      required:
      - intent_hash
      - intent_hash_bech32m
      - logical_name
      - state_version
    DescribedAddress:
      description: An arbitrary Bech32m-encoded human readable address (its type should
        be inferred from `logical_name`).
      type: string
    MempoolListRequest:
      example:
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
      required:
      - network
    MempoolListResponse:
      example:
        contents:
        - intent_hash: intent_hash
          intent_hash_bech32m: intent_hash_bech32m
          payload_hash: payload_hash
          payload_hash_bech32m: payload_hash_bech32m
        - intent_hash: intent_hash
          intent_hash_bech32m: intent_hash_bech32m
          payload_hash: payload_hash
          payload_hash_bech32m: payload_hash_bech32m
      properties:
        contents:
          items:
            $ref: '#/components/schemas/MempoolTransactionHashes'
          type: array
      required:
      - contents
    MempoolTransactionHashes:
      example:
        intent_hash: intent_hash
        intent_hash_bech32m: intent_hash_bech32m
        payload_hash: payload_hash
        payload_hash_bech32m: payload_hash_bech32m
      properties:
        intent_hash:
          description: |
            The hex-encoded transaction intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core "intent" of the transaction. Each transaction intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
          maxLength: 64
          minLength: 64
          type: string
        intent_hash_bech32m:
          description: The Bech32m-encoded human readable `TransactionIntentHash`.
          type: string
        payload_hash:
          description: |
            The hex-encoded notarized transaction hash for a user transaction.
            This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
          maxLength: 64
          minLength: 64
          type: string
        payload_hash_bech32m:
          description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
          type: string
      required:
      - intent_hash
      - intent_hash_bech32m
      - payload_hash
      - payload_hash_bech32m
    MempoolTransactionRequest:
      example:
        payload_hashes:
        - null
        - null
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        payload_hashes:
          description: "A list of payload hashes to attempt to read. Each hash must\
            \ be either hex, or in Bech32m format."
          items:
            $ref: '#/components/schemas/NotarizedTransactionHashInput'
          type: array
      required:
      - network
      - payload_hashes
    MempoolTransactionResponse:
      example:
        payloads:
        - hash_bech32m: hash_bech32m
          hex: hex
          error: error
          hash: hash
        - hash_bech32m: hash_bech32m
          hex: hex
          error: error
          hash: hash
        count: 0
      properties:
        count:
          description: An integer giving the total count of payload hashes checked
            in the returned response.
          format: int32
          type: integer
        payloads:
          description: |
            An array containing pairs of payload hash (query) and payload hex or error (response).
            Note that this response is bounded - this means it is not guaranteed all queries will be processed.
            Please query missing payload hashes again.
          items:
            $ref: '#/components/schemas/MempoolTransactionResponse_payloads_inner'
          type: array
      required:
      - count
      - payloads
    TransactionParseRequest:
      example:
        transaction_format_options:
          blobs: true
          raw_notarized_transaction: true
          balance_changes: true
          manifest: true
          raw_system_transaction: true
          message: true
          raw_ledger_transaction: true
        parse_mode: Any
        validation_mode: None
        payload_hex: payload_hex
        network: "{{network}}"
        response_mode: Basic
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        payload_hex:
          description: |
            A hex-encoded payload of a full transaction or a partial transaction - either a notarized transaction,
            a signed transaction intent an unsigned transaction intent, or a ledger payload.
          type: string
        parse_mode:
          description: |
            The type of transaction payload that should be assumed. If omitted, "Any" is used - where the payload is
            attempted to be parsed as each of the following in turn: Notarized, Signed, Unsigned, Ledger.
          enum:
          - Any
          - Notarized
          - Signed
          - Unsigned
          - Ledger
          type: string
        validation_mode:
          description: |
            The type of validation that should be performed, if the payload correctly decompiles as a Notarized Transaction.
            This is only relevant for Notarized payloads. If omitted, "Static" is used.
          enum:
          - None
          - Static
          - Full
          type: string
        response_mode:
          description: |
            The amount of information to return in the response.
            "Basic" includes the type, validity information, and any relevant identifiers.
            "Full" also includes the fully parsed information.
            If omitted, "Full" is used.
          enum:
          - Basic
          - Full
          type: string
        transaction_format_options:
          $ref: '#/components/schemas/TransactionFormatOptions'
      required:
      - network
      - payload_hex
    TransactionParseResponse:
      example:
        parsed:
          type: NotarizedTransaction
      properties:
        parsed:
          $ref: '#/components/schemas/ParsedTransaction'
      required:
      - parsed
    ParsedTransactionType:
      description: The type of the parsed (partial) transaction payload
      enum:
      - NotarizedTransaction
      - NotarizedTransactionV2
      - SignedTransactionIntent
      - TransactionIntent
      - LedgerTransaction
      type: string
    ParsedTransaction:
      discriminator:
        mapping:
          NotarizedTransaction: '#/components/schemas/ParsedNotarizedTransaction'
          NotarizedTransactionV2: '#/components/schemas/ParsedNotarizedTransactionV2'
          SignedTransactionIntent: '#/components/schemas/ParsedSignedTransactionIntent'
          TransactionIntent: '#/components/schemas/ParsedTransactionIntent'
          LedgerTransaction: '#/components/schemas/ParsedLedgerTransaction'
        propertyName: type
      example:
        type: NotarizedTransaction
      properties:
        type:
          $ref: '#/components/schemas/ParsedTransactionType'
      required:
      - type
    ParsedNotarizedTransaction:
      allOf:
      - $ref: '#/components/schemas/ParsedTransaction'
      - properties:
          notarized_transaction:
            $ref: '#/components/schemas/NotarizedTransaction'
          identifiers:
            $ref: '#/components/schemas/ParsedNotarizedTransactionIdentifiers'
          validation_error:
            $ref: '#/components/schemas/ParsedNotarizedTransaction_allOf_validation_error'
        required:
        - identifiers
    ParsedNotarizedTransactionV2:
      allOf:
      - $ref: '#/components/schemas/ParsedTransaction'
      - properties:
          notarized_transaction:
            $ref: '#/components/schemas/NotarizedTransactionV2'
          identifiers:
            $ref: '#/components/schemas/ParsedNotarizedTransactionIdentifiers'
          validation_error:
            $ref: '#/components/schemas/ParsedNotarizedTransaction_allOf_validation_error'
        required:
        - identifiers
    ParsedNotarizedTransactionIdentifiers:
      properties:
        intent_hash:
          description: |
            The hex-encoded transaction intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core "intent" of the transaction. Each transaction intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
          maxLength: 64
          minLength: 64
          type: string
        intent_hash_bech32m:
          description: The Bech32m-encoded human readable `TransactionIntentHash`.
          type: string
        signed_intent_hash:
          description: |
            The hex-encoded signed intent hash for a user transaction.
            This hash identifies the transaction intent, plus additional signatures.
            This hash is signed by the notary, to create the submittable `NotarizedTransaction`.
          maxLength: 64
          minLength: 64
          type: string
        signed_intent_hash_bech32m:
          description: The Bech32m-encoded human readable `SignedTransactionIntentHash`.
          type: string
        payload_hash:
          description: |
            The hex-encoded notarized transaction hash for a user transaction.
            This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
          maxLength: 64
          minLength: 64
          type: string
        payload_hash_bech32m:
          description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
          type: string
        ledger_hash:
          description: |
            The hex-encoded ledger payload transaction hash.
            This is a wrapper for both user transactions, and system transactions such as genesis and round changes.
          maxLength: 64
          minLength: 64
          type: string
        ledger_hash_bech32m:
          description: The Bech32m-encoded human readable `LedgerPayloadHash`.
          type: string
      required:
      - intent_hash
      - intent_hash_bech32m
      - ledger_hash
      - ledger_hash_bech32m
      - payload_hash
      - payload_hash_bech32m
      - signed_intent_hash
      - signed_intent_hash_bech32m
    ParsedSignedTransactionIntent:
      allOf:
      - $ref: '#/components/schemas/ParsedTransaction'
      - properties:
          signed_intent:
            $ref: '#/components/schemas/SignedTransactionIntent'
          identifiers:
            $ref: '#/components/schemas/ParsedSignedTransactionIntentIdentifiers'
        required:
        - identifiers
    ParsedSignedTransactionIntentIdentifiers:
      properties:
        intent_hash:
          description: |
            The hex-encoded transaction intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core "intent" of the transaction. Each transaction intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
          maxLength: 64
          minLength: 64
          type: string
        intent_hash_bech32m:
          description: The Bech32m-encoded human readable `TransactionIntentHash`.
          type: string
        signed_intent_hash:
          description: |
            The hex-encoded signed intent hash for a user transaction.
            This hash identifies the transaction intent, plus additional signatures.
            This hash is signed by the notary, to create the submittable `NotarizedTransaction`.
          maxLength: 64
          minLength: 64
          type: string
        signed_intent_hash_bech32m:
          description: The Bech32m-encoded human readable `SignedTransactionIntentHash`.
          type: string
      required:
      - intent_hash
      - intent_hash_bech32m
      - signed_intent_hash
      - signed_intent_hash_bech32m
    ParsedTransactionIntent:
      allOf:
      - $ref: '#/components/schemas/ParsedTransaction'
      - properties:
          intent:
            $ref: '#/components/schemas/TransactionIntent'
          identifiers:
            $ref: '#/components/schemas/ParsedTransactionIntentIdentifiers'
        required:
        - identifiers
    ParsedTransactionIntentIdentifiers:
      properties:
        intent_hash:
          description: |
            The hex-encoded transaction intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core "intent" of the transaction. Each transaction intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
          maxLength: 64
          minLength: 64
          type: string
        intent_hash_bech32m:
          description: The Bech32m-encoded human readable `TransactionIntentHash`.
          type: string
      required:
      - intent_hash
      - intent_hash_bech32m
    ParsedLedgerTransaction:
      allOf:
      - $ref: '#/components/schemas/ParsedTransaction'
      - properties:
          ledger_transaction:
            $ref: '#/components/schemas/LedgerTransaction'
          identifiers:
            $ref: '#/components/schemas/ParsedLedgerTransactionIdentifiers'
        required:
        - identifiers
    ParsedLedgerTransactionIdentifiers:
      properties:
        intent_hash:
          description: |
            The hex-encoded transaction intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core "intent" of the transaction. Each transaction intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
          maxLength: 64
          minLength: 64
          type: string
        intent_hash_bech32m:
          description: The Bech32m-encoded human readable `TransactionIntentHash`.
          type: string
        signed_intent_hash:
          description: |
            The hex-encoded signed intent hash for a user transaction.
            This hash identifies the transaction intent, plus additional signatures.
            This hash is signed by the notary, to create the submittable `NotarizedTransaction`.
          maxLength: 64
          minLength: 64
          type: string
        signed_intent_hash_bech32m:
          description: The Bech32m-encoded human readable `SignedTransactionIntentHash`.
          type: string
        payload_hash:
          description: |
            The hex-encoded notarized transaction hash for a user transaction.
            This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
          maxLength: 64
          minLength: 64
          type: string
        payload_hash_bech32m:
          description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
          type: string
        ledger_hash:
          description: |
            The hex-encoded ledger payload transaction hash.
            This is a wrapper for both user transactions, and system transactions such as genesis and round changes.
          maxLength: 64
          minLength: 64
          type: string
        ledger_hash_bech32m:
          description: The Bech32m-encoded human readable `LedgerPayloadHash`.
          type: string
      required:
      - ledger_hash
      - ledger_hash_bech32m
    TransactionSubmitRequest:
      example:
        notarized_transaction_hex: notarized_transaction_hex
        force_recalculate: true
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        notarized_transaction_hex:
          description: "A hex-encoded, compiled notarized transaction."
          type: string
        force_recalculate:
          description: "If true, the transaction validity is freshly recalculated\
            \ without using any caches (defaults false)"
          type: boolean
      required:
      - network
      - notarized_transaction_hex
    TransactionSubmitResponse:
      example:
        duplicate: true
      properties:
        duplicate:
          description: Is true if the transaction is a duplicate of an existing transaction
            in the mempool.
          type: boolean
      required:
      - duplicate
    TransactionSubmitErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          details:
            $ref: '#/components/schemas/TransactionSubmitErrorDetails'
      example:
        trace_id: trace_id
        code: 0
        error_type: Basic
        details:
          type: PriorityThresholdNotMet
        message: message
    TransactionSubmitErrorDetailsType:
      enum:
      - PriorityThresholdNotMet
      - IntentAlreadyCommitted
      - Rejected
      type: string
    TransactionSubmitErrorDetails:
      discriminator:
        mapping:
          PriorityThresholdNotMet: '#/components/schemas/TransactionSubmitPriorityThresholdNotMetErrorDetails'
          IntentAlreadyCommitted: '#/components/schemas/TransactionSubmitIntentAlreadyCommitted'
          Rejected: '#/components/schemas/TransactionSubmitRejectedErrorDetails'
        propertyName: type
      example:
        type: PriorityThresholdNotMet
      properties:
        type:
          $ref: '#/components/schemas/TransactionSubmitErrorDetailsType'
      required:
      - type
    TransactionSubmitPriorityThresholdNotMetErrorDetails:
      allOf:
      - $ref: '#/components/schemas/TransactionSubmitErrorDetails'
      - properties:
          tip_percentage:
            deprecated: true
            description: |
              NOTE: This is kept for backwards compatibility, but we recommend using `tip_proportion` instead.

              Tip percentage of the submitted (and rejected) transaction. For V2 transactions specifying basis point tips,
              the amount is rounded down.
            format: int32
            maximum: 65535
            minimum: 0
            type: integer
          min_tip_percentage_required:
            deprecated: true
            description: |
              NOTE: This is kept for backwards compatibility, but we recommend using `min_tip_proportion_required` instead.

              A lower bound for tip percentage at current mempool state. Anything lower than this will very likely result in a mempool rejection.
              A missing value means there is no tip that can guarantee submission.
            format: int32
            maximum: 65535
            minimum: 0
            type: integer
          tip_proportion:
            description: |
              The string-encoded decimal tip proportion of the submitted (and rejected) transaction.

              This field will always be present on Cuttlefish nodes, but is marked as not-required for Cuttlefish launch,
              to avoid a dependency on clients to update after the node is updated.
            type: string
          min_tip_proportion_required:
            description: |
              A lower bound for tip proportion at current mempool state. Anything lower than this will very likely result in a mempool rejection.
              A missing value means there is no tip that can guarantee submission.
            type: string
        required:
        - tip_percentage
    TransactionSubmitIntentAlreadyCommitted:
      allOf:
      - $ref: '#/components/schemas/TransactionSubmitErrorDetails'
      - properties:
          committed_as:
            $ref: '#/components/schemas/CommittedIntentMetadata'
        required:
        - committed_as
    TransactionSubmitRejectedErrorDetails:
      allOf:
      - $ref: '#/components/schemas/TransactionSubmitErrorDetails'
      - description: |
          Indicates that the transaction was executed and resulted in a rejection,
          therefore the transaction is not being added into the mempool.
        properties:
          error_message:
            description: An explanation of the error
            type: string
          is_fresh:
            description: |
              Whether (true) this rejected status has just been calculated fresh, or (false) the status is from the pending
              transaction result cache.
            type: boolean
          is_payload_rejection_permanent:
            description: |
              Whether the rejection of this payload is known to be permanent.
            type: boolean
          is_intent_rejection_permanent:
            description: |
              Whether the rejection of this intent is known to be permanent - this is a stronger statement than the payload rejection
              being permanent, as it implies any payloads containing the intent will also be permanently rejected.
            type: boolean
          retry_from_timestamp:
            $ref: '#/components/schemas/InstantMs'
          retry_from_epoch:
            description: |
              An integer between `0` and `10^10`, marking the epoch after which the node will consider recalculating the validity of the transaction.
              Only present if the rejection is temporary due to a header specifying a "from epoch" in the future.
            format: int64
            maximum: 10000000000
            minimum: 0
            type: integer
          invalid_from_epoch:
            description: |
              An integer between `0` and `10^10`, marking the epoch from which the transaction will no longer be valid, and be permanently rejected.
              Only present if the rejection isn't permanent.
            format: int64
            maximum: 10000000000
            minimum: 0
            type: integer
        required:
        - error_message
        - is_fresh
        - is_intent_rejection_permanent
        - is_payload_rejection_permanent
    TransactionStatusRequest:
      example:
        intent_hash: intent_hash
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        intent_hash:
          description: |
            The transaction intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core "intent" of the transaction. Each transaction intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
            Either hex or Bech32m-encoded strings are supported.
          type: string
      required:
      - intent_hash
      - network
    TransactionStatusResponse:
      example:
        status_description: status_description
        invalid_from_epoch: 800828190
        known_payloads:
        - error_message: error_message
          state_version: 60274561830704
          payload_hash: payload_hash
          payload_hash_bech32m: payload_hash_bech32m
          status: CommittedSuccess
        - error_message: error_message
          state_version: 60274561830704
          payload_hash: payload_hash
          payload_hash_bech32m: payload_hash_bech32m
          status: CommittedSuccess
        intent_status: CommittedSuccess
      properties:
        intent_status:
          $ref: '#/components/schemas/TransactionIntentStatus'
        status_description:
          description: |
            An explanation as to why the intent status is resolved as it is.
          type: string
        invalid_from_epoch:
          description: |
            An integer between `0` and `10^10`, marking the epoch from which the transaction will no longer be valid, and be permanently rejected.
            Only present if the intent status is InMempool or Unknown and we know about a payload.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        known_payloads:
          items:
            $ref: '#/components/schemas/TransactionPayloadDetails'
          type: array
      required:
      - intent_status
      - known_payloads
      - status_description
    TransactionPayloadDetails:
      example:
        error_message: error_message
        state_version: 60274561830704
        payload_hash: payload_hash
        payload_hash_bech32m: payload_hash_bech32m
        status: CommittedSuccess
      properties:
        payload_hash:
          description: |
            The hex-encoded notarized transaction hash for a user transaction.
            This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
          maxLength: 64
          minLength: 64
          type: string
        payload_hash_bech32m:
          description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
          type: string
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        status:
          $ref: '#/components/schemas/TransactionPayloadStatus'
        error_message:
          description: "An explanation for the error, if failed or rejected"
          type: string
      required:
      - payload_hash
      - payload_hash_bech32m
      - status
    TransactionPayloadStatus:
      enum:
      - CommittedSuccess
      - CommittedFailure
      - PermanentlyRejected
      - TransientlyRejected
      - InMempool
      - NotInMempool
      type: string
    TransactionIntentStatus:
      description: |
        The status of the transaction intent, as determined by the node.
        FateUncertain or FateUncertainButLikelyRejection mean that it's still possible that a payload containing the transaction
      enum:
      - CommittedSuccess
      - CommittedFailure
      - PermanentRejection
      - InMempool
      - NotSeen
      - FateUncertain
      - FateUncertainButLikelyRejection
      type: string
    TransactionReceiptRequest:
      example:
        intent_hash: intent_hash
        transaction_format_options:
          blobs: true
          raw_notarized_transaction: true
          balance_changes: true
          manifest: true
          raw_system_transaction: true
          message: true
          raw_ledger_transaction: true
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        intent_hash:
          description: |
            The transaction intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core "intent" of the transaction. Each transaction intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
            Either hex or Bech32m-encoded strings are supported.
          type: string
        transaction_format_options:
          $ref: '#/components/schemas/TransactionFormatOptions'
      required:
      - intent_hash
      - network
    TransactionReceiptResponse:
      example:
        committed:
          ledger_transaction:
            payload_hex: payload_hex
            type: Genesis
          balance_changes:
            fungible_entity_balance_changes:
            - entity_address: entity_address
              non_fee_balance_changes:
              - balance_change: balance_change
                resource_address: resource_address
              - balance_change: balance_change
                resource_address: resource_address
              fee_balance_change:
                balance_change: balance_change
                resource_address: resource_address
              fee_balance_changes:
              - balance_change: balance_change
                type: FeePayment
                resource_address: resource_address
              - balance_change: balance_change
                type: FeePayment
                resource_address: resource_address
            - entity_address: entity_address
              non_fee_balance_changes:
              - balance_change: balance_change
                resource_address: resource_address
              - balance_change: balance_change
                resource_address: resource_address
              fee_balance_change:
                balance_change: balance_change
                resource_address: resource_address
              fee_balance_changes:
              - balance_change: balance_change
                type: FeePayment
                resource_address: resource_address
              - balance_change: balance_change
                type: FeePayment
                resource_address: resource_address
            non_fungible_entity_balance_changes:
            - removed:
              - null
              - null
              added:
              - null
              - null
              entity_address: entity_address
              resource_address: resource_address
            - removed:
              - null
              - null
              added:
              - null
              - null
              entity_address: entity_address
              resource_address: resource_address
          resultant_state_identifiers:
            state_tree_hash: state_tree_hash
            state_version: null
            transaction_tree_hash: transaction_tree_hash
            receipt_tree_hash: receipt_tree_hash
          receipt:
            output:
            - programmatic_json: ""
              hex: hex
            - programmatic_json: ""
              hex: hex
            error_message: error_message
            fee_summary:
              xrd_total_storage_cost: xrd_total_storage_cost
              xrd_total_execution_cost: xrd_total_execution_cost
              execution_cost_units_consumed: 343953088
              xrd_total_finalization_cost: xrd_total_finalization_cost
              finalization_cost_units_consumed: 2588772717
              xrd_total_royalty_cost: xrd_total_royalty_cost
              xrd_total_tipping_cost: xrd_total_tipping_cost
            next_epoch:
              significant_protocol_update_readiness:
              - signalled_stake: signalled_stake
                readiness_signal_name: readiness_signal_name
              - signalled_stake: signalled_stake
                readiness_signal_name: readiness_signal_name
              validators:
              - stake: stake
                address: address
                key:
                  key_hex: key_hex
                  key_type: EcdsaSecp256k1
              - stake: stake
                address: address
                key:
                  key_hex: key_hex
                  key_type: EcdsaSecp256k1
              epoch: 2027123023
            fee_destination:
              to_burn: to_burn
              to_validator_set: to_validator_set
              to_proposer: to_proposer
              to_royalty_recipients:
              - royalty_recipient:
                  entity_type: GlobalPackage
                  entity_address: entity_address
                  is_global: true
                xrd_amount: xrd_amount
              - royalty_recipient:
                  entity_type: GlobalPackage
                  entity_address: entity_address
                  is_global: true
                xrd_amount: xrd_amount
            costing_parameters:
              finalization_cost_unit_price: finalization_cost_unit_price
              execution_cost_unit_loan: 2560717018
              finalization_cost_unit_limit: 2421234836
              execution_cost_unit_price: execution_cost_unit_price
              xrd_storage_price: xrd_storage_price
              xrd_usd_price: xrd_usd_price
              execution_cost_unit_limit: 629561881
              xrd_archive_storage_price: xrd_archive_storage_price
              tip_percentage: 15087
              tip_proportion: tip_proportion
            state_updates:
              deleted_substates:
              - system_structure:
                  type: SystemField
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id:
                  substate_type: BootLoaderModuleFieldSystemBoot
                  substate_key:
                    key_type: Field
                    db_sort_key_hex: db_sort_key_hex
                  entity_type: null
                  partition_kind: null
                  partition_number: 237
                  entity_address: entity_address
                  entity_module: null
              - system_structure:
                  type: SystemField
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id:
                  substate_type: BootLoaderModuleFieldSystemBoot
                  substate_key:
                    key_type: Field
                    db_sort_key_hex: db_sort_key_hex
                  entity_type: null
                  partition_kind: null
                  partition_number: 237
                  entity_address: entity_address
                  entity_module: null
              deleted_partitions:
              - entity_type: null
                partition_kind: Field
                partition_number: 180
                entity_address: entity_address
                entity_module: TypeInfo
              - entity_type: null
                partition_kind: Field
                partition_number: 180
                entity_address: entity_address
                entity_module: TypeInfo
              created_substates:
              - system_structure:
                  type: SystemField
                substate_id:
                  substate_type: BootLoaderModuleFieldSystemBoot
                  substate_key:
                    key_type: Field
                    db_sort_key_hex: db_sort_key_hex
                  entity_type: null
                  partition_kind: null
                  partition_number: 237
                  entity_address: entity_address
                  entity_module: null
                value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              - system_structure:
                  type: SystemField
                substate_id:
                  substate_type: BootLoaderModuleFieldSystemBoot
                  substate_key:
                    key_type: Field
                    db_sort_key_hex: db_sort_key_hex
                  entity_type: null
                  partition_kind: null
                  partition_number: 237
                  entity_address: entity_address
                  entity_module: null
                value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              updated_substates:
              - system_structure:
                  type: SystemField
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id:
                  substate_type: BootLoaderModuleFieldSystemBoot
                  substate_key:
                    key_type: Field
                    db_sort_key_hex: db_sort_key_hex
                  entity_type: null
                  partition_kind: null
                  partition_number: 237
                  entity_address: entity_address
                  entity_module: null
                new_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              - system_structure:
                  type: SystemField
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id:
                  substate_type: BootLoaderModuleFieldSystemBoot
                  substate_key:
                    key_type: Field
                    db_sort_key_hex: db_sort_key_hex
                  entity_type: null
                  partition_kind: null
                  partition_number: 237
                  entity_address: entity_address
                  entity_module: null
                new_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              new_global_entities:
              - entity_type: GlobalPackage
                entity_address: entity_address
                is_global: true
              - entity_type: GlobalPackage
                entity_address: entity_address
                is_global: true
            fee_source:
              from_vaults:
              - xrd_amount: xrd_amount
                vault_entity:
                  entity_type: GlobalPackage
                  entity_address: entity_address
                  is_global: true
              - xrd_amount: xrd_amount
                vault_entity:
                  entity_type: GlobalPackage
                  entity_address: entity_address
                  is_global: true
            events:
            - data:
                programmatic_json: ""
                hex: hex
              type:
                name: name
                type_reference:
                  full_type_id:
                    schema_hash: schema_hash
                    entity_address: entity_address
                    local_type_id:
                      as_sbor:
                        programmatic_json: ""
                        hex: hex
                      kind: WellKnown
                      id: 1553093137
                emitter:
                  type: Function
            - data:
                programmatic_json: ""
                hex: hex
              type:
                name: name
                type_reference:
                  full_type_id:
                    schema_hash: schema_hash
                    entity_address: entity_address
                    local_type_id:
                      as_sbor:
                        programmatic_json: ""
                        hex: hex
                      kind: WellKnown
                      id: 1553093137
                emitter:
                  type: Function
            status: Succeeded
          proposer_timestamp_ms: 41456080298839
      properties:
        committed:
          $ref: '#/components/schemas/CommittedTransaction'
      required:
      - committed
    TransactionCallPreviewRequest:
      example:
        arguments:
        - arguments
        - arguments
        at_ledger_state:
          type: ByStateVersion
        network: "{{network}}"
        target:
          type: Method
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSelector'
        target:
          $ref: '#/components/schemas/TargetIdentifier'
        arguments:
          description: Argument list
          items:
            description: "SBOR-encoded argument, formatted as a hex-string"
            type: string
          type: array
      required:
      - arguments
      - network
      - target
    TargetIdentifierType:
      enum:
      - Method
      - Function
      type: string
    TargetIdentifier:
      discriminator:
        mapping:
          Method: '#/components/schemas/ComponentMethodTargetIdentifier'
          Function: '#/components/schemas/BlueprintFunctionTargetIdentifier'
        propertyName: type
      example:
        type: Method
      properties:
        type:
          $ref: '#/components/schemas/TargetIdentifierType'
      required:
      - type
    ComponentMethodTargetIdentifier:
      allOf:
      - $ref: '#/components/schemas/TargetIdentifier'
      - properties:
          component_address:
            $ref: '#/components/schemas/ComponentAddress'
          method_name:
            type: string
        required:
        - component_address
        - method_name
    BlueprintFunctionTargetIdentifier:
      allOf:
      - $ref: '#/components/schemas/TargetIdentifier'
      - properties:
          package_address:
            $ref: '#/components/schemas/PackageAddress'
          blueprint_name:
            type: string
          function_name:
            type: string
        required:
        - blueprint_name
        - function_name
        - package_address
    TransactionCallPreviewResponse:
      example:
        output:
          programmatic_json: ""
          hex: hex
        error_message: error_message
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
        status: Succeeded
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        status:
          $ref: '#/components/schemas/TransactionStatus'
        output:
          $ref: '#/components/schemas/SborData'
        error_message:
          description: Error message (only present if status is Failed or Rejected)
          type: string
      required:
      - at_ledger_state
      - status
    TransactionPreviewRequest:
      example:
        manifest: manifest
        start_epoch_inclusive: 800828190
        flags:
          use_free_credit: true
          assume_all_signature_proofs: true
          skip_epoch_check: true
          disable_auth_checks: true
        at_ledger_state:
          type: ByStateVersion
        message:
          type: Plaintext
        nonce: 2560717018
        notary_is_signatory: true
        network: "{{network}}"
        blobs_hex:
        - blobs_hex
        - blobs_hex
        end_epoch_exclusive: 6027456183
        signer_public_keys:
        - key_type: EcdsaSecp256k1
        - key_type: EcdsaSecp256k1
        options:
          radix_engine_toolkit_receipt: true
        notary_public_key:
          key_type: EcdsaSecp256k1
        tip_percentage: 9606
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSelector'
        manifest:
          description: A text representation of a transaction manifest.
          type: string
        blobs_hex:
          description: "An array of hex-encoded blob data, if referenced by the manifest."
          items:
            type: string
          type: array
        start_epoch_inclusive:
          description: |
            An integer between `0` and `10^10`, marking the epoch at which the transaction starts
            being valid.
            If not provided, the current epoch will be used (taking into account the
            `at_ledger_state`, if specified).
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        end_epoch_exclusive:
          description: |
            An integer between `0` and `10^10`, marking the epoch at which the transaction is no
            longer valid.
            If not provided, a maximum epoch (relative to the `start_epoch_inclusive`) will be used.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        notary_public_key:
          $ref: '#/components/schemas/PublicKey'
        notary_is_signatory:
          description: |
            Whether the notary should be used as a signer (optional).
            If not provided, this defaults to false.
          type: boolean
        tip_percentage:
          description: |
            An integer between `0` and `65535`, giving the validator tip as a percentage amount.
            A value of `1` corresponds to a 1% fee.
            If not provided, this defaults to 0.
          format: int32
          maximum: 65535
          minimum: 0
          type: integer
        nonce:
          description: |
            An integer between `0` and `2^32 - 1`, chosen to allow a unique intent to be created
            (to enable submitting an otherwise identical/duplicate intent).
            If not provided, this defaults to 0.
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        signer_public_keys:
          description: |
            A list of public keys to be used as transaction signers.
            If not provided, this defaults to an empty array.
          items:
            $ref: '#/components/schemas/PublicKey'
          type: array
        message:
          $ref: '#/components/schemas/TransactionMessage'
        options:
          $ref: '#/components/schemas/TransactionPreviewResponseOptions'
        flags:
          $ref: '#/components/schemas/PreviewFlags'
      required:
      - manifest
      - network
    TransactionPreviewResponseOptions:
      description: A set of flags to configure the response of the transaction preview.
      example:
        radix_engine_toolkit_receipt: true
      properties:
        radix_engine_toolkit_receipt:
          description: |
            This flag controls whether the preview response will include a Radix Engine Toolkit serializable
            receipt or not. If not provided, this defaults to `false` and no toolkit receipt is provided in
            the response.
          type: boolean
    TransactionPreviewResponse:
      example:
        instruction_resource_changes:
        - resource_changes:
          - amount: amount
            component_entity:
              entity_type: GlobalPackage
              entity_address: entity_address
              is_global: true
            resource_address: resource_address
            vault_entity:
              entity_type: GlobalPackage
              entity_address: entity_address
              is_global: true
          - amount: amount
            component_entity:
              entity_type: GlobalPackage
              entity_address: entity_address
              is_global: true
            resource_address: resource_address
            vault_entity:
              entity_type: GlobalPackage
              entity_address: entity_address
              is_global: true
          index: 343953088
        - resource_changes:
          - amount: amount
            component_entity:
              entity_type: GlobalPackage
              entity_address: entity_address
              is_global: true
            resource_address: resource_address
            vault_entity:
              entity_type: GlobalPackage
              entity_address: entity_address
              is_global: true
          - amount: amount
            component_entity:
              entity_type: GlobalPackage
              entity_address: entity_address
              is_global: true
            resource_address: resource_address
            vault_entity:
              entity_type: GlobalPackage
              entity_address: entity_address
              is_global: true
          index: 343953088
        radix_engine_toolkit_receipt: "{}"
        receipt:
          output:
          - programmatic_json: ""
            hex: hex
          - programmatic_json: ""
            hex: hex
          error_message: error_message
          fee_summary:
            xrd_total_storage_cost: xrd_total_storage_cost
            xrd_total_execution_cost: xrd_total_execution_cost
            execution_cost_units_consumed: 343953088
            xrd_total_finalization_cost: xrd_total_finalization_cost
            finalization_cost_units_consumed: 2588772717
            xrd_total_royalty_cost: xrd_total_royalty_cost
            xrd_total_tipping_cost: xrd_total_tipping_cost
          next_epoch:
            significant_protocol_update_readiness:
            - signalled_stake: signalled_stake
              readiness_signal_name: readiness_signal_name
            - signalled_stake: signalled_stake
              readiness_signal_name: readiness_signal_name
            validators:
            - stake: stake
              address: address
              key:
                key_hex: key_hex
                key_type: EcdsaSecp256k1
            - stake: stake
              address: address
              key:
                key_hex: key_hex
                key_type: EcdsaSecp256k1
            epoch: 2027123023
          fee_destination:
            to_burn: to_burn
            to_validator_set: to_validator_set
            to_proposer: to_proposer
            to_royalty_recipients:
            - royalty_recipient:
                entity_type: GlobalPackage
                entity_address: entity_address
                is_global: true
              xrd_amount: xrd_amount
            - royalty_recipient:
                entity_type: GlobalPackage
                entity_address: entity_address
                is_global: true
              xrd_amount: xrd_amount
          costing_parameters:
            finalization_cost_unit_price: finalization_cost_unit_price
            execution_cost_unit_loan: 2560717018
            finalization_cost_unit_limit: 2421234836
            execution_cost_unit_price: execution_cost_unit_price
            xrd_storage_price: xrd_storage_price
            xrd_usd_price: xrd_usd_price
            execution_cost_unit_limit: 629561881
            xrd_archive_storage_price: xrd_archive_storage_price
            tip_percentage: 15087
            tip_proportion: tip_proportion
          state_updates:
            deleted_substates:
            - system_structure:
                type: SystemField
              previous_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
              substate_id:
                substate_type: BootLoaderModuleFieldSystemBoot
                substate_key:
                  key_type: Field
                  db_sort_key_hex: db_sort_key_hex
                entity_type: null
                partition_kind: null
                partition_number: 237
                entity_address: entity_address
                entity_module: null
            - system_structure:
                type: SystemField
              previous_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
              substate_id:
                substate_type: BootLoaderModuleFieldSystemBoot
                substate_key:
                  key_type: Field
                  db_sort_key_hex: db_sort_key_hex
                entity_type: null
                partition_kind: null
                partition_number: 237
                entity_address: entity_address
                entity_module: null
            deleted_partitions:
            - entity_type: null
              partition_kind: Field
              partition_number: 180
              entity_address: entity_address
              entity_module: TypeInfo
            - entity_type: null
              partition_kind: Field
              partition_number: 180
              entity_address: entity_address
              entity_module: TypeInfo
            created_substates:
            - system_structure:
                type: SystemField
              substate_id:
                substate_type: BootLoaderModuleFieldSystemBoot
                substate_key:
                  key_type: Field
                  db_sort_key_hex: db_sort_key_hex
                entity_type: null
                partition_kind: null
                partition_number: 237
                entity_address: entity_address
                entity_module: null
              value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
            - system_structure:
                type: SystemField
              substate_id:
                substate_type: BootLoaderModuleFieldSystemBoot
                substate_key:
                  key_type: Field
                  db_sort_key_hex: db_sort_key_hex
                entity_type: null
                partition_kind: null
                partition_number: 237
                entity_address: entity_address
                entity_module: null
              value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
            updated_substates:
            - system_structure:
                type: SystemField
              previous_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
              substate_id:
                substate_type: BootLoaderModuleFieldSystemBoot
                substate_key:
                  key_type: Field
                  db_sort_key_hex: db_sort_key_hex
                entity_type: null
                partition_kind: null
                partition_number: 237
                entity_address: entity_address
                entity_module: null
              new_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
            - system_structure:
                type: SystemField
              previous_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
              substate_id:
                substate_type: BootLoaderModuleFieldSystemBoot
                substate_key:
                  key_type: Field
                  db_sort_key_hex: db_sort_key_hex
                entity_type: null
                partition_kind: null
                partition_number: 237
                entity_address: entity_address
                entity_module: null
              new_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
            new_global_entities:
            - entity_type: GlobalPackage
              entity_address: entity_address
              is_global: true
            - entity_type: GlobalPackage
              entity_address: entity_address
              is_global: true
          fee_source:
            from_vaults:
            - xrd_amount: xrd_amount
              vault_entity:
                entity_type: GlobalPackage
                entity_address: entity_address
                is_global: true
            - xrd_amount: xrd_amount
              vault_entity:
                entity_type: GlobalPackage
                entity_address: entity_address
                is_global: true
          events:
          - data:
              programmatic_json: ""
              hex: hex
            type:
              name: name
              type_reference:
                full_type_id:
                  schema_hash: schema_hash
                  entity_address: entity_address
                  local_type_id:
                    as_sbor:
                      programmatic_json: ""
                      hex: hex
                    kind: WellKnown
                    id: 1553093137
              emitter:
                type: Function
          - data:
              programmatic_json: ""
              hex: hex
            type:
              name: name
              type_reference:
                full_type_id:
                  schema_hash: schema_hash
                  entity_address: entity_address
                  local_type_id:
                    as_sbor:
                      programmatic_json: ""
                      hex: hex
                    kind: WellKnown
                    id: 1553093137
              emitter:
                type: Function
          status: Succeeded
        encoded_receipt: encoded_receipt
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
        logs:
        - level: level
          message: message
        - level: level
          message: message
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        encoded_receipt:
          deprecated: true
          description: "The hex-sbor-encoded receipt.\n\nThis field is deprecated\
            \ and will be removed from the API with the release of the next \nprotocol\
            \ update, cuttlefish. This field was provided primarily for use with the\
            \ Radix \nEngine Toolkit and its execution summary functionality. If you\
            \ still wish to use this \nfunctionality update your Radix Engine Toolkit\
            \ and use the receipt provided in the \n`radix_engine_toolkit_receipt`\
            \ field of this response.\n"
          type: string
        receipt:
          $ref: '#/components/schemas/TransactionReceipt'
        radix_engine_toolkit_receipt:
          description: "An optional field which is only provided if the `radix_engine_toolkit_receipt`\n\
            flag is set to true when requesting a transaction preview from the API.\n\
            \nThis receipt is primarily intended for use with the toolkit and may\
            \ contain information \nthat is already available in the receipt provided\
            \ in the `receipt` field of this \nresponse.\n\nA typical client of this\
            \ API is not expected to use this receipt. The primary clients \nthis\
            \ receipt is intended for is the Radix wallet or any client that needs\
            \ to perform \nexecution summaries on their transactions.\n"
          type: object
        instruction_resource_changes:
          items:
            $ref: '#/components/schemas/InstructionResourceChanges'
          type: array
        logs:
          items:
            $ref: '#/components/schemas/TransactionPreviewResponse_logs_inner'
          type: array
      required:
      - at_ledger_state
      - encoded_receipt
      - instruction_resource_changes
      - logs
      - receipt
    PreviewFlags:
      example:
        use_free_credit: true
        assume_all_signature_proofs: true
        skip_epoch_check: true
        disable_auth_checks: true
      properties:
        use_free_credit:
          description: |
            If enabled, a large simulated pool of XRD is marked as locked.

            This mode can be used to estimate fees. To get a reliable estimate, we recommend that your
            transaction is as close as possible to the real transaction. For example:
            - You should still use a lock fee command, but you can set it to lock a fee of 0.
            - You should include the public keys that will sign the transaction, so the cost of
              signature verification and payload size can be accounted for.
          type: boolean
        assume_all_signature_proofs:
          description: |
            If enabled, each manifest processor's auth zone will be given a simulated proof of
            every signature, which can be used to pass signature access rules.

            This can be used to preview transactions even if the required signatures are not
            known ahead of time.

            See the documentation on
            [advanced access rules](https://docs.radixdlt.com/docs/advanced-accessrules#signature-requirements)
            for more information.
          type: boolean
        skip_epoch_check:
          description: |
            If enabled, the various runtime epoch-related verifications are skipped:
            - The `start_epoch_inclusive` and `end_epoch_exclusive` parameters, if specified, are ignored.
            - The duplicate intent checks (which rely on the expiry epoch) are also ignored.

            However, if the start and end epoch are provided, they must still be statically valid.
            We recommend using a value of `start_epoch_inclusive = 1` and `end_epoch_exclusive = 2` in this
            case.
          type: boolean
        disable_auth_checks:
          description: |
            If enabled, all authorization checks are skipped during execution.

            This could be used to e.g.:
            * Preview protocol update style transactions.
            * Mint resources for previewing trades with resources you don't own.
              If doing this, be warned: only resources which were potentially mintable/burnable
              at creation time will be mintable/burnable, due to feature flags on the resource.

            Warning: this mode of operation is quite a departure from normal operation:
            * Calculated fees will likely be lower than a standard execution.
            * This mode can subtly break invariants some dApp code might rely on, or result in unexpected
              behaviour, so the execution result might not be valid for your needs. For example,
              if this flag was used to mint pool units to preview a redemption (or some dApp interaction which
              behind the scenes redeemed them), they'd redeem for less than they're currently worth,
              because the blueprint code relies on the total supply of the pool units to calculate their
              redemption worth, and you've just inflated the total supply through the mint operation.
          type: boolean
    TransactionPreviewV2Request:
      example:
        preview_transaction:
          type: Compiled
        flags:
          use_free_credit: true
          assume_all_signature_proofs: true
          skip_epoch_check: true
          disable_auth_checks: true
        options:
          radix_engine_toolkit_receipt: true
          core_api_receipt: true
          logs: true
        at_ledger_state:
          type: ByStateVersion
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSelector'
        preview_transaction:
          $ref: '#/components/schemas/PreviewTransaction'
        flags:
          $ref: '#/components/schemas/PreviewFlags'
        options:
          $ref: '#/components/schemas/TransactionPreviewV2ResponseOptions'
      required:
      - network
      - preview_transaction
    TransactionPreviewV2ResponseOptions:
      description: A set of flags to configure the response of the transaction preview.
      example:
        radix_engine_toolkit_receipt: true
        core_api_receipt: true
        logs: true
      properties:
        core_api_receipt:
          description: |
            This flag controls whether the preview response will include a Core API receipt or not.
            If not provided, this defaults to `false` and no core api receipt is provided in
            the response.
          type: boolean
        radix_engine_toolkit_receipt:
          description: |
            This flag controls whether the preview response will include a Radix Engine Toolkit serializable
            receipt or not. If not provided, this defaults to `false` and no toolkit receipt is provided in
            the response.
          type: boolean
        logs:
          description: |
            This flag controls whether the preview response will include execution logs.
            If not provided, this defaults to `false` and no logs will be provided in the response.
          type: boolean
    PreviewTransactionType:
      enum:
      - Compiled
      type: string
    PreviewTransaction:
      discriminator:
        mapping:
          Compiled: '#/components/schemas/CompiledPreviewTransaction'
        propertyName: type
      example:
        type: Compiled
      properties:
        type:
          $ref: '#/components/schemas/PreviewTransactionType'
      required:
      - type
    CompiledPreviewTransaction:
      allOf:
      - $ref: '#/components/schemas/PreviewTransaction'
      - properties:
          preview_transaction_hex:
            description: |
              A hex-encoded, compiled `RawPreviewTransaction`.

              As of Cuttlefish, only `PreviewTransactionV2` is supported.

              A `PreviewTransactionV2` can be created with a v2 transaction builder:
              * If using Rust, it can be created with a `TransactionV2Builder` using `build_preview_transaction()`
                and then converted to hex with `preview_transaction.to_raw().unwrap().to_hex()`
              * If using the toolkit, you can create this using the v2 transaction builder.

              Some subtleties:
              * Partial transactions can't be previewed. Instead, they must be wrapped inside a
                transaction wrapper, so that the engine knows how to yield to them appropriately.
              * Currently the builder assumes that the signed partial transactions have real signatures.
                This isn't strictly required, and we may create a builder in future which allows providing
                public keys when building partial transactions for use in preview.
              * If you don't have signatures to hand, you can simply not sign the partial transactions,
                and then use the `assume_all_signature_proofs` preview flag, although be advised that
                this may result in the fee estimate being slightly lower during preview.
              * We may create more ergonomic builders for PreviewTransactions which allow use of
                public keys to denote the signers of subintents. Let us know if this is important
                for your use case.
            type: string
        required:
        - preview_transaction_hex
    TransactionPreviewV2Response:
      example:
        radix_engine_toolkit_receipt: "{}"
        receipt:
          output:
          - programmatic_json: ""
            hex: hex
          - programmatic_json: ""
            hex: hex
          error_message: error_message
          fee_summary:
            xrd_total_storage_cost: xrd_total_storage_cost
            xrd_total_execution_cost: xrd_total_execution_cost
            execution_cost_units_consumed: 343953088
            xrd_total_finalization_cost: xrd_total_finalization_cost
            finalization_cost_units_consumed: 2588772717
            xrd_total_royalty_cost: xrd_total_royalty_cost
            xrd_total_tipping_cost: xrd_total_tipping_cost
          next_epoch:
            significant_protocol_update_readiness:
            - signalled_stake: signalled_stake
              readiness_signal_name: readiness_signal_name
            - signalled_stake: signalled_stake
              readiness_signal_name: readiness_signal_name
            validators:
            - stake: stake
              address: address
              key:
                key_hex: key_hex
                key_type: EcdsaSecp256k1
            - stake: stake
              address: address
              key:
                key_hex: key_hex
                key_type: EcdsaSecp256k1
            epoch: 2027123023
          fee_destination:
            to_burn: to_burn
            to_validator_set: to_validator_set
            to_proposer: to_proposer
            to_royalty_recipients:
            - royalty_recipient:
                entity_type: GlobalPackage
                entity_address: entity_address
                is_global: true
              xrd_amount: xrd_amount
            - royalty_recipient:
                entity_type: GlobalPackage
                entity_address: entity_address
                is_global: true
              xrd_amount: xrd_amount
          costing_parameters:
            finalization_cost_unit_price: finalization_cost_unit_price
            execution_cost_unit_loan: 2560717018
            finalization_cost_unit_limit: 2421234836
            execution_cost_unit_price: execution_cost_unit_price
            xrd_storage_price: xrd_storage_price
            xrd_usd_price: xrd_usd_price
            execution_cost_unit_limit: 629561881
            xrd_archive_storage_price: xrd_archive_storage_price
            tip_percentage: 15087
            tip_proportion: tip_proportion
          state_updates:
            deleted_substates:
            - system_structure:
                type: SystemField
              previous_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
              substate_id:
                substate_type: BootLoaderModuleFieldSystemBoot
                substate_key:
                  key_type: Field
                  db_sort_key_hex: db_sort_key_hex
                entity_type: null
                partition_kind: null
                partition_number: 237
                entity_address: entity_address
                entity_module: null
            - system_structure:
                type: SystemField
              previous_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
              substate_id:
                substate_type: BootLoaderModuleFieldSystemBoot
                substate_key:
                  key_type: Field
                  db_sort_key_hex: db_sort_key_hex
                entity_type: null
                partition_kind: null
                partition_number: 237
                entity_address: entity_address
                entity_module: null
            deleted_partitions:
            - entity_type: null
              partition_kind: Field
              partition_number: 180
              entity_address: entity_address
              entity_module: TypeInfo
            - entity_type: null
              partition_kind: Field
              partition_number: 180
              entity_address: entity_address
              entity_module: TypeInfo
            created_substates:
            - system_structure:
                type: SystemField
              substate_id:
                substate_type: BootLoaderModuleFieldSystemBoot
                substate_key:
                  key_type: Field
                  db_sort_key_hex: db_sort_key_hex
                entity_type: null
                partition_kind: null
                partition_number: 237
                entity_address: entity_address
                entity_module: null
              value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
            - system_structure:
                type: SystemField
              substate_id:
                substate_type: BootLoaderModuleFieldSystemBoot
                substate_key:
                  key_type: Field
                  db_sort_key_hex: db_sort_key_hex
                entity_type: null
                partition_kind: null
                partition_number: 237
                entity_address: entity_address
                entity_module: null
              value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
            updated_substates:
            - system_structure:
                type: SystemField
              previous_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
              substate_id:
                substate_type: BootLoaderModuleFieldSystemBoot
                substate_key:
                  key_type: Field
                  db_sort_key_hex: db_sort_key_hex
                entity_type: null
                partition_kind: null
                partition_number: 237
                entity_address: entity_address
                entity_module: null
              new_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
            - system_structure:
                type: SystemField
              previous_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
              substate_id:
                substate_type: BootLoaderModuleFieldSystemBoot
                substate_key:
                  key_type: Field
                  db_sort_key_hex: db_sort_key_hex
                entity_type: null
                partition_kind: null
                partition_number: 237
                entity_address: entity_address
                entity_module: null
              new_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
            new_global_entities:
            - entity_type: GlobalPackage
              entity_address: entity_address
              is_global: true
            - entity_type: GlobalPackage
              entity_address: entity_address
              is_global: true
          fee_source:
            from_vaults:
            - xrd_amount: xrd_amount
              vault_entity:
                entity_type: GlobalPackage
                entity_address: entity_address
                is_global: true
            - xrd_amount: xrd_amount
              vault_entity:
                entity_type: GlobalPackage
                entity_address: entity_address
                is_global: true
          events:
          - data:
              programmatic_json: ""
              hex: hex
            type:
              name: name
              type_reference:
                full_type_id:
                  schema_hash: schema_hash
                  entity_address: entity_address
                  local_type_id:
                    as_sbor:
                      programmatic_json: ""
                      hex: hex
                    kind: WellKnown
                    id: 1553093137
              emitter:
                type: Function
          - data:
              programmatic_json: ""
              hex: hex
            type:
              name: name
              type_reference:
                full_type_id:
                  schema_hash: schema_hash
                  entity_address: entity_address
                  local_type_id:
                    as_sbor:
                      programmatic_json: ""
                      hex: hex
                    kind: WellKnown
                    id: 1553093137
              emitter:
                type: Function
          status: Succeeded
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
        logs:
        - level: level
          message: message
        - level: level
          message: message
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        receipt:
          $ref: '#/components/schemas/TransactionReceipt'
        radix_engine_toolkit_receipt:
          description: "An optional field which is only provided if the `radix_engine_toolkit_receipt`\n\
            flag is set to true in the `options` property of the request.\n\nThis\
            \ receipt is primarily intended for use with the toolkit and may contain\
            \ information \nthat is already available in the receipt provided in the\
            \ `receipt` field of this \nresponse.\n\nA typical client of this API\
            \ is not expected to use this receipt. The primary clients \nthis receipt\
            \ is intended for is the Radix wallet or any client that needs to perform\
            \ \nexecution summaries on their transactions.\n"
          type: object
        logs:
          description: |
            An optional field which is only provided if the `logs` flag is set to true in the
            `options` property of the request.

            If present, it gives the emitted logs from the transaction execution.
          items:
            $ref: '#/components/schemas/TransactionPreviewResponse_logs_inner'
          type: array
      required:
      - at_ledger_state
    TransactionPreviewV2ErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          details:
            $ref: '#/components/schemas/TransactionPreviewV2ErrorDetails'
      example:
        trace_id: trace_id
        code: 0
        error_type: Basic
        details:
          type: Invalid
        message: message
    TransactionPreviewV2ErrorDetailsType:
      enum:
      - Invalid
      type: string
    TransactionPreviewV2ErrorDetails:
      discriminator:
        mapping:
          Invalid: '#/components/schemas/InvalidTransactionPreviewV2ErrorDetails'
        propertyName: type
      example:
        type: Invalid
      properties:
        type:
          $ref: '#/components/schemas/TransactionPreviewV2ErrorDetailsType'
      required:
      - type
    InvalidTransactionPreviewV2ErrorDetails:
      allOf:
      - $ref: '#/components/schemas/TransactionPreviewV2ErrorDetails'
      - properties:
          validation_error:
            type: string
        required:
        - validation_error
    StreamProofsRequest:
      description: |
        A request to retrieve a sublist of proofs.
      example:
        filter:
          type: Any
        continuation_token: continuation_token
        max_page_size: 0
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        filter:
          $ref: '#/components/schemas/StreamProofsFilter'
        max_page_size:
          description: "If specified, the maximum number of proofs that will be returned."
          type: integer
        continuation_token:
          description: |
            A continuation token is returned if and only if there are further non-empty pages of items currently available.
            The token can be provided in a following request to fetch the next page of results.
            The filter and sort should not be changed when re-using the continuation token.
          type: string
      required:
      - network
    StreamProofsFilterType:
      enum:
      - Any
      - NewEpochs
      - ProtocolUpdateInitializations
      - ProtocolUpdateExecution
      type: string
    StreamProofsFilter:
      description: "If not provided, defaults to \"Any\"."
      discriminator:
        mapping:
          Any: '#/components/schemas/StreamProofsFilterAny'
          NewEpochs: '#/components/schemas/StreamProofsFilterNewEpochs'
          ProtocolUpdateInitializations: '#/components/schemas/StreamProofsFilterProtocolUpdateInitializations'
          ProtocolUpdateExecution: '#/components/schemas/StreamProofsFilterProtocolUpdateExecution'
        propertyName: type
      example:
        type: Any
      properties:
        type:
          $ref: '#/components/schemas/StreamProofsFilterType'
      required:
      - type
    StreamProofsFilterAny:
      allOf:
      - $ref: '#/components/schemas/StreamProofsFilter'
      - properties:
          from_state_version:
            $ref: '#/components/schemas/StateVersion'
    StreamProofsFilterNewEpochs:
      allOf:
      - $ref: '#/components/schemas/StreamProofsFilter'
      - properties:
          from_epoch:
            description: "The first proof to be returned should be the proof starting\
              \ this epoch. If empty, it starts from the first epoch proof after genesis.\
              \ The network status endpoint can be used to find the current epoch."
            format: int64
            maximum: 10000000000
            minimum: 0
            type: integer
    StreamProofsFilterProtocolUpdateInitializations:
      allOf:
      - $ref: '#/components/schemas/StreamProofsFilter'
      - properties:
          from_state_version:
            $ref: '#/components/schemas/StateVersion'
    StreamProofsFilterProtocolUpdateExecution:
      allOf:
      - $ref: '#/components/schemas/StreamProofsFilter'
      - properties:
          protocol_version:
            description: |
              The protocol version name to filter to.
            type: string
          from_state_version:
            $ref: '#/components/schemas/StateVersion'
    StreamProofsResponse:
      example:
        continuation_token: continuation_token
        page:
        - origin:
            type: Genesis
          ledger_header:
            consensus_parent_round_timestamp_ms: 59621339166831
            next_epoch:
              significant_protocol_update_readiness:
              - signalled_stake: signalled_stake
                readiness_signal_name: readiness_signal_name
              - signalled_stake: signalled_stake
                readiness_signal_name: readiness_signal_name
              validators:
              - stake: stake
                address: address
                key:
                  key_hex: key_hex
                  key_type: EcdsaSecp256k1
              - stake: stake
                address: address
                key:
                  key_hex: key_hex
                  key_type: EcdsaSecp256k1
              epoch: 2027123023
            round: 6027456183
            state_version: 14658129805030
            hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
            epoch: 800828190
            next_protocol_version: next_protocol_version
            proposer_timestamp_ms: 56373766566333
        - origin:
            type: Genesis
          ledger_header:
            consensus_parent_round_timestamp_ms: 59621339166831
            next_epoch:
              significant_protocol_update_readiness:
              - signalled_stake: signalled_stake
                readiness_signal_name: readiness_signal_name
              - signalled_stake: signalled_stake
                readiness_signal_name: readiness_signal_name
              validators:
              - stake: stake
                address: address
                key:
                  key_hex: key_hex
                  key_type: EcdsaSecp256k1
              - stake: stake
                address: address
                key:
                  key_hex: key_hex
                  key_type: EcdsaSecp256k1
              epoch: 2027123023
            round: 6027456183
            state_version: 14658129805030
            hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
            epoch: 800828190
            next_protocol_version: next_protocol_version
            proposer_timestamp_ms: 56373766566333
      properties:
        page:
          description: A page of ledger proofs stored by this node.
          items:
            $ref: '#/components/schemas/LedgerProof'
          type: array
        continuation_token:
          description: |
            A continuation token is returned if and only if there are further non-empty pages of items currently available.
            The token can be provided in a following request to fetch the next page of results.
            The filter and sort should not be changed when re-using the continuation token.
          type: string
      required:
      - page
    StreamProofsErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          details:
            $ref: '#/components/schemas/StreamProofsErrorDetails'
      example:
        trace_id: trace_id
        code: 2
        error_type: Basic
        details:
          type: RequestedStateVersionOutOfBounds
        message: message
    StreamProofsErrorDetailsType:
      enum:
      - RequestedStateVersionOutOfBounds
      - RequestedEpochOutOfBounds
      type: string
    StreamProofsErrorDetails:
      discriminator:
        mapping:
          RequestedStateVersionOutOfBounds: '#/components/schemas/StreamProofsErrorDetailsRequestedStateVersionOutOfBounds'
          RequestedEpochOutOfBounds: '#/components/schemas/StreamProofsErrorDetailsRequestedEpochOutOfBounds'
        propertyName: type
      example:
        type: RequestedStateVersionOutOfBounds
      properties:
        type:
          $ref: '#/components/schemas/StreamProofsErrorDetailsType'
      required:
      - type
    StreamProofsErrorDetailsRequestedStateVersionOutOfBounds:
      allOf:
      - $ref: '#/components/schemas/StreamProofsErrorDetails'
      - properties:
          max_ledger_state_version:
            $ref: '#/components/schemas/StateVersion'
        required:
        - max_ledger_state_version
    StreamProofsErrorDetailsRequestedEpochOutOfBounds:
      allOf:
      - $ref: '#/components/schemas/StreamProofsErrorDetails'
      - properties:
          max_ledger_epoch:
            description: |
              The maximum completed epoch committed to this node's ledger.
              *Note on the bounds:* the requested `from_epoch` cannot be greater than
              `max_ledger_epoch + 1`. Any greater requested value triggers this error.
            format: int64
            maximum: 10000000000
            minimum: 0
            type: integer
        required:
        - max_ledger_epoch
    EpochEndLedgerProof:
      properties:
        end_of_epoch:
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        ledger_proof:
          $ref: '#/components/schemas/LedgerProof'
      required:
      - end_of_epoch
      - ledger_proof
    StreamTransactionsRequest:
      description: |
        A request to retrieve a sublist of committed transactions from the ledger.
      example:
        sbor_format_options:
          programmatic_json: true
          raw: true
        transaction_format_options:
          blobs: true
          raw_notarized_transaction: true
          balance_changes: true
          manifest: true
          raw_system_transaction: true
          message: true
          raw_ledger_transaction: true
        limit: 6
        include_proofs: true
        from_state_version: 8008281904611
        substate_format_options:
          typed: true
          previous: true
          raw: true
          hash: true
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        from_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        limit:
          description: The maximum number of transactions that will be returned.
          type: integer
        sbor_format_options:
          $ref: '#/components/schemas/SborFormatOptions'
        transaction_format_options:
          $ref: '#/components/schemas/TransactionFormatOptions'
        substate_format_options:
          $ref: '#/components/schemas/SubstateFormatOptions'
        include_proofs:
          description: Whether to include LedgerProofs (default false)
          type: boolean
      required:
      - from_state_version
      - limit
      - network
    StreamTransactionsResponse:
      example:
        previous_state_identifiers:
          state_tree_hash: state_tree_hash
          state_version: null
          transaction_tree_hash: transaction_tree_hash
          receipt_tree_hash: receipt_tree_hash
        max_ledger_state_version: 14658129805030
        proofs:
        - origin:
            type: Genesis
          ledger_header:
            consensus_parent_round_timestamp_ms: 59621339166831
            next_epoch:
              significant_protocol_update_readiness:
              - signalled_stake: signalled_stake
                readiness_signal_name: readiness_signal_name
              - signalled_stake: signalled_stake
                readiness_signal_name: readiness_signal_name
              validators:
              - stake: stake
                address: address
                key:
                  key_hex: key_hex
                  key_type: EcdsaSecp256k1
              - stake: stake
                address: address
                key:
                  key_hex: key_hex
                  key_type: EcdsaSecp256k1
              epoch: 2027123023
            round: 6027456183
            state_version: 14658129805030
            hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
            epoch: 800828190
            next_protocol_version: next_protocol_version
            proposer_timestamp_ms: 56373766566333
        - origin:
            type: Genesis
          ledger_header:
            consensus_parent_round_timestamp_ms: 59621339166831
            next_epoch:
              significant_protocol_update_readiness:
              - signalled_stake: signalled_stake
                readiness_signal_name: readiness_signal_name
              - signalled_stake: signalled_stake
                readiness_signal_name: readiness_signal_name
              validators:
              - stake: stake
                address: address
                key:
                  key_hex: key_hex
                  key_type: EcdsaSecp256k1
              - stake: stake
                address: address
                key:
                  key_hex: key_hex
                  key_type: EcdsaSecp256k1
              epoch: 2027123023
            round: 6027456183
            state_version: 14658129805030
            hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
            epoch: 800828190
            next_protocol_version: next_protocol_version
            proposer_timestamp_ms: 56373766566333
        count: 6027
        from_state_version: 8008281904611
        transactions:
        - ledger_transaction:
            payload_hex: payload_hex
            type: Genesis
          balance_changes:
            fungible_entity_balance_changes:
            - entity_address: entity_address
              non_fee_balance_changes:
              - balance_change: balance_change
                resource_address: resource_address
              - balance_change: balance_change
                resource_address: resource_address
              fee_balance_change:
                balance_change: balance_change
                resource_address: resource_address
              fee_balance_changes:
              - balance_change: balance_change
                type: FeePayment
                resource_address: resource_address
              - balance_change: balance_change
                type: FeePayment
                resource_address: resource_address
            - entity_address: entity_address
              non_fee_balance_changes:
              - balance_change: balance_change
                resource_address: resource_address
              - balance_change: balance_change
                resource_address: resource_address
              fee_balance_change:
                balance_change: balance_change
                resource_address: resource_address
              fee_balance_changes:
              - balance_change: balance_change
                type: FeePayment
                resource_address: resource_address
              - balance_change: balance_change
                type: FeePayment
                resource_address: resource_address
            non_fungible_entity_balance_changes:
            - removed:
              - null
              - null
              added:
              - null
              - null
              entity_address: entity_address
              resource_address: resource_address
            - removed:
              - null
              - null
              added:
              - null
              - null
              entity_address: entity_address
              resource_address: resource_address
          resultant_state_identifiers:
            state_tree_hash: state_tree_hash
            state_version: null
            transaction_tree_hash: transaction_tree_hash
            receipt_tree_hash: receipt_tree_hash
          receipt:
            output:
            - programmatic_json: ""
              hex: hex
            - programmatic_json: ""
              hex: hex
            error_message: error_message
            fee_summary:
              xrd_total_storage_cost: xrd_total_storage_cost
              xrd_total_execution_cost: xrd_total_execution_cost
              execution_cost_units_consumed: 343953088
              xrd_total_finalization_cost: xrd_total_finalization_cost
              finalization_cost_units_consumed: 2588772717
              xrd_total_royalty_cost: xrd_total_royalty_cost
              xrd_total_tipping_cost: xrd_total_tipping_cost
            next_epoch:
              significant_protocol_update_readiness:
              - signalled_stake: signalled_stake
                readiness_signal_name: readiness_signal_name
              - signalled_stake: signalled_stake
                readiness_signal_name: readiness_signal_name
              validators:
              - stake: stake
                address: address
                key:
                  key_hex: key_hex
                  key_type: EcdsaSecp256k1
              - stake: stake
                address: address
                key:
                  key_hex: key_hex
                  key_type: EcdsaSecp256k1
              epoch: 2027123023
            fee_destination:
              to_burn: to_burn
              to_validator_set: to_validator_set
              to_proposer: to_proposer
              to_royalty_recipients:
              - royalty_recipient:
                  entity_type: GlobalPackage
                  entity_address: entity_address
                  is_global: true
                xrd_amount: xrd_amount
              - royalty_recipient:
                  entity_type: GlobalPackage
                  entity_address: entity_address
                  is_global: true
                xrd_amount: xrd_amount
            costing_parameters:
              finalization_cost_unit_price: finalization_cost_unit_price
              execution_cost_unit_loan: 2560717018
              finalization_cost_unit_limit: 2421234836
              execution_cost_unit_price: execution_cost_unit_price
              xrd_storage_price: xrd_storage_price
              xrd_usd_price: xrd_usd_price
              execution_cost_unit_limit: 629561881
              xrd_archive_storage_price: xrd_archive_storage_price
              tip_percentage: 15087
              tip_proportion: tip_proportion
            state_updates:
              deleted_substates:
              - system_structure:
                  type: SystemField
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id:
                  substate_type: BootLoaderModuleFieldSystemBoot
                  substate_key:
                    key_type: Field
                    db_sort_key_hex: db_sort_key_hex
                  entity_type: null
                  partition_kind: null
                  partition_number: 237
                  entity_address: entity_address
                  entity_module: null
              - system_structure:
                  type: SystemField
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id:
                  substate_type: BootLoaderModuleFieldSystemBoot
                  substate_key:
                    key_type: Field
                    db_sort_key_hex: db_sort_key_hex
                  entity_type: null
                  partition_kind: null
                  partition_number: 237
                  entity_address: entity_address
                  entity_module: null
              deleted_partitions:
              - entity_type: null
                partition_kind: Field
                partition_number: 180
                entity_address: entity_address
                entity_module: TypeInfo
              - entity_type: null
                partition_kind: Field
                partition_number: 180
                entity_address: entity_address
                entity_module: TypeInfo
              created_substates:
              - system_structure:
                  type: SystemField
                substate_id:
                  substate_type: BootLoaderModuleFieldSystemBoot
                  substate_key:
                    key_type: Field
                    db_sort_key_hex: db_sort_key_hex
                  entity_type: null
                  partition_kind: null
                  partition_number: 237
                  entity_address: entity_address
                  entity_module: null
                value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              - system_structure:
                  type: SystemField
                substate_id:
                  substate_type: BootLoaderModuleFieldSystemBoot
                  substate_key:
                    key_type: Field
                    db_sort_key_hex: db_sort_key_hex
                  entity_type: null
                  partition_kind: null
                  partition_number: 237
                  entity_address: entity_address
                  entity_module: null
                value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              updated_substates:
              - system_structure:
                  type: SystemField
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id:
                  substate_type: BootLoaderModuleFieldSystemBoot
                  substate_key:
                    key_type: Field
                    db_sort_key_hex: db_sort_key_hex
                  entity_type: null
                  partition_kind: null
                  partition_number: 237
                  entity_address: entity_address
                  entity_module: null
                new_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              - system_structure:
                  type: SystemField
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id:
                  substate_type: BootLoaderModuleFieldSystemBoot
                  substate_key:
                    key_type: Field
                    db_sort_key_hex: db_sort_key_hex
                  entity_type: null
                  partition_kind: null
                  partition_number: 237
                  entity_address: entity_address
                  entity_module: null
                new_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              new_global_entities:
              - entity_type: GlobalPackage
                entity_address: entity_address
                is_global: true
              - entity_type: GlobalPackage
                entity_address: entity_address
                is_global: true
            fee_source:
              from_vaults:
              - xrd_amount: xrd_amount
                vault_entity:
                  entity_type: GlobalPackage
                  entity_address: entity_address
                  is_global: true
              - xrd_amount: xrd_amount
                vault_entity:
                  entity_type: GlobalPackage
                  entity_address: entity_address
                  is_global: true
            events:
            - data:
                programmatic_json: ""
                hex: hex
              type:
                name: name
                type_reference:
                  full_type_id:
                    schema_hash: schema_hash
                    entity_address: entity_address
                    local_type_id:
                      as_sbor:
                        programmatic_json: ""
                        hex: hex
                      kind: WellKnown
                      id: 1553093137
                emitter:
                  type: Function
            - data:
                programmatic_json: ""
                hex: hex
              type:
                name: name
                type_reference:
                  full_type_id:
                    schema_hash: schema_hash
                    entity_address: entity_address
                    local_type_id:
                      as_sbor:
                        programmatic_json: ""
                        hex: hex
                      kind: WellKnown
                      id: 1553093137
                emitter:
                  type: Function
            status: Succeeded
          proposer_timestamp_ms: 41456080298839
        - ledger_transaction:
            payload_hex: payload_hex
            type: Genesis
          balance_changes:
            fungible_entity_balance_changes:
            - entity_address: entity_address
              non_fee_balance_changes:
              - balance_change: balance_change
                resource_address: resource_address
              - balance_change: balance_change
                resource_address: resource_address
              fee_balance_change:
                balance_change: balance_change
                resource_address: resource_address
              fee_balance_changes:
              - balance_change: balance_change
                type: FeePayment
                resource_address: resource_address
              - balance_change: balance_change
                type: FeePayment
                resource_address: resource_address
            - entity_address: entity_address
              non_fee_balance_changes:
              - balance_change: balance_change
                resource_address: resource_address
              - balance_change: balance_change
                resource_address: resource_address
              fee_balance_change:
                balance_change: balance_change
                resource_address: resource_address
              fee_balance_changes:
              - balance_change: balance_change
                type: FeePayment
                resource_address: resource_address
              - balance_change: balance_change
                type: FeePayment
                resource_address: resource_address
            non_fungible_entity_balance_changes:
            - removed:
              - null
              - null
              added:
              - null
              - null
              entity_address: entity_address
              resource_address: resource_address
            - removed:
              - null
              - null
              added:
              - null
              - null
              entity_address: entity_address
              resource_address: resource_address
          resultant_state_identifiers:
            state_tree_hash: state_tree_hash
            state_version: null
            transaction_tree_hash: transaction_tree_hash
            receipt_tree_hash: receipt_tree_hash
          receipt:
            output:
            - programmatic_json: ""
              hex: hex
            - programmatic_json: ""
              hex: hex
            error_message: error_message
            fee_summary:
              xrd_total_storage_cost: xrd_total_storage_cost
              xrd_total_execution_cost: xrd_total_execution_cost
              execution_cost_units_consumed: 343953088
              xrd_total_finalization_cost: xrd_total_finalization_cost
              finalization_cost_units_consumed: 2588772717
              xrd_total_royalty_cost: xrd_total_royalty_cost
              xrd_total_tipping_cost: xrd_total_tipping_cost
            next_epoch:
              significant_protocol_update_readiness:
              - signalled_stake: signalled_stake
                readiness_signal_name: readiness_signal_name
              - signalled_stake: signalled_stake
                readiness_signal_name: readiness_signal_name
              validators:
              - stake: stake
                address: address
                key:
                  key_hex: key_hex
                  key_type: EcdsaSecp256k1
              - stake: stake
                address: address
                key:
                  key_hex: key_hex
                  key_type: EcdsaSecp256k1
              epoch: 2027123023
            fee_destination:
              to_burn: to_burn
              to_validator_set: to_validator_set
              to_proposer: to_proposer
              to_royalty_recipients:
              - royalty_recipient:
                  entity_type: GlobalPackage
                  entity_address: entity_address
                  is_global: true
                xrd_amount: xrd_amount
              - royalty_recipient:
                  entity_type: GlobalPackage
                  entity_address: entity_address
                  is_global: true
                xrd_amount: xrd_amount
            costing_parameters:
              finalization_cost_unit_price: finalization_cost_unit_price
              execution_cost_unit_loan: 2560717018
              finalization_cost_unit_limit: 2421234836
              execution_cost_unit_price: execution_cost_unit_price
              xrd_storage_price: xrd_storage_price
              xrd_usd_price: xrd_usd_price
              execution_cost_unit_limit: 629561881
              xrd_archive_storage_price: xrd_archive_storage_price
              tip_percentage: 15087
              tip_proportion: tip_proportion
            state_updates:
              deleted_substates:
              - system_structure:
                  type: SystemField
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id:
                  substate_type: BootLoaderModuleFieldSystemBoot
                  substate_key:
                    key_type: Field
                    db_sort_key_hex: db_sort_key_hex
                  entity_type: null
                  partition_kind: null
                  partition_number: 237
                  entity_address: entity_address
                  entity_module: null
              - system_structure:
                  type: SystemField
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id:
                  substate_type: BootLoaderModuleFieldSystemBoot
                  substate_key:
                    key_type: Field
                    db_sort_key_hex: db_sort_key_hex
                  entity_type: null
                  partition_kind: null
                  partition_number: 237
                  entity_address: entity_address
                  entity_module: null
              deleted_partitions:
              - entity_type: null
                partition_kind: Field
                partition_number: 180
                entity_address: entity_address
                entity_module: TypeInfo
              - entity_type: null
                partition_kind: Field
                partition_number: 180
                entity_address: entity_address
                entity_module: TypeInfo
              created_substates:
              - system_structure:
                  type: SystemField
                substate_id:
                  substate_type: BootLoaderModuleFieldSystemBoot
                  substate_key:
                    key_type: Field
                    db_sort_key_hex: db_sort_key_hex
                  entity_type: null
                  partition_kind: null
                  partition_number: 237
                  entity_address: entity_address
                  entity_module: null
                value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              - system_structure:
                  type: SystemField
                substate_id:
                  substate_type: BootLoaderModuleFieldSystemBoot
                  substate_key:
                    key_type: Field
                    db_sort_key_hex: db_sort_key_hex
                  entity_type: null
                  partition_kind: null
                  partition_number: 237
                  entity_address: entity_address
                  entity_module: null
                value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              updated_substates:
              - system_structure:
                  type: SystemField
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id:
                  substate_type: BootLoaderModuleFieldSystemBoot
                  substate_key:
                    key_type: Field
                    db_sort_key_hex: db_sort_key_hex
                  entity_type: null
                  partition_kind: null
                  partition_number: 237
                  entity_address: entity_address
                  entity_module: null
                new_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              - system_structure:
                  type: SystemField
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id:
                  substate_type: BootLoaderModuleFieldSystemBoot
                  substate_key:
                    key_type: Field
                    db_sort_key_hex: db_sort_key_hex
                  entity_type: null
                  partition_kind: null
                  partition_number: 237
                  entity_address: entity_address
                  entity_module: null
                new_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              new_global_entities:
              - entity_type: GlobalPackage
                entity_address: entity_address
                is_global: true
              - entity_type: GlobalPackage
                entity_address: entity_address
                is_global: true
            fee_source:
              from_vaults:
              - xrd_amount: xrd_amount
                vault_entity:
                  entity_type: GlobalPackage
                  entity_address: entity_address
                  is_global: true
              - xrd_amount: xrd_amount
                vault_entity:
                  entity_type: GlobalPackage
                  entity_address: entity_address
                  is_global: true
            events:
            - data:
                programmatic_json: ""
                hex: hex
              type:
                name: name
                type_reference:
                  full_type_id:
                    schema_hash: schema_hash
                    entity_address: entity_address
                    local_type_id:
                      as_sbor:
                        programmatic_json: ""
                        hex: hex
                      kind: WellKnown
                      id: 1553093137
                emitter:
                  type: Function
            - data:
                programmatic_json: ""
                hex: hex
              type:
                name: name
                type_reference:
                  full_type_id:
                    schema_hash: schema_hash
                    entity_address: entity_address
                    local_type_id:
                      as_sbor:
                        programmatic_json: ""
                        hex: hex
                      kind: WellKnown
                      id: 1553093137
                emitter:
                  type: Function
            status: Succeeded
          proposer_timestamp_ms: 41456080298839
      properties:
        previous_state_identifiers:
          $ref: '#/components/schemas/CommittedStateIdentifier'
        from_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        count:
          description: "An integer between `0` and `10000`, giving the total count\
            \ of transactions in the returned response"
          format: int32
          maximum: 10000
          minimum: 0
          type: integer
        max_ledger_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        transactions:
          description: A committed transactions list starting from the `from_state_version`
            (inclusive).
          items:
            $ref: '#/components/schemas/CommittedTransaction'
          type: array
        proofs:
          description: A ledger proof list starting from `from_state_version` (inclusive)
            stored by this node.
          items:
            $ref: '#/components/schemas/LedgerProof'
          type: array
      required:
      - count
      - from_state_version
      - max_ledger_state_version
      - transactions
    StreamTransactionsErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          details:
            $ref: '#/components/schemas/StreamTransactionsErrorDetails'
      example:
        trace_id: trace_id
        code: 5
        error_type: Basic
        details:
          type: RequestedStateVersionOutOfBounds
        message: message
    StreamTransactionsErrorDetailsType:
      enum:
      - RequestedStateVersionOutOfBounds
      type: string
    StreamTransactionsErrorDetails:
      discriminator:
        mapping:
          RequestedStateVersionOutOfBounds: '#/components/schemas/RequestedStateVersionOutOfBoundsErrorDetails'
        propertyName: type
      example:
        type: RequestedStateVersionOutOfBounds
      properties:
        type:
          $ref: '#/components/schemas/StreamTransactionsErrorDetailsType'
      required:
      - type
    RequestedStateVersionOutOfBoundsErrorDetails:
      allOf:
      - $ref: '#/components/schemas/StreamTransactionsErrorDetails'
      - properties:
          max_ledger_state_version:
            $ref: '#/components/schemas/StateVersion'
        required:
        - max_ledger_state_version
    CommittedTransaction:
      example:
        ledger_transaction:
          payload_hex: payload_hex
          type: Genesis
        balance_changes:
          fungible_entity_balance_changes:
          - entity_address: entity_address
            non_fee_balance_changes:
            - balance_change: balance_change
              resource_address: resource_address
            - balance_change: balance_change
              resource_address: resource_address
            fee_balance_change:
              balance_change: balance_change
              resource_address: resource_address
            fee_balance_changes:
            - balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
            - balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
          - entity_address: entity_address
            non_fee_balance_changes:
            - balance_change: balance_change
              resource_address: resource_address
            - balance_change: balance_change
              resource_address: resource_address
            fee_balance_change:
              balance_change: balance_change
              resource_address: resource_address
            fee_balance_changes:
            - balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
            - balance_change: balance_change
              type: FeePayment
              resource_address: resource_address
          non_fungible_entity_balance_changes:
          - removed:
            - null
            - null
            added:
            - null
            - null
            entity_address: entity_address
            resource_address: resource_address
          - removed:
            - null
            - null
            added:
            - null
            - null
            entity_address: entity_address
            resource_address: resource_address
        resultant_state_identifiers:
          state_tree_hash: state_tree_hash
          state_version: null
          transaction_tree_hash: transaction_tree_hash
          receipt_tree_hash: receipt_tree_hash
        receipt:
          output:
          - programmatic_json: ""
            hex: hex
          - programmatic_json: ""
            hex: hex
          error_message: error_message
          fee_summary:
            xrd_total_storage_cost: xrd_total_storage_cost
            xrd_total_execution_cost: xrd_total_execution_cost
            execution_cost_units_consumed: 343953088
            xrd_total_finalization_cost: xrd_total_finalization_cost
            finalization_cost_units_consumed: 2588772717
            xrd_total_royalty_cost: xrd_total_royalty_cost
            xrd_total_tipping_cost: xrd_total_tipping_cost
          next_epoch:
            significant_protocol_update_readiness:
            - signalled_stake: signalled_stake
              readiness_signal_name: readiness_signal_name
            - signalled_stake: signalled_stake
              readiness_signal_name: readiness_signal_name
            validators:
            - stake: stake
              address: address
              key:
                key_hex: key_hex
                key_type: EcdsaSecp256k1
            - stake: stake
              address: address
              key:
                key_hex: key_hex
                key_type: EcdsaSecp256k1
            epoch: 2027123023
          fee_destination:
            to_burn: to_burn
            to_validator_set: to_validator_set
            to_proposer: to_proposer
            to_royalty_recipients:
            - royalty_recipient:
                entity_type: GlobalPackage
                entity_address: entity_address
                is_global: true
              xrd_amount: xrd_amount
            - royalty_recipient:
                entity_type: GlobalPackage
                entity_address: entity_address
                is_global: true
              xrd_amount: xrd_amount
          costing_parameters:
            finalization_cost_unit_price: finalization_cost_unit_price
            execution_cost_unit_loan: 2560717018
            finalization_cost_unit_limit: 2421234836
            execution_cost_unit_price: execution_cost_unit_price
            xrd_storage_price: xrd_storage_price
            xrd_usd_price: xrd_usd_price
            execution_cost_unit_limit: 629561881
            xrd_archive_storage_price: xrd_archive_storage_price
            tip_percentage: 15087
            tip_proportion: tip_proportion
          state_updates:
            deleted_substates:
            - system_structure:
                type: SystemField
              previous_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
              substate_id:
                substate_type: BootLoaderModuleFieldSystemBoot
                substate_key:
                  key_type: Field
                  db_sort_key_hex: db_sort_key_hex
                entity_type: null
                partition_kind: null
                partition_number: 237
                entity_address: entity_address
                entity_module: null
            - system_structure:
                type: SystemField
              previous_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
              substate_id:
                substate_type: BootLoaderModuleFieldSystemBoot
                substate_key:
                  key_type: Field
                  db_sort_key_hex: db_sort_key_hex
                entity_type: null
                partition_kind: null
                partition_number: 237
                entity_address: entity_address
                entity_module: null
            deleted_partitions:
            - entity_type: null
              partition_kind: Field
              partition_number: 180
              entity_address: entity_address
              entity_module: TypeInfo
            - entity_type: null
              partition_kind: Field
              partition_number: 180
              entity_address: entity_address
              entity_module: TypeInfo
            created_substates:
            - system_structure:
                type: SystemField
              substate_id:
                substate_type: BootLoaderModuleFieldSystemBoot
                substate_key:
                  key_type: Field
                  db_sort_key_hex: db_sort_key_hex
                entity_type: null
                partition_kind: null
                partition_number: 237
                entity_address: entity_address
                entity_module: null
              value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
            - system_structure:
                type: SystemField
              substate_id:
                substate_type: BootLoaderModuleFieldSystemBoot
                substate_key:
                  key_type: Field
                  db_sort_key_hex: db_sort_key_hex
                entity_type: null
                partition_kind: null
                partition_number: 237
                entity_address: entity_address
                entity_module: null
              value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
            updated_substates:
            - system_structure:
                type: SystemField
              previous_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
              substate_id:
                substate_type: BootLoaderModuleFieldSystemBoot
                substate_key:
                  key_type: Field
                  db_sort_key_hex: db_sort_key_hex
                entity_type: null
                partition_kind: null
                partition_number: 237
                entity_address: entity_address
                entity_module: null
              new_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
            - system_structure:
                type: SystemField
              previous_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
              substate_id:
                substate_type: BootLoaderModuleFieldSystemBoot
                substate_key:
                  key_type: Field
                  db_sort_key_hex: db_sort_key_hex
                entity_type: null
                partition_kind: null
                partition_number: 237
                entity_address: entity_address
                entity_module: null
              new_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
            new_global_entities:
            - entity_type: GlobalPackage
              entity_address: entity_address
              is_global: true
            - entity_type: GlobalPackage
              entity_address: entity_address
              is_global: true
          fee_source:
            from_vaults:
            - xrd_amount: xrd_amount
              vault_entity:
                entity_type: GlobalPackage
                entity_address: entity_address
                is_global: true
            - xrd_amount: xrd_amount
              vault_entity:
                entity_type: GlobalPackage
                entity_address: entity_address
                is_global: true
          events:
          - data:
              programmatic_json: ""
              hex: hex
            type:
              name: name
              type_reference:
                full_type_id:
                  schema_hash: schema_hash
                  entity_address: entity_address
                  local_type_id:
                    as_sbor:
                      programmatic_json: ""
                      hex: hex
                    kind: WellKnown
                    id: 1553093137
              emitter:
                type: Function
          - data:
              programmatic_json: ""
              hex: hex
            type:
              name: name
              type_reference:
                full_type_id:
                  schema_hash: schema_hash
                  entity_address: entity_address
                  local_type_id:
                    as_sbor:
                      programmatic_json: ""
                      hex: hex
                    kind: WellKnown
                    id: 1553093137
              emitter:
                type: Function
          status: Succeeded
        proposer_timestamp_ms: 41456080298839
      properties:
        resultant_state_identifiers:
          $ref: '#/components/schemas/CommittedStateIdentifier'
        ledger_transaction:
          $ref: '#/components/schemas/LedgerTransaction'
        receipt:
          $ref: '#/components/schemas/TransactionReceipt'
        balance_changes:
          $ref: '#/components/schemas/CommittedTransactionBalanceChanges'
        proposer_timestamp_ms:
          description: "An integer between `0` and `10^14`, marking the proposer timestamp\
            \ in ms."
          format: int64
          maximum: 100000000000000
          minimum: 0
          type: integer
      required:
      - ledger_transaction
      - proposer_timestamp_ms
      - receipt
      - resultant_state_identifiers
    CommittedTransactionBalanceChanges:
      example:
        fungible_entity_balance_changes:
        - entity_address: entity_address
          non_fee_balance_changes:
          - balance_change: balance_change
            resource_address: resource_address
          - balance_change: balance_change
            resource_address: resource_address
          fee_balance_change:
            balance_change: balance_change
            resource_address: resource_address
          fee_balance_changes:
          - balance_change: balance_change
            type: FeePayment
            resource_address: resource_address
          - balance_change: balance_change
            type: FeePayment
            resource_address: resource_address
        - entity_address: entity_address
          non_fee_balance_changes:
          - balance_change: balance_change
            resource_address: resource_address
          - balance_change: balance_change
            resource_address: resource_address
          fee_balance_change:
            balance_change: balance_change
            resource_address: resource_address
          fee_balance_changes:
          - balance_change: balance_change
            type: FeePayment
            resource_address: resource_address
          - balance_change: balance_change
            type: FeePayment
            resource_address: resource_address
        non_fungible_entity_balance_changes:
        - removed:
          - null
          - null
          added:
          - null
          - null
          entity_address: entity_address
          resource_address: resource_address
        - removed:
          - null
          - null
          added:
          - null
          - null
          entity_address: entity_address
          resource_address: resource_address
      properties:
        fungible_entity_balance_changes:
          description: |
            A list of all fungible balance updates which occurred in this transaction, aggregated by the global entity (such as account)
            which owns the vaults which were updated.
          items:
            $ref: '#/components/schemas/LtsEntityFungibleBalanceChanges'
          type: array
        non_fungible_entity_balance_changes:
          description: |
            Non fungible changes per entity and resource
          items:
            $ref: '#/components/schemas/LtsEntityNonFungibleBalanceChanges'
          type: array
      required:
      - fungible_entity_balance_changes
      - non_fungible_entity_balance_changes
    LedgerProofOriginType:
      enum:
      - Genesis
      - Consensus
      - ProtocolUpdate
      type: string
    LedgerProofOrigin:
      discriminator:
        mapping:
          Genesis: '#/components/schemas/GenesisLedgerProofOrigin'
          Consensus: '#/components/schemas/ConsensusLedgerProofOrigin'
          ProtocolUpdate: '#/components/schemas/ProtocolUpdateLedgerProofOrigin'
        propertyName: type
      example:
        type: Genesis
      properties:
        type:
          $ref: '#/components/schemas/LedgerProofOriginType'
      required:
      - type
    GenesisLedgerProofOrigin:
      allOf:
      - $ref: '#/components/schemas/LedgerProofOrigin'
      - description: |
          Represents a proof from the execution of the babylon genesis protocol update, which starts
          the babylon-node ledger.

          Behind-the-scenes, this is now the same as a `ProtocolUpdateLedgerProofOrigin`,
          but is kept separate for backwards-compatibility.

          NOTE: Some of these values may be placeholder values on nodes which haven't resynced since
          Cuttlefish. In particular, the following values might be invalid on such nodes:

          * `batch_group_idx` (placeholder of 0)
          * `batch_group_name` (placeholder of "")
          * `batch_idx` (placeholder of 0)
          * `batch_name` (placeholder of "")
          * `is_end_of_update` (placeholder of false)
        properties:
          protocol_version_name:
            type: string
          genesis_opaque_hash:
            type: string
          batch_group_idx:
            format: int64
            type: integer
          batch_group_name:
            type: string
          batch_idx:
            format: int64
            type: integer
          batch_name:
            type: string
          is_end_of_update:
            type: boolean
        required:
        - batch_group_idx
        - batch_group_name
        - batch_idx
        - batch_name
        - genesis_opaque_hash
        - is_end_of_update
        - protocol_version_name
    ConsensusLedgerProofOrigin:
      allOf:
      - $ref: '#/components/schemas/LedgerProofOrigin'
      - description: |
          Represents a proof from the execution of a consensus round.
        properties:
          opaque_hash:
            $ref: '#/components/schemas/OpaqueHash'
          timestamped_signatures:
            items:
              $ref: '#/components/schemas/TimestampedValidatorSignature'
            type: array
        required:
        - opaque_hash
        - timestamped_signatures
    ProtocolUpdateLedgerProofOrigin:
      allOf:
      - $ref: '#/components/schemas/LedgerProofOrigin'
      - description: |
          Represents a proof from the execution of a non-genesis protocol update.
          The execution of a protocol update is organised into batch groups, and
          then these batch groups are organised into batches, with each batch committed
          atomically.

          NOTE: Some of these values may be placeholder values for protocol updates pre-Cuttlefish
          on nodes which haven't resynced since Cuttlefish. In particular, the following values might be
          invalid on such nodes:

          * `config_hash` (placeholder of all zeros)
          * `batch_group_idx` (placeholder of 0)
          * `batch_group_name` (placeholder of "")
          * `batch_idx` (placeholder of 0)
          * `batch_name` (placeholder of "")
          * `is_end_of_update` (placeholder of false)
        properties:
          protocol_version_name:
            type: string
          config_hash:
            type: string
          batch_group_idx:
            format: int64
            type: integer
          batch_group_name:
            type: string
          batch_idx:
            format: int64
            type: integer
          batch_name:
            type: string
          is_end_of_update:
            type: boolean
        required:
        - batch_group_idx
        - batch_group_name
        - batch_idx
        - batch_name
        - config_hash
        - is_end_of_update
        - protocol_version_name
    LedgerProof:
      example:
        origin:
          type: Genesis
        ledger_header:
          consensus_parent_round_timestamp_ms: 59621339166831
          next_epoch:
            significant_protocol_update_readiness:
            - signalled_stake: signalled_stake
              readiness_signal_name: readiness_signal_name
            - signalled_stake: signalled_stake
              readiness_signal_name: readiness_signal_name
            validators:
            - stake: stake
              address: address
              key:
                key_hex: key_hex
                key_type: EcdsaSecp256k1
            - stake: stake
              address: address
              key:
                key_hex: key_hex
                key_type: EcdsaSecp256k1
            epoch: 2027123023
          round: 6027456183
          state_version: 14658129805030
          hashes:
            state_tree_hash: state_tree_hash
            transaction_tree_hash: transaction_tree_hash
            receipt_tree_hash: receipt_tree_hash
          epoch: 800828190
          next_protocol_version: next_protocol_version
          proposer_timestamp_ms: 56373766566333
      properties:
        ledger_header:
          $ref: '#/components/schemas/LedgerHeader'
        origin:
          $ref: '#/components/schemas/LedgerProofOrigin'
      required:
      - ledger_header
      - origin
    LedgerHeader:
      example:
        consensus_parent_round_timestamp_ms: 59621339166831
        next_epoch:
          significant_protocol_update_readiness:
          - signalled_stake: signalled_stake
            readiness_signal_name: readiness_signal_name
          - signalled_stake: signalled_stake
            readiness_signal_name: readiness_signal_name
          validators:
          - stake: stake
            address: address
            key:
              key_hex: key_hex
              key_type: EcdsaSecp256k1
          - stake: stake
            address: address
            key:
              key_hex: key_hex
              key_type: EcdsaSecp256k1
          epoch: 2027123023
        round: 6027456183
        state_version: 14658129805030
        hashes:
          state_tree_hash: state_tree_hash
          transaction_tree_hash: transaction_tree_hash
          receipt_tree_hash: receipt_tree_hash
        epoch: 800828190
        next_protocol_version: next_protocol_version
        proposer_timestamp_ms: 56373766566333
      properties:
        epoch:
          description: "An integer between `0` and `10^10`, marking the epoch."
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        round:
          description: "An integer between `0` and `10^10`, marking the current round\
            \ in an epoch"
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        hashes:
          $ref: '#/components/schemas/LedgerHashes'
        consensus_parent_round_timestamp_ms:
          description: "An integer between `0` and `10^14`, marking the consensus\
            \ parent round timestamp in ms."
          format: int64
          maximum: 100000000000000
          minimum: 0
          type: integer
        proposer_timestamp_ms:
          description: "An integer between `0` and `10^14`, marking the proposer timestamp\
            \ in ms."
          format: int64
          maximum: 100000000000000
          minimum: 0
          type: integer
        next_epoch:
          $ref: '#/components/schemas/NextEpoch'
        next_protocol_version:
          description: "If present, indicates that this proof triggers the enactment\
            \ of the given protocol version."
          type: string
      required:
      - consensus_parent_round_timestamp_ms
      - epoch
      - hashes
      - proposer_timestamp_ms
      - round
      - state_version
    TimestampedValidatorSignature:
      properties:
        validator_key:
          $ref: '#/components/schemas/EcdsaSecp256k1PublicKey'
        validator_address:
          description: The Bech32m-encoded human readable version of the component
            address
          type: string
        timestamp_ms:
          description: "An integer between `0` and `10^14`, marking the unix timestamp\
            \ in ms."
          format: int64
          maximum: 100000000000000
          minimum: 0
          type: integer
        signature:
          $ref: '#/components/schemas/EcdsaSecp256k1Signature'
      required:
      - signature
      - timestamp_ms
      - validator_address
      - validator_key
    OpaqueHash:
      description: "A hex-encoded 32-byte vertex VoteData hash on the consensus side,\
        \ opaque to ledger."
      maxLength: 64
      minLength: 64
      type: string
    LedgerTransactionType:
      description: The type of the ledger transaction
      enum:
      - Genesis
      - User
      - UserV2
      - RoundUpdate
      - Flash
      type: string
    LedgerTransaction:
      discriminator:
        mapping:
          Genesis: '#/components/schemas/GenesisLedgerTransaction'
          User: '#/components/schemas/UserLedgerTransaction'
          UserV2: '#/components/schemas/UserLedgerTransactionV2'
          RoundUpdate: '#/components/schemas/RoundUpdateLedgerTransaction'
          Flash: '#/components/schemas/FlashLedgerTransaction'
        propertyName: type
      example:
        payload_hex: payload_hex
        type: Genesis
      properties:
        type:
          $ref: '#/components/schemas/LedgerTransactionType'
        payload_hex:
          description: The hex-encoded full ledger transaction payload. Only returned
            if enabled in TransactionFormatOptions on your request.
          type: string
      required:
      - type
    GenesisLedgerTransaction:
      allOf:
      - $ref: '#/components/schemas/LedgerTransaction'
      - properties:
          is_flash:
            description: |
              The first genesis "transaction" flashes state into the database to prepare for the bootstrap transaction.
              Such a transaction does not have an associated `system_transaction`
            type: boolean
          system_transaction:
            $ref: '#/components/schemas/SystemTransaction'
        required:
        - is_flash
    UserLedgerTransaction:
      allOf:
      - $ref: '#/components/schemas/LedgerTransaction'
      - properties:
          notarized_transaction:
            $ref: '#/components/schemas/NotarizedTransaction'
        required:
        - notarized_transaction
    UserLedgerTransactionV2:
      allOf:
      - $ref: '#/components/schemas/LedgerTransaction'
      - properties:
          notarized_transaction:
            $ref: '#/components/schemas/NotarizedTransactionV2'
        required:
        - notarized_transaction
    RoundUpdateLedgerTransaction:
      allOf:
      - $ref: '#/components/schemas/LedgerTransaction'
      - properties:
          round_update_transaction:
            $ref: '#/components/schemas/RoundUpdateTransaction'
        required:
        - round_update_transaction
    FlashLedgerTransaction:
      allOf:
      - $ref: '#/components/schemas/LedgerTransaction'
      - properties:
          name:
            description: Human-readable identifier of the flash transaction.
            type: string
          flashed_state_updates:
            $ref: '#/components/schemas/FlashedStateUpdates'
        required:
        - flashed_state_updates
        - name
    RoundUpdateTransaction:
      properties:
        proposer_timestamp:
          $ref: '#/components/schemas/InstantMs'
        epoch:
          description: |
            An integer between `0` and `10^10`, marking the epoch.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        round_in_epoch:
          description: "An integer between `0` and `10^10`, marking the consensus\
            \ round in the epoch"
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        leader_proposal_history:
          $ref: '#/components/schemas/LeaderProposalHistory'
      required:
      - epoch
      - leader_proposal_history
      - proposer_timestamp
      - round_in_epoch
    FlashedStateUpdates:
      description: Direct state updates performed by a Flash Transaction.
      properties:
        deleted_partitions:
          items:
            $ref: '#/components/schemas/PartitionId'
          type: array
        set_substates:
          items:
            $ref: '#/components/schemas/FlashSetSubstate'
          type: array
        deleted_substates:
          items:
            $ref: '#/components/schemas/SubstateId'
          type: array
      required:
      - deleted_partitions
      - deleted_substates
      - set_substates
    FlashSetSubstate:
      properties:
        substate_id:
          $ref: '#/components/schemas/SubstateId'
        value:
          $ref: '#/components/schemas/SubstateValue'
      required:
      - substate_id
      - value
    LeaderProposalHistory:
      properties:
        gap_round_leaders:
          description: The validators which were leaders of the "gap" rounds (i.e.
            since the previous `RoundUpdateValidatorTransaction` - which means that
            this list will contain exactly `current.round - previous.round - 1` elements).
            The validators on this list should be penalized during emissions at the
            end of the epoch.
          items:
            $ref: '#/components/schemas/ActiveValidatorIndex'
          type: array
        current_leader:
          $ref: '#/components/schemas/ActiveValidatorIndex'
        is_fallback:
          description: "Whether the concluded round was conducted in a \"fallback\"\
            \ mode (i.e. indicating a fault of the current leader). When `true`, the\
            \ `current_leader` should be penalized during emissions in the same way\
            \ as `gap_round_leaders`. When `false`, the `current_leader` is considered\
            \ to have made this round's proposal successfully."
          type: boolean
      required:
      - current_leader
      - gap_round_leaders
      - is_fallback
    ActiveValidatorIndex:
      example:
        index: 20
      properties:
        index:
          description: An index of a validator within a specific active validator
            set (ordered by stake descending). This is the same ordering as used by
            other parts of the API which list active validators.
          format: int32
          maximum: 255
          minimum: 0
          type: integer
      required:
      - index
    SystemTransaction:
      properties:
        payload_hex:
          description: The hex-encoded system transaction payload. Only returned if
            enabled in TransactionFormatOptions on your request.
          type: string
    StateConsensusManagerRequest:
      example:
        include_readiness_signals: true
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        include_readiness_signals:
          description: Whether to include protocol update readiness signals of active
            validator set (default false).
          type: boolean
      required:
      - network
    StateConsensusManagerResponse:
      example:
        current_validator_set:
          substate_type: null
          is_locked: true
        current_proposal_statistic:
          substate_type: null
          is_locked: true
        state:
          substate_type: null
          is_locked: true
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
        config:
          substate_type: null
          is_locked: true
        current_validator_readiness_signals:
        - signalled_protocol_version: signalled_protocol_version
          signalling_validators:
          - index:
              index: 20
            active_stake_proportion: active_stake_proportion
          - index:
              index: 20
            active_stake_proportion: active_stake_proportion
          total_active_stake_proportion: total_active_stake_proportion
        - signalled_protocol_version: signalled_protocol_version
          signalling_validators:
          - index:
              index: 20
            active_stake_proportion: active_stake_proportion
          - index:
              index: 20
            active_stake_proportion: active_stake_proportion
          total_active_stake_proportion: total_active_stake_proportion
        current_time:
          substate_type: null
          is_locked: true
        current_time_rounded_to_minutes:
          substate_type: null
          is_locked: true
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        config:
          $ref: '#/components/schemas/Substate'
        state:
          $ref: '#/components/schemas/Substate'
        current_proposal_statistic:
          $ref: '#/components/schemas/Substate'
        current_validator_set:
          $ref: '#/components/schemas/Substate'
        current_time:
          $ref: '#/components/schemas/Substate'
        current_time_rounded_to_minutes:
          $ref: '#/components/schemas/Substate'
        current_validator_readiness_signals:
          description: |
            Protocol versions signalled by the current validator set.
            Every validator from `current_validator_set` will be referenced by exactly one of the items here.
            Only returned if enabled by `include_readiness_signals` on your request.
          items:
            $ref: '#/components/schemas/ProtocolVersionReadiness'
          type: array
      required:
      - at_ledger_state
      - config
      - current_proposal_statistic
      - current_time
      - current_time_rounded_to_minutes
      - current_validator_set
      - state
    ProtocolVersionReadiness:
      example:
        signalled_protocol_version: signalled_protocol_version
        signalling_validators:
        - index:
            index: 20
          active_stake_proportion: active_stake_proportion
        - index:
            index: 20
          active_stake_proportion: active_stake_proportion
        total_active_stake_proportion: total_active_stake_proportion
      properties:
        signalled_protocol_version:
          description: |
            A name identifying a protocol version. May be absent to denote no readiness signalled by
            the `signalling_validators`.
          type: string
        total_active_stake_proportion:
          description: |
            A sum of `active_stake_proportion` across `signalling_validators` (i.e. an easily-computable convenience field).
            This is a string-encoded fixed-precision decimal to 18 decimal places.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        signalling_validators:
          description: |
            References to some of the current validators (i.e. a subset of `current_validator_set`)
            which have signalled readiness for the `signalled_protocol_version`.
          items:
            $ref: '#/components/schemas/SignallingValidator'
          type: array
      required:
      - signalling_validators
      - total_active_stake_proportion
    SignallingValidator:
      example:
        index:
          index: 20
        active_stake_proportion: active_stake_proportion
      properties:
        index:
          $ref: '#/components/schemas/ActiveValidatorIndex'
        active_stake_proportion:
          description: |
            A proportion (between 0 and 1) of the total active stake of an entire `current_validator_set` (i.e. an easily-computable convenience field).
            This is a string-encoded fixed-precision decimal to 18 decimal places.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - active_stake_proportion
      - index
    StateAccountRequest:
      example:
        account_address: account_address
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        account_address:
          description: The Bech32m-encoded human readable version of the account's
            global address
          type: string
      required:
      - account_address
      - network
    StateAccountResponse:
      example:
        owner_role:
          substate_type: null
          is_locked: true
        vaults:
        - resource_amount:
            resource_type: Fungible
            resource_address: resource_address
          vault_entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
        - resource_amount:
            resource_type: Fungible
            resource_address: resource_address
          vault_entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
        state:
          substate_type: null
          is_locked: true
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
        info:
          substate_type: null
          is_locked: true
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        info:
          $ref: '#/components/schemas/Substate'
        owner_role:
          $ref: '#/components/schemas/Substate'
        state:
          $ref: '#/components/schemas/Substate'
        vaults:
          description: All of the account's vaults
          items:
            $ref: '#/components/schemas/VaultBalance'
          type: array
      required:
      - at_ledger_state
      - info
      - owner_role
      - state
      - vaults
    VaultBalance:
      example:
        resource_amount:
          resource_type: Fungible
          resource_address: resource_address
        vault_entity:
          entity_type: GlobalPackage
          entity_address: entity_address
          is_global: true
      properties:
        vault_entity:
          $ref: '#/components/schemas/EntityReference'
        resource_amount:
          $ref: '#/components/schemas/ResourceAmount'
      required:
      - resource_amount
      - vault_entity
    StateComponentRequest:
      example:
        component_address: component_address
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        component_address:
          description: The Bech32m-encoded human readable version of the component's
            global address
          type: string
      required:
      - component_address
      - network
    StateComponentResponse:
      example:
        royalty_accumulator:
          substate_type: null
          is_locked: true
        owner_role:
          substate_type: null
          is_locked: true
        descendent_nodes:
        - depth: 60
          parent_entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
          parent_partition_number: 20
          parent_substate_key_hex: parent_substate_key_hex
          parent_substate_db_sort_key_hex: parent_substate_db_sort_key_hex
          entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
        - depth: 60
          parent_entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
          parent_partition_number: 20
          parent_substate_key_hex: parent_substate_key_hex
          parent_substate_db_sort_key_hex: parent_substate_db_sort_key_hex
          entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
        vaults:
        - resource_amount:
            resource_type: Fungible
            resource_address: resource_address
          vault_entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
        - resource_amount:
            resource_type: Fungible
            resource_address: resource_address
          vault_entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
        state:
          substate_type: null
          is_locked: true
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
        info:
          substate_type: null
          is_locked: true
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        info:
          $ref: '#/components/schemas/Substate'
        state:
          $ref: '#/components/schemas/Substate'
        royalty_accumulator:
          $ref: '#/components/schemas/Substate'
        owner_role:
          $ref: '#/components/schemas/Substate'
        vaults:
          description: Any vaults owned directly or indirectly by the component
          items:
            $ref: '#/components/schemas/VaultBalance'
          type: array
        descendent_nodes:
          description: Any descendent nodes owned directly or indirectly by the component
          items:
            $ref: '#/components/schemas/StateComponentDescendentNode'
          type: array
      required:
      - at_ledger_state
      - descendent_nodes
      - info
      - owner_role
      - state
      - vaults
    StateComponentDescendentNode:
      example:
        depth: 60
        parent_entity:
          entity_type: GlobalPackage
          entity_address: entity_address
          is_global: true
        parent_partition_number: 20
        parent_substate_key_hex: parent_substate_key_hex
        parent_substate_db_sort_key_hex: parent_substate_db_sort_key_hex
        entity:
          entity_type: GlobalPackage
          entity_address: entity_address
          is_global: true
      properties:
        parent_entity:
          $ref: '#/components/schemas/EntityReference'
        parent_partition_number:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        parent_substate_key_hex:
          description: "The hex-encoded bytes of the substate key, under the entity\
            \ partition"
          type: string
        parent_substate_db_sort_key_hex:
          description: "The hex-encoded bytes of the partially-hashed DB sort key,\
            \ under the given entity partition"
          type: string
        entity:
          $ref: '#/components/schemas/EntityReference'
        depth:
          description: Depth under component
          format: int32
          maximum: 100
          minimum: 0
          type: integer
      required:
      - depth
      - entity
      - parent_entity
      - parent_partition_number
      - parent_substate_db_sort_key_hex
      - parent_substate_key_hex
    StateValidatorRequest:
      example:
        validator_address: validator_address
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        validator_address:
          description: The Bech32m-encoded human readable version of the component
            address
          type: string
      required:
      - network
      - validator_address
    StateValidatorResponse:
      example:
        address: address
        owner_role:
          substate_type: null
          is_locked: true
        descendent_nodes:
        - depth: 60
          parent_entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
          parent_partition_number: 20
          parent_substate_key_hex: parent_substate_key_hex
          parent_substate_db_sort_key_hex: parent_substate_db_sort_key_hex
          entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
        - depth: 60
          parent_entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
          parent_partition_number: 20
          parent_substate_key_hex: parent_substate_key_hex
          parent_substate_db_sort_key_hex: parent_substate_db_sort_key_hex
          entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
        vaults:
        - resource_amount:
            resource_type: Fungible
            resource_address: resource_address
          vault_entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
        - resource_amount:
            resource_type: Fungible
            resource_address: resource_address
          vault_entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
        state:
          substate_type: null
          is_locked: true
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
        protocol_update_readiness_signal:
          substate_type: null
          is_locked: true
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        address:
          description: The Bech32m-encoded human readable version of the component
            address
          type: string
        state:
          $ref: '#/components/schemas/Substate'
        protocol_update_readiness_signal:
          $ref: '#/components/schemas/Substate'
        owner_role:
          $ref: '#/components/schemas/Substate'
        vaults:
          description: Any vaults owned directly or indirectly by the component
          items:
            $ref: '#/components/schemas/VaultBalance'
          type: array
        descendent_nodes:
          description: Any descendent nodes owned directly or indirectly by the component
          items:
            $ref: '#/components/schemas/StateComponentDescendentNode'
          type: array
      required:
      - address
      - at_ledger_state
      - descendent_nodes
      - owner_role
      - protocol_update_readiness_signal
      - state
      - vaults
    StateAccessControllerRequest:
      example:
        controller_address: controller_address
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        controller_address:
          description: The Bech32m-encoded human readable version of the component
            address
          type: string
      required:
      - controller_address
      - network
    StateAccessControllerResponse:
      example:
        owner_role:
          substate_type: null
          is_locked: true
        descendent_nodes:
        - depth: 60
          parent_entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
          parent_partition_number: 20
          parent_substate_key_hex: parent_substate_key_hex
          parent_substate_db_sort_key_hex: parent_substate_db_sort_key_hex
          entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
        - depth: 60
          parent_entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
          parent_partition_number: 20
          parent_substate_key_hex: parent_substate_key_hex
          parent_substate_db_sort_key_hex: parent_substate_db_sort_key_hex
          entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
        vaults:
        - resource_amount:
            resource_type: Fungible
            resource_address: resource_address
          vault_entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
        - resource_amount:
            resource_type: Fungible
            resource_address: resource_address
          vault_entity:
            entity_type: GlobalPackage
            entity_address: entity_address
            is_global: true
        state:
          substate_type: null
          is_locked: true
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        state:
          $ref: '#/components/schemas/Substate'
        owner_role:
          $ref: '#/components/schemas/Substate'
        vaults:
          description: Any vaults owned directly or indirectly by the component
          items:
            $ref: '#/components/schemas/VaultBalance'
          type: array
        descendent_nodes:
          description: Any descendent nodes owned directly or indirectly by the component
          items:
            $ref: '#/components/schemas/StateComponentDescendentNode'
          type: array
      required:
      - at_ledger_state
      - descendent_nodes
      - owner_role
      - state
      - vaults
    StateResourceRequest:
      example:
        resource_address: resource_address
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        resource_address:
          description: The Bech32m-encoded human readable version of the resource's
            global address
          type: string
      required:
      - network
      - resource_address
    StateResourceResponse:
      example:
        manager:
          resource_type: Fungible
        owner_role:
          substate_type: null
          is_locked: true
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        manager:
          $ref: '#/components/schemas/StateResourceManager'
        owner_role:
          $ref: '#/components/schemas/Substate'
      required:
      - at_ledger_state
      - manager
      - owner_role
    StateResourceManager:
      discriminator:
        mapping:
          Fungible: '#/components/schemas/StateFungibleResourceManager'
          NonFungible: '#/components/schemas/StateNonFungibleResourceManager'
        propertyName: resource_type
      example:
        resource_type: Fungible
      properties:
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      required:
      - resource_type
    StateFungibleResourceManager:
      allOf:
      - $ref: '#/components/schemas/StateResourceManager'
      - properties:
          divisibility:
            $ref: '#/components/schemas/Substate'
          total_supply:
            $ref: '#/components/schemas/Substate'
        required:
        - divisibility
    StateNonFungibleResourceManager:
      allOf:
      - $ref: '#/components/schemas/StateResourceManager'
      - properties:
          id_type:
            $ref: '#/components/schemas/Substate'
          total_supply:
            $ref: '#/components/schemas/Substate'
          mutable_fields:
            $ref: '#/components/schemas/Substate'
        required:
        - id_type
        - mutable_fields
    StateNonFungibleRequest:
      example:
        non_fungible_id: non_fungible_id
        resource_address: resource_address
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        resource_address:
          description: The Bech32m-encoded human readable version of the resource's
            global address
          type: string
        non_fungible_id:
          description: |
            The simple string representation of the non-fungible id.
            * For string ids, this is `<the-string-id>`
            * For integer ids, this is `#the-integer-id#`
            * For bytes ids, this is `[the-lower-case-hex-representation]`
            * For RUID ids, this is `{...-...-...-...}` where `...` are each 16 hex characters.
            A given non-fungible resource has a fixed `NonFungibleIdType`, so this representation uniquely identifies this non-fungible
            under the given resource address.
          type: string
      required:
      - network
      - non_fungible_id
      - resource_address
    StateNonFungibleResponse:
      example:
        non_fungible:
          substate_type: null
          is_locked: true
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        non_fungible:
          $ref: '#/components/schemas/Substate'
      required:
      - at_ledger_state
      - non_fungible
    StatePackageRequest:
      example:
        package_address: package_address
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        package_address:
          description: The Bech32m-encoded human readable version of the package's
            global address
          type: string
      required:
      - network
      - package_address
    StatePackageResponse:
      example:
        owner_role:
          substate_type: null
          is_locked: true
        royalty:
          substate_type: null
          is_locked: true
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        owner_role:
          $ref: '#/components/schemas/Substate'
        royalty:
          $ref: '#/components/schemas/Substate'
      required:
      - at_ledger_state
      - owner_role
    NetworkConfigurationResponse_version:
      description: "Different versions regarding the node, network and api."
      example:
        api_version: api_version
        core_version: core_version
      properties:
        core_version:
          type: string
        api_version:
          type: string
      required:
      - api_version
      - core_version
    NetworkConfigurationResponse_well_known_addresses:
      description: |
        Key addresses for this network, as per https://docs.radixdlt.com/docs/well-known-addresses.

        Note that at Cuttlefish, some of these names have been updated elsewhere in the stack,
        but for backwards compatibility, we must use the old names here.

        Notably:
        - `secp256k1_signature_virtual_badge` is now `secp256k1_signature_resource` elsewhere
        - `ed25519_signature_virtual_badge` is now `ed25519_signature_resource` elsewhere
        - `package_of_direct_caller_virtual_badge` is now `package_of_direct_caller_resource` elsewhere
        - `global_caller_virtual_badge` is now `global_caller_resource` elsewhere
        - `system_transaction_badge` is now `system_transaction_resource` elsewhere
      example:
        secp256k1_signature_virtual_badge: secp256k1_signature_virtual_badge
        account_owner_badge: account_owner_badge
        locker_package: locker_package
        access_controller_package: access_controller_package
        resource_package: resource_package
        package_package: package_package
        account_package: account_package
        system_transaction_badge: system_transaction_badge
        global_caller_virtual_badge: global_caller_virtual_badge
        metadata_module_package: metadata_module_package
        role_assignment_module_package: role_assignment_module_package
        transaction_processor_package: transaction_processor_package
        transaction_tracker: transaction_tracker
        faucet: faucet
        ed25519_signature_virtual_badge: ed25519_signature_virtual_badge
        package_owner_badge: package_owner_badge
        consensus_manager: consensus_manager
        consensus_manager_package: consensus_manager_package
        genesis_helper_package: genesis_helper_package
        faucet_package: faucet_package
        xrd: xrd
        validator_owner_badge: validator_owner_badge
        transaction_tracker_package: transaction_tracker_package
        royalty_module_package: royalty_module_package
        pool_package: pool_package
        identity_package: identity_package
        package_of_direct_caller_virtual_badge: package_of_direct_caller_virtual_badge
        test_utils_package: test_utils_package
        genesis_helper: genesis_helper
        identity_owner_badge: identity_owner_badge
      properties:
        xrd:
          type: string
        secp256k1_signature_virtual_badge:
          type: string
        ed25519_signature_virtual_badge:
          type: string
        system_transaction_badge:
          type: string
        package_of_direct_caller_virtual_badge:
          type: string
        global_caller_virtual_badge:
          type: string
        package_owner_badge:
          type: string
        validator_owner_badge:
          type: string
        account_owner_badge:
          type: string
        identity_owner_badge:
          type: string
        package_package:
          type: string
        resource_package:
          type: string
        account_package:
          type: string
        identity_package:
          type: string
        consensus_manager_package:
          type: string
        access_controller_package:
          type: string
        transaction_processor_package:
          type: string
        metadata_module_package:
          type: string
        royalty_module_package:
          type: string
        role_assignment_module_package:
          type: string
        genesis_helper_package:
          type: string
        faucet_package:
          type: string
        pool_package:
          type: string
        transaction_tracker_package:
          type: string
        locker_package:
          type: string
        test_utils_package:
          type: string
        consensus_manager:
          type: string
        genesis_helper:
          type: string
        faucet:
          type: string
        transaction_tracker:
          type: string
      required:
      - access_controller_package
      - account_owner_badge
      - account_package
      - consensus_manager
      - consensus_manager_package
      - ed25519_signature_virtual_badge
      - faucet
      - faucet_package
      - genesis_helper
      - genesis_helper_package
      - global_caller_virtual_badge
      - identity_owner_badge
      - identity_package
      - metadata_module_package
      - package_of_direct_caller_virtual_badge
      - package_owner_badge
      - package_package
      - pool_package
      - resource_package
      - role_assignment_module_package
      - royalty_module_package
      - secp256k1_signature_virtual_badge
      - system_transaction_badge
      - transaction_processor_package
      - transaction_tracker
      - validator_owner_badge
      - xrd
    MempoolTransactionResponse_payloads_inner:
      example:
        hash_bech32m: hash_bech32m
        hex: hex
        error: error
        hash: hash
      properties:
        hash:
          description: |
            The hex-encoded notarized transaction hash for a user transaction.
            This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
          maxLength: 64
          minLength: 64
          type: string
        hash_bech32m:
          description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
          type: string
        hex:
          description: The hex-encoded full notarized transaction payload - returned
            only if found in mempool.
          type: string
        error:
          description: |
            Error message why `hex` field is missing: the transaction was not found in the mempool or the provided hash is invalid.
          type: string
      required:
      - hash
      - hash_bech32m
    ParsedNotarizedTransaction_allOf_validation_error:
      description: |
        If the transaction is known to not be valid, this gives a reason.
        Different levels of validation are performed, dependent on the validation mode.
        Note that, even if validation mode is Static or Full, the transaction may
        still be rejected or fail due to issues at runtime (e.g. if the loan cannot be repaid).
      properties:
        reason:
          description: |
            The error message.
          type: string
        is_permanent:
          description: |
            Whether the error is known to be permanent, or not.
            This relates to whether the transaction would be rejected permanently or temporarily if submitted.
          type: boolean
      required:
      - is_permanent
      - reason
    TransactionPreviewResponse_logs_inner:
      example:
        level: level
        message: message
      properties:
        level:
          type: string
        message:
          type: string
      required:
      - level
      - message
x-tagGroups:
- name: Overview
  tags:
  - SDKs
  - SubAPIs
  - Concepts
  - Construction
- name: Endpoints
  tags:
  - LTS
  - Status
  - Transaction
  - Mempool
  - State
  - Stream

