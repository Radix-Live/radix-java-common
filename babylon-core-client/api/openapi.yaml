openapi: 3.0.3
info:
  description: |
    This API is exposed by the Babylon Radix node to give clients access to the Radix Engine, Mempool and State in the node.

    The default configuration is intended for use by node-runners on a private network, and is not intended to be exposed publicly.
    Very heavy load may impact the node's function. The node exposes a configuration flag which allows disabling certain endpoints
    which may be problematic, but monitoring is advised. This configuration parameter is
    `api.core.flags.enable_unbounded_endpoints` / `RADIXDLT_CORE_API_FLAGS_ENABLE_UNBOUNDED_ENDPOINTS`.

    This API exposes queries against the node's current state (see `/lts/state/` or `/state/`), and streams of transaction history
    (under `/lts/stream/` or `/stream`).

    If you require queries against snapshots of historical ledger state, you may also wish to consider using the
    [Gateway API](https://docs-babylon.radixdlt.com/).

    ## Integration and forward compatibility guarantees

    Integrators (such as exchanges) are recommended to use the `/lts/` endpoints - they have been designed to be clear
    and simple for integrators wishing to create and monitor transactions involving fungible transfers to/from accounts.

    All endpoints under `/lts/` have high guarantees of forward compatibility in future node versions.
    We may add new fields, but existing fields will not be changed. Assuming the integrating code uses a permissive
    JSON parser which ignores unknown fields, any additions will not affect existing code.

    Other endpoints may be changed with new node versions carrying protocol-updates, although any breaking changes
    will be flagged clearly in the corresponding release notes.

    All responses may have additional fields added, so clients are advised to use JSON parsers which ignore unknown
    fields on JSON objects.
  license:
    name: "The Radix License, Version 1.0"
    url: https://www.radixfoundation.org/licenses/license-v1
  title: Radix Core API - Babylon
  version: v1.0.4
  x-logo:
    url: https://docs.radixdlt.com/main/_images/radix-logo-banner.png
    href: https://docs.radixdlt.com
servers:
- url: localhost:3333/core
tags:
- description: |
    The following SDKs are currently available for the Core API:
    - Typescript: [@radixdlt/babylon-core-api-sdk](https://www.npmjs.com/package/@radixdlt/babylon-core-api-sdk)

    For other languages, you can use a HTTP client of your choice and code the JSON models yourself.
    You could also consider using an Open API generator, but unless you have experience with battling the gremlins in Open API generators,
    it may be more trouble than it's worth.
  name: SDKs
  x-displayName: SDKs
  x-traitTag: true
- description: |
    The API is split into 6 sub apis:
    - **Long Term Support** (`/lts/*`) - For long term support/backward compatible endpoints aimed at integrators such as exchanges.
    - **Status** (`/status/*`) - For status and configuration details for the node / engine.
    - **Transaction** (`/transaction/*`) - For transaction construction, preview, submission, and monitoring the status of an individual transaction.
    - **Mempool** (`/mempool/*`) - For information on the contents of the node's mempool.
    - **Current State** (`/state/*`) - For reading the state of entities. At present, we only support reading details from the top of the currently committed ledger.
    - **Stream** (`/stream/*`) - For reading the committed transactions.
  name: SubAPIs
  x-displayName: Sub-APIs
  x-traitTag: true
- description: "Interacting with this API effectively may require knowledge about\
    \ the Radix Babylon Transaction Model and the State Model.\n\nWe share some very\
    \ high-level details below, but please see the [official documentation](http://docs.radixdlt.com)\
    \ for more details on this.\n\n## Transactions\n\nUser transactions are formed\
    \ of a core \"intent\", which is then signed by 0+ signatories, before being notarized.\
    \ The output is called a notarized payload.\nIt is this notarized transaction\
    \ payload which is submitted to the network.\n\nFor most users, this construction\
    \ process will generally happen in their Radix Wallet. If you wish to construct\
    \ transactions programmatically or offline,\nyou will need to integrate the Radix\
    \ Engine Toolkit into your application for construction and finalization.\n\n\
    Once submitted, a transaction payload can end up being either rejected or committed.\
    \ Transactions get rejected if they fail to pass certain criteria at the given\
    \ time.\nA transaction payload can be marked as a:\n- **Permanent Rejection**\
    \ if it is never possible for it to be committed (eg it's statically invalid,\
    \ or only valid up until epoch 100 and it's now epoch 101)\n- **Temporary Rejection**\
    \ if it still may be possible that the transaction payload could be committed\n\
    \nA given intent typically is only part of one submitted notarized payload, but\
    \ it's possible for a notary to notarize and submit multiple payloads for the\
    \ same intent.\nThe Radix Engine ensures that any intent can only be committed\
    \ once.\n\nA committed transaction is either committed with an outcome of \"Success\"\
    \ or \"Failure\":\n- **Committed Failure** will result in fees being paid up until\
    \ the failure point, but all other changes will be discarded.\n- **Committed Success**\
    \ will result in all changes being committed.\n\nOnly committed transactions appear\
    \ on ledger. The status of rejected transactions can be read at submission time\
    \ or from the transaction status endpoint - by virtue of\na rejection cache on\
    \ the node. This cache is limited in size, so rejected statuses may no longer\
    \ be tracked after a period of time.\n\nFor a more robust handling of transaction\
    \ rejections, consider running your own Gateway.\n\n## State Model\n\nThe Radix\
    \ Engine State Model can be thought of as a forest of state sub-trees.\nA state\
    \ sub-tree consists of \"entities\". These entities have an ID, and 0 or more\
    \ \"substates\" at keys underneath them. \nThese substates are typed, and can\
    \ own other entities, forming a tree of ownership.\n\nEach state sub-tree has\
    \ a root entity, and a single Bech32M Global Address, with a human-readable-prefix\
    \ (and prefix byte) matching the root entity type.\n\nAs an example, entities\
    \ include concepts like Components, Packages, Vaults, Resource Managers and Key-Value\
    \ Stores.\nSubstates under a component include the Component Struct, Component\
    \ Data, and Access Rules substates.\n"
  name: Concepts
  x-displayName: Concepts
  x-traitTag: true
- description: |
    To construct and submit a transaction using the LTS endpoints:

    * Query `/lts/transaction/construction` to retrieve the current epoch (according to your node).
      Check also that the `ledger_clock` is close to the current time - this ensures that the node is synced up.
    * Make use of the Radix Engine Toolkit to construct the intent, sign/notarize, and compile the notarized transaction.
    * You can use `/lts/transaction/submit` to submit the transaction
    * Use `/lts/transaction/status` to check the status of the transaction
    * Use `/lts/stream/transaction-outcomes` to look up the outcome of the transaction, from its state version
  name: Construction
  x-displayName: Transaction Construction
  x-traitTag: true
- description: |
    For long term support/backward compatible endpoints aimed at integrators such as exchanges.
  name: LTS
  x-displayName: LTS Endpoints
- description: |
    For status and configuration details for the node / engine.
  name: Status
  x-displayName: Status Endpoints
- description: |
    For transaction construction, preview, submission, and monitoring the status of an individual transaction.
  name: Transaction
  x-displayName: Transaction Endpoints
- description: |
    For information on the contents of the node's mempool.
  name: Mempool
  x-displayName: Mempool Endpoints
- description: |
    For reading the state of entities. At present, we only support reading details from the top of the currently committed ledger.
  name: State
  x-displayName: State Endpoints
- description: To query the transaction stream of the ledger.
  name: Stream
  x-displayName: Stream Endpoints
paths:
  /lts/transaction/construction:
    post:
      description: Returns information necessary to build a transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LtsTransactionConstructionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtsTransactionConstructionResponse'
          description: All info needed to build a transaction
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Construction Metadata
      tags:
      - LTS
      x-content-type: application/json
      x-accepts: application/json
  /lts/transaction/submit:
    post:
      description: |
        Submits a notarized transaction to the network. Returns whether the transaction submission was already included in the node's mempool.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LtsTransactionSubmitRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtsTransactionSubmitResponse'
          description: Transaction Submit Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSubmitErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSubmitErrorResponse'
          description: Server error
      summary: Submit Transaction
      tags:
      - LTS
      x-content-type: application/json
      x-accepts: application/json
  /lts/transaction/status:
    post:
      description: |
        Shares the node's knowledge of any payloads associated with the given intent hash.
        Generally there will be a single payload for a given intent, but it's theoretically possible there may be multiple.
        This knowledge is summarised into a status for the intent. This summarised status in the response is likely sufficient
        for most clients.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LtsTransactionStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtsTransactionStatusResponse'
          description: Transaction status response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Transaction Status
      tags:
      - LTS
      x-content-type: application/json
      x-accepts: application/json
  /lts/state/account-all-fungible-resource-balances:
    post:
      description: Returns balances for all resources associated with an account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LtsStateAccountAllFungibleResourceBalancesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtsStateAccountAllFungibleResourceBalancesResponse'
          description: Account all resource balances response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get All Account Balances
      tags:
      - LTS
      x-content-type: application/json
      x-accepts: application/json
  /lts/state/account-fungible-resource-balance:
    post:
      description: Returns balance of a single fungible resource in an account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LtsStateAccountFungibleResourceBalanceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtsStateAccountFungibleResourceBalanceResponse'
          description: Account resource balance response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Single Account Balance
      tags:
      - LTS
      x-content-type: application/json
      x-accepts: application/json
  /lts/state/account-deposit-behaviour:
    post:
      description: Returns deposit behaviour of a single account for multiple resource
        addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LtsStateAccountDepositBehaviourRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtsStateAccountDepositBehaviourResponse'
          description: Account deposit behaviour response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Account Deposit Behaviour
      tags:
      - LTS
      x-content-type: application/json
      x-accepts: application/json
  /lts/stream/transaction-outcomes:
    post:
      description: |
        Returns a list of committed transaction outcomes (containing balance changes) from a given state version.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LtsStreamTransactionOutcomesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtsStreamTransactionOutcomesResponse'
          description: Paged response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Transaction Outcomes
      tags:
      - LTS
      x-content-type: application/json
      x-accepts: application/json
  /lts/stream/account-transaction-outcomes:
    post:
      description: |
        Returns a list of committed transaction outcomes (containing balance changes) from a given state version, filtered to only transactions which involved the given account.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LtsStreamAccountTransactionOutcomesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtsStreamAccountTransactionOutcomesResponse'
          description: Paged response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Account Transaction Outcomes
      tags:
      - LTS
      x-content-type: application/json
      x-accepts: application/json
  /status/network-configuration:
    post:
      description: Returns the network configuration of the network the node is connected
        to.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConfigurationResponse'
          description: Network Configuration
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Network Configuration
      tags:
      - Status
      x-accepts: application/json
  /status/network-status:
    post:
      description: Returns the current state and status of the node's copy of the
        ledger.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkStatusResponse'
          description: Network Status
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Network Status
      tags:
      - Status
      x-content-type: application/json
      x-accepts: application/json
  /status/scenarios:
    post:
      description: Get results of test-oriented "Genesis Scenarios" executed on this
        Network.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenariosRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenariosResponse'
          description: Scenarios' results
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Scenarios' results.
      tags:
      - Status
      x-content-type: application/json
      x-accepts: application/json
  /mempool/list:
    post:
      description: Returns the hashes of all the transactions currently in the mempool
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MempoolListRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MempoolListResponse'
          description: Mempool List Response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Mempool List
      tags:
      - Mempool
      x-content-type: application/json
      x-accepts: application/json
  /mempool/transaction:
    post:
      description: Returns the payload of a transaction currently in the mempool
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MempoolTransactionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MempoolTransactionResponse'
          description: Mempool Transaction Response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Not found error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Mempool Transaction
      tags:
      - Mempool
      x-content-type: application/json
      x-accepts: application/json
  /transaction/parse:
    post:
      description: "Extracts the contents and hashes of various types of transaction\
        \ payloads, or sub-payloads."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionParseRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionParseResponse'
          description: Transaction Parse Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Parse Transaction Payload
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts: application/json
  /transaction/submit:
    post:
      description: |
        Submits a notarized transaction to the network. Returns whether the transaction submission was already included in the node's mempool.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionSubmitRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSubmitResponse'
          description: Transaction Submit Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSubmitErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSubmitErrorResponse'
          description: Server error
      summary: Transaction Submit
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts: application/json
  /transaction/status:
    post:
      description: |
        Shares the node's knowledge of any payloads associated with the given intent hash.
        Generally there will be a single payload for a given intent, but it's theoretically possible there may be multiple.
        This knowledge is summarised into a status for the intent. This summarised status in the response is likely sufficient
        for most clients.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionStatusResponse'
          description: Transaction status response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Transaction Status
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts: application/json
  /transaction/receipt:
    post:
      description: |
        Gets the transaction receipt for a committed transaction.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionReceiptRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionReceiptResponse'
          description: Committed transaction found response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Committed transaction not found response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Transaction Receipt
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts: application/json
  /transaction/call-preview:
    post:
      description: |
        Preview a scrypto function or method call against the latest network state.
        Returns the result of the scrypto function or method call.
      requestBody:
        content:
          application/json:
            examples:
              method:
                summary: A method call example
                value:
                  target:
                    type: method
                    component_address: component_loc1qftacppvmr9ezmekxqpq58en0nk954x0a7jv2zz0hc7qfxlgx4
                    method_name: lock_fee
                  arguments:
                  - a120000000000010632d5ec66b050000000000000000000000000000000000000000000000
              function:
                summary: A function call example
                value:
                  target:
                    type: function
                    package_address: package_loc1q9ufgsc8yh5fkv8kzny3vnp68gkmuytc004k0j8dkwvs0xq76q
                    blueprint_name: GumballMachine
                    function_name: instantiate_gumball_machine
                  arguments:
                  - a120000000000010632d5ec66b050000000000000000000000000000000000000000000000
            schema:
              $ref: '#/components/schemas/TransactionCallPreviewRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCallPreviewResponse'
          description: Result of the scrypto function call
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Scrypto Call Preview
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts: application/json
  /transaction/preview:
    post:
      description: |
        Preview a transaction against the latest network state, and returns the preview receipt.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionPreviewRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionPreviewResponse'
          description: Transaction preview response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Transaction Preview
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts: application/json
  /stream/transactions:
    post:
      description: |
        Returns the list of committed transactions.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamTransactionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamTransactionsResponse'
          description: Committed transactions response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Committed Transactions
      tags:
      - Stream
      x-content-type: application/json
      x-accepts: application/json
  /state/consensus-manager:
    post:
      description: |
        Reads the consensus manager's substate/s from the top of the current ledger.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateConsensusManagerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateConsensusManagerResponse'
          description: Current state response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Consensus Manager Details
      tags:
      - State
      x-content-type: application/json
      x-accepts: application/json
  /state/account:
    post:
      description: |
        Reads the account's substate/s from the top of the current ledger.
        Also returns all vaults under the account.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateAccountResponse'
          description: Current state response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Not found error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Account Details
      tags:
      - State
      x-content-type: application/json
      x-accepts: application/json
  /state/component:
    post:
      description: |
        Reads the component's substate/s from the top of the current ledger.
        Also recursively extracts vault balance totals from the component's entity subtree.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateComponentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateComponentResponse'
          description: Current state response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Not found error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Component Details
      tags:
      - State
      x-content-type: application/json
      x-accepts: application/json
  /state/validator:
    post:
      description: |
        Reads the validator's substate/s from the top of the current ledger.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateValidatorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateValidatorResponse'
          description: Current state response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Not found error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Validator Details
      tags:
      - State
      x-content-type: application/json
      x-accepts: application/json
  /state/access-controller:
    post:
      description: |
        Reads the access controller's substate/s from the top of the current ledger.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateAccessControllerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateAccessControllerResponse'
          description: Current state response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Not found error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Access Controller Details
      tags:
      - State
      x-content-type: application/json
      x-accepts: application/json
  /state/resource:
    post:
      description: |
        Reads the resource manager's substate/s from the top of the current ledger.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateResourceResponse'
          description: Current state response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Not found error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Resource Details
      tags:
      - State
      x-content-type: application/json
      x-accepts: application/json
  /state/non-fungible:
    post:
      description: |
        Reads the data associated with a single Non-Fungible Unit under a Non-Fungible Resource.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateNonFungibleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateNonFungibleResponse'
          description: Current state response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Not found error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Non-Fungible Details
      tags:
      - State
      x-content-type: application/json
      x-accepts: application/json
  /state/package:
    post:
      description: |
        Reads the package's substate/s from the top of the current ledger.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatePackageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatePackageResponse'
          description: Current state response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Client error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Not found error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Server error
      summary: Get Package Details
      tags:
      - State
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    NetworkIdentifier:
      description: The logical name of the network
      example: "{{network}}"
      type: string
    SborFormatOptions:
      description: Requested SBOR formats to include in the response
      example:
        programmatic_json: true
        raw: true
      properties:
        raw:
          description: Whether to return the raw hex-encoded bytes (default true)
          type: boolean
        programmatic_json:
          description: "Whether to return the programmatic json format (normally default\
            \ true, defaults false for streamed transactions)"
          type: boolean
      type: object
    TransactionFormatOptions:
      description: Requested transaction formats to include in the response
      example:
        blobs: true
        raw_notarized_transaction: true
        manifest: true
        raw_system_transaction: true
        message: true
        raw_ledger_transaction: true
      properties:
        manifest:
          description: Whether to return the raw manifest (default true)
          type: boolean
        blobs:
          description: Whether to return the hex-encoded blobs (default false)
          type: boolean
        message:
          description: Whether to return the transaction message (default true)
          type: boolean
        raw_system_transaction:
          description: Whether to return the raw hex-encoded system transaction bytes
            (default false)
          type: boolean
        raw_notarized_transaction:
          description: Whether to return the raw hex-encoded notarized transaction
            bytes (default true)
          type: boolean
        raw_ledger_transaction:
          description: Whether to return the raw hex-encoded ledger transaction bytes
            (default false)
          type: boolean
      type: object
    SubstateFormatOptions:
      description: Requested substate formats to include in the response
      example:
        typed: true
        previous: true
        raw: true
        hash: true
      properties:
        raw:
          description: Whether to return the raw substate value bytes (default false)
          type: boolean
        hash:
          description: Whether to return the raw substate value bytes hash (default
            false)
          type: boolean
        typed:
          description: Whether to return the typed substate information (default true)
          type: boolean
        previous:
          description: Whether to return the previous substate value for updates and
            deletes (default false)
          type: boolean
      type: object
    Decimal:
      description: |
        A string-encoded fixed-precision decimal to 18 decimal places.
        A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
      type: string
    TransactionStatus:
      description: The status of the transaction
      enum:
      - Succeeded
      - Failed
      - Rejected
      type: string
    TransactionReceipt:
      description: The transaction execution receipt
      example:
        output:
        - programmatic_json: ""
          hex: hex
        - programmatic_json: ""
          hex: hex
        error_message: error_message
        fee_summary:
          xrd_total_storage_cost: xrd_total_storage_cost
          xrd_total_execution_cost: xrd_total_execution_cost
          execution_cost_units_consumed: 343953088
          xrd_total_finalization_cost: xrd_total_finalization_cost
          finalization_cost_units_consumed: 2588772717
          xrd_total_royalty_cost: xrd_total_royalty_cost
          xrd_total_tipping_cost: xrd_total_tipping_cost
        next_epoch:
          validators:
          - stake: stake
            address: address
            key: null
          - stake: stake
            address: address
            key: null
          epoch: 3616076749
        fee_destination:
          to_burn: to_burn
          to_validator_set: to_validator_set
          to_proposer: to_proposer
          to_royalty_recipients:
          - royalty_recipient:
              entity_type: null
              entity_address: entity_address
              is_global: true
            xrd_amount: xrd_amount
          - royalty_recipient:
              entity_type: null
              entity_address: entity_address
              is_global: true
            xrd_amount: xrd_amount
        costing_parameters:
          finalization_cost_unit_price: finalization_cost_unit_price
          execution_cost_unit_loan: 2560717018
          finalization_cost_unit_limit: 2421234836
          execution_cost_unit_price: execution_cost_unit_price
          xrd_storage_price: xrd_storage_price
          xrd_usd_price: xrd_usd_price
          execution_cost_unit_limit: 629561881
          tip_percentage: 58
        state_updates:
          deleted_substates:
          - system_structure:
              type: null
            previous_value:
              substate_data_hash: substate_data_hash
              substate_data:
                substate_type: null
                is_locked: true
              substate_hex: substate_hex
            substate_id: null
          - system_structure:
              type: null
            previous_value:
              substate_data_hash: substate_data_hash
              substate_data:
                substate_type: null
                is_locked: true
              substate_hex: substate_hex
            substate_id: null
          deleted_partitions:
          - entity_type: null
            partition_kind: null
            partition_number: 180
            entity_address: entity_address
            entity_module: null
          - entity_type: null
            partition_kind: null
            partition_number: 180
            entity_address: entity_address
            entity_module: null
          created_substates:
          - system_structure:
              type: null
            substate_id: null
            value:
              substate_data_hash: substate_data_hash
              substate_data:
                substate_type: null
                is_locked: true
              substate_hex: substate_hex
          - system_structure:
              type: null
            substate_id: null
            value:
              substate_data_hash: substate_data_hash
              substate_data:
                substate_type: null
                is_locked: true
              substate_hex: substate_hex
          updated_substates:
          - system_structure:
              type: null
            previous_value:
              substate_data_hash: substate_data_hash
              substate_data:
                substate_type: null
                is_locked: true
              substate_hex: substate_hex
            substate_id: null
            new_value:
              substate_data_hash: substate_data_hash
              substate_data:
                substate_type: null
                is_locked: true
              substate_hex: substate_hex
          - system_structure:
              type: null
            previous_value:
              substate_data_hash: substate_data_hash
              substate_data:
                substate_type: null
                is_locked: true
              substate_hex: substate_hex
            substate_id: null
            new_value:
              substate_data_hash: substate_data_hash
              substate_data:
                substate_type: null
                is_locked: true
              substate_hex: substate_hex
          new_global_entities:
          - entity_type: null
            entity_address: entity_address
            is_global: true
          - entity_type: null
            entity_address: entity_address
            is_global: true
        fee_source:
          from_vaults:
          - xrd_amount: xrd_amount
            vault_entity:
              entity_type: null
              entity_address: entity_address
              is_global: true
          - xrd_amount: xrd_amount
            vault_entity:
              entity_type: null
              entity_address: entity_address
              is_global: true
        events:
        - data:
            programmatic_json: ""
            hex: hex
          type:
            name: name
            type_reference:
              full_type_id:
                schema_hash: schema_hash
                entity_address: entity_address
                local_type_id:
                  as_sbor:
                    programmatic_json: ""
                    hex: hex
                  kind: WellKnown
                  id: 3994939882
            emitter:
              type: null
        - data:
            programmatic_json: ""
            hex: hex
          type:
            name: name
            type_reference:
              full_type_id:
                schema_hash: schema_hash
                entity_address: entity_address
                local_type_id:
                  as_sbor:
                    programmatic_json: ""
                    hex: hex
                  kind: WellKnown
                  id: 3994939882
            emitter:
              type: null
        status: null
      properties:
        status:
          $ref: '#/components/schemas/TransactionStatus'
        fee_summary:
          $ref: '#/components/schemas/FeeSummary'
        costing_parameters:
          $ref: '#/components/schemas/CostingParameters'
        fee_source:
          $ref: '#/components/schemas/FeeSource'
        fee_destination:
          $ref: '#/components/schemas/FeeDestination'
        state_updates:
          $ref: '#/components/schemas/StateUpdates'
        events:
          items:
            $ref: '#/components/schemas/Event'
          type: array
        next_epoch:
          $ref: '#/components/schemas/NextEpoch'
        output:
          description: The manifest line-by-line engine return data (only present
            if `status` is `Succeeded`)
          items:
            $ref: '#/components/schemas/SborData'
          type: array
        error_message:
          description: Error message (only present if status is `Failed` or `Rejected`)
          type: string
      required:
      - costing_parameters
      - fee_summary
      - state_updates
      - status
      type: object
    NotarizedTransaction:
      properties:
        hash:
          description: |
            The hex-encoded notarized transaction hash for a user transaction.
            This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
          maxLength: 64
          minLength: 64
          type: string
        hash_bech32m:
          description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
          type: string
        payload_hex:
          description: The hex-encoded full notarized transaction payload. Returning
            this can be disabled in TransactionFormatOptions on your request (default
            true).
          type: string
        signed_intent:
          $ref: '#/components/schemas/SignedTransactionIntent'
        notary_signature:
          $ref: '#/components/schemas/Signature'
      required:
      - hash
      - hash_bech32m
      - notary_signature
      - signed_intent
      type: object
    SignedTransactionIntent:
      properties:
        hash:
          description: |
            The hex-encoded signed intent hash for a user transaction.
            This hash identifies the transaction intent, plus additional signatures.
            This hash is signed by the notary, to create the submittable NotarizedTransaction.
          maxLength: 64
          minLength: 64
          type: string
        hash_bech32m:
          description: The Bech32m-encoded human readable `SignedIntentHash`.
          type: string
        intent:
          $ref: '#/components/schemas/TransactionIntent'
        intent_signatures:
          items:
            $ref: '#/components/schemas/SignatureWithPublicKey'
          type: array
      required:
      - hash
      - hash_bech32m
      - intent
      - intent_signatures
      type: object
    TransactionIntent:
      properties:
        hash:
          description: |
            The hex-encoded intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core content "intent" of the transaction. Each intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
          maxLength: 64
          minLength: 64
          type: string
        hash_bech32m:
          description: The Bech32m-encoded human readable `IntentHash`.
          type: string
        header:
          $ref: '#/components/schemas/TransactionHeader'
        instructions:
          description: The decompiled transaction manifest instructions. Only returned
            if enabled in `TransactionFormatOptions` on your request.
          type: string
        blobs_hex:
          additionalProperties:
            description: The hex-encoded blob content
            type: string
          description: "A map of the hex-encoded blob hash, to hex-encoded blob content.\
            \ Only returned if enabled in `TransactionFormatOptions` on your request."
          type: object
        message:
          $ref: '#/components/schemas/TransactionMessage'
      required:
      - hash
      - hash_bech32m
      - header
      type: object
    TransactionMessageType:
      enum:
      - Plaintext
      - Encrypted
      type: string
    TransactionMessage:
      discriminator:
        mapping:
          Plaintext: '#/components/schemas/PlaintextTransactionMessage'
          Encrypted: '#/components/schemas/EncryptedTransactionMessage'
        propertyName: type
      example:
        type: null
      properties:
        type:
          $ref: '#/components/schemas/TransactionMessageType'
      required:
      - type
      type: object
    PlaintextTransactionMessage:
      allOf:
      - $ref: '#/components/schemas/TransactionMessage'
      - $ref: '#/components/schemas/PlaintextTransactionMessage_allOf'
    PlaintextMessageContentType:
      enum:
      - String
      - Binary
      type: string
    PlaintextMessageContent:
      discriminator:
        mapping:
          String: '#/components/schemas/StringPlaintextMessageContent'
          Binary: '#/components/schemas/BinaryPlaintextMessageContent'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/PlaintextMessageContentType'
      required:
      - type
      type: object
    StringPlaintextMessageContent:
      allOf:
      - $ref: '#/components/schemas/PlaintextMessageContent'
      - $ref: '#/components/schemas/StringPlaintextMessageContent_allOf'
    BinaryPlaintextMessageContent:
      allOf:
      - $ref: '#/components/schemas/PlaintextMessageContent'
      - $ref: '#/components/schemas/BinaryPlaintextMessageContent_allOf'
    EncryptedTransactionMessage:
      allOf:
      - $ref: '#/components/schemas/TransactionMessage'
      - $ref: '#/components/schemas/EncryptedTransactionMessage_allOf'
    EncryptedMessageCurveDecryptorSet:
      description: |
        A decryptor set for a particular ECDSA curve type.
        The (128-bit) AES-GCM symmetric key is encrypted separately for each decryptor public key via (256-bit) AES-KeyWrap.
        AES-KeyWrap uses a key derived via a KDF (Key Derivation Function) using a shared secret.
        For each decryptor public key, we create a shared curve point `G` via static Diffie-Helman between the decryptor public key, and a per-transaction ephemeral public key for that curve type.
        We then use that shared secret with a key derivation function to create the (256-bit) KEK (Key Encrypting Key):
        `KEK = HKDF(hash: Blake2b, secret: x co-ord of G, salt: [], length: 256 bits)`.
      properties:
        dh_ephemeral_public_key:
          $ref: '#/components/schemas/PublicKey'
        decryptors:
          items:
            $ref: '#/components/schemas/EncryptedMessageDecryptor'
          type: array
      required:
      - decryptors
      - dh_ephemeral_public_key
      type: object
    EncryptedMessageDecryptor:
      properties:
        public_key_fingerprint_hex:
          description: "The last 8 bytes of the Blake2b-256 hash of the public key\
            \ bytes, in their standard Radix byte-serialization."
          type: string
        aes_wrapped_key_hex:
          description: |
            The hex-encoded wrapped key bytes from applying RFC 3394 (256-bit) AES-KeyWrap to the 128-bit message ephemeral public key, with the secret KEK provided by static Diffie-Helman between the decryptor public key, and the `dh_ephemeral_public_key` for that curve type.
            The bytes are serialized (according to RFC 3394) as the concatenation `IV (first 8 bytes) || Cipher (wrapped 128-bit key, encoded as two 64-bit blocks)`.
          type: string
      required:
      - aes_wrapped_key_hex
      - public_key_fingerprint_hex
      type: object
    TransactionHeader:
      properties:
        network_id:
          description: The logical id of the network
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        start_epoch_inclusive:
          description: |
            An integer between `0` and `10^10`, marking the epoch from which the transaction can be submitted.
            In the case of uncommitted transactions, a value of `10^10` indicates that the epoch was >= `10^10`.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        end_epoch_exclusive:
          description: |
            An integer between `0` and `10^10`, marking the epoch from which the transaction will no longer be valid, and be rejected.
            In the case of uncommitted transactions, a value of `10^10` indicates that the epoch was >= `10^10`.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        nonce:
          description: |
            An integer between `0` and `2^32 - 1`, chosen to allow a unique intent to be created (to enable submitting an otherwise identical/duplicate intent).
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        notary_public_key:
          $ref: '#/components/schemas/PublicKey'
        notary_is_signatory:
          description: Specifies whether the notary public key should be included
            in the transaction signers list
          type: boolean
        tip_percentage:
          description: "An integer between `0` and `255`, giving the validator tip\
            \ as a percentage amount. A value of `1` corresponds to 1% of the fee."
          format: int32
          maximum: 255
          minimum: 0
          type: integer
      required:
      - end_epoch_exclusive
      - network_id
      - nonce
      - notary_is_signatory
      - notary_public_key
      - start_epoch_inclusive
      - tip_percentage
      type: object
    NetworkIdentifierByte:
      description: The logical id of the network
      format: int32
      maximum: 255
      minimum: 0
      type: integer
    LedgerStateSummary:
      example:
        state_version: 8008281904611
        header_summary:
          epoch_round:
            round: 1465812980
            epoch: 6027456183
          proposer_timestamp:
            date_time: date_time
            unix_timestamp_ms: 60274561830704
          ledger_hashes:
            state_tree_hash: state_tree_hash
            transaction_tree_hash: transaction_tree_hash
            receipt_tree_hash: receipt_tree_hash
      properties:
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        header_summary:
          $ref: '#/components/schemas/LedgerHeaderSummary'
      required:
      - header_summary
      - state_version
      type: object
    LedgerHeaderSummary:
      example:
        epoch_round:
          round: 1465812980
          epoch: 6027456183
        proposer_timestamp:
          date_time: date_time
          unix_timestamp_ms: 60274561830704
        ledger_hashes:
          state_tree_hash: state_tree_hash
          transaction_tree_hash: transaction_tree_hash
          receipt_tree_hash: receipt_tree_hash
      properties:
        epoch_round:
          $ref: '#/components/schemas/EpochRound'
        ledger_hashes:
          $ref: '#/components/schemas/LedgerHashes'
        proposer_timestamp:
          $ref: '#/components/schemas/Instant'
      required:
      - epoch_round
      - ledger_hashes
      - proposer_timestamp
      type: object
    LedgerHashes:
      example:
        state_tree_hash: state_tree_hash
        transaction_tree_hash: transaction_tree_hash
        receipt_tree_hash: receipt_tree_hash
      properties:
        state_tree_hash:
          description: |
            The hex-encoded root hash of the state tree. This captures the current state of the state on the ledger.
          maxLength: 64
          minLength: 64
          type: string
        transaction_tree_hash:
          description: |
            The hex-encoded root hash of the transaction tree. This captures the ledger transactions committed to the ledger.
          maxLength: 64
          minLength: 64
          type: string
        receipt_tree_hash:
          description: |
            The hex-encoded root hash of the receipt tree. This captures the consensus-agreed output of each transaction on the ledger.
          maxLength: 64
          minLength: 64
          type: string
      required:
      - receipt_tree_hash
      - state_tree_hash
      - transaction_tree_hash
      type: object
    StateVersion:
      format: int64
      maximum: 100000000000000
      minimum: 1
      type: integer
    TransactionIdentifiers:
      example:
        intent_hash: intent_hash
        intent_hash_bech32m: intent_hash_bech32m
        signed_intent_hash: signed_intent_hash
        payload_hash: payload_hash
        payload_hash_bech32m: payload_hash_bech32m
        signed_intent_hash_bech32m: signed_intent_hash_bech32m
      properties:
        intent_hash:
          description: |
            The hex-encoded intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core content "intent" of the transaction. Each intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
          maxLength: 64
          minLength: 64
          type: string
        intent_hash_bech32m:
          description: The Bech32m-encoded human readable `IntentHash`.
          type: string
        signed_intent_hash:
          description: |
            The hex-encoded signed intent hash for a user transaction.
            This hash identifies the transaction intent, plus additional signatures.
            This hash is signed by the notary, to create the submittable NotarizedTransaction.
          maxLength: 64
          minLength: 64
          type: string
        signed_intent_hash_bech32m:
          description: The Bech32m-encoded human readable `SignedIntentHash`.
          type: string
        payload_hash:
          description: |
            The hex-encoded notarized transaction hash for a user transaction.
            This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
          maxLength: 64
          minLength: 64
          type: string
        payload_hash_bech32m:
          description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
          type: string
      required:
      - intent_hash
      - intent_hash_bech32m
      - payload_hash
      - payload_hash_bech32m
      - signed_intent_hash
      - signed_intent_hash_bech32m
      type: object
    IntentHashInput:
      description: |
        The intent hash for a user transaction, also known as the transaction id.
        This hash identifies the core content "intent" of the transaction. Each intent can only be committed once.
        This hash gets signed by any signatories on the transaction, to create the signed intent.
        Either hex or Bech32m-encoded strings are supported.
      type: string
    IntentHash:
      description: |
        The hex-encoded intent hash for a user transaction, also known as the transaction id.
        This hash identifies the core content "intent" of the transaction. Each intent can only be committed once.
        This hash gets signed by any signatories on the transaction, to create the signed intent.
      maxLength: 64
      minLength: 64
      type: string
    IntentHashBech32m:
      description: The Bech32m-encoded human readable `IntentHash`.
      type: string
    SignedIntentHash:
      description: |
        The hex-encoded signed intent hash for a user transaction.
        This hash identifies the transaction intent, plus additional signatures.
        This hash is signed by the notary, to create the submittable NotarizedTransaction.
      maxLength: 64
      minLength: 64
      type: string
    SignedIntentHashBech32m:
      description: The Bech32m-encoded human readable `SignedIntentHash`.
      type: string
    NotarizedTransactionHashInput:
      description: |
        This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
        This hash should either be hex or Bech32m-encoded.
      type: string
    NotarizedTransactionHash:
      description: |
        The hex-encoded notarized transaction hash for a user transaction.
        This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
      maxLength: 64
      minLength: 64
      type: string
    NotarizedTransactionHashBech32m:
      description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
      type: string
    LedgerPayloadHash:
      description: |
        The hex-encoded ledger payload transaction hash.
        This is a wrapper for both user transactions, and system transactions such as genesis and round changes.
      maxLength: 64
      minLength: 64
      type: string
    LedgerPayloadHashBech32m:
      description: The Bech32m-encoded human readable `LedgerPayloadHash`.
      type: string
    CommittedIntentMetadata:
      properties:
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        payload_hash:
          description: |
            The hex-encoded notarized transaction hash for a user transaction.
            This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
          maxLength: 64
          minLength: 64
          type: string
        payload_hash_bech32m:
          description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
          type: string
        is_same_transaction:
          description: |
            Whether the intent was committed in a transaction with the same payload.
            This is a convenience field, which can also be computed using `payload_hash` by a client
            knowing the payload of the submitted transaction.
          type: boolean
      required:
      - is_same_transaction
      - payload_hash
      - payload_hash_bech32m
      - state_version
      type: object
    ErrorResponseType:
      enum:
      - Basic
      - TransactionSubmit
      - LtsTransactionSubmit
      - StreamTransactions
      type: string
    ErrorResponse:
      discriminator:
        mapping:
          Basic: '#/components/schemas/BasicErrorResponse'
          TransactionSubmit: '#/components/schemas/TransactionSubmitErrorResponse'
          LtsTransactionSubmit: '#/components/schemas/LtsTransactionSubmitErrorResponse'
          StreamTransactions: '#/components/schemas/StreamTransactionsErrorResponse'
        propertyName: error_type
      properties:
        error_type:
          $ref: '#/components/schemas/ErrorResponseType'
        code:
          description: A numeric code corresponding to the given HTTP error code.
          type: integer
        message:
          description: A human-readable error message.
          type: string
        trace_id:
          description: "A GUID to be used when reporting errors, to allow correlation\
            \ with the Core API's error logs, in the case where the Core API details\
            \ are hidden."
          type: string
      required:
      - code
      - error_type
      - message
      type: object
    BasicErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - type: object
    FeeSummary:
      example:
        xrd_total_storage_cost: xrd_total_storage_cost
        xrd_total_execution_cost: xrd_total_execution_cost
        execution_cost_units_consumed: 343953088
        xrd_total_finalization_cost: xrd_total_finalization_cost
        finalization_cost_units_consumed: 2588772717
        xrd_total_royalty_cost: xrd_total_royalty_cost
        xrd_total_tipping_cost: xrd_total_tipping_cost
      properties:
        execution_cost_units_consumed:
          description: "An integer between `0` and `2^32 - 1`, representing the amount\
            \ of cost units consumed by the transaction execution."
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        finalization_cost_units_consumed:
          description: "An integer between `0` and `2^32 - 1`, representing the amount\
            \ of cost units consumed by the transaction finalization."
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        xrd_total_execution_cost:
          description: |
            The string-encoded decimal representing the total amount of XRD burned in the transaction as part of execution costs.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        xrd_total_finalization_cost:
          description: |
            The string-encoded decimal representing the total amount of XRD burned in the transaction as part of finalization costs.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        xrd_total_royalty_cost:
          description: |
            The string-encoded decimal representing the total amount of XRD paid in royalties as part of the transaction.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        xrd_total_storage_cost:
          description: |
            The string-encoded decimal representing the total amount of XRD paid in state expansion costs as part of the transaction.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        xrd_total_tipping_cost:
          description: |
            The string-encoded decimal representing the total amount of XRD tipped to validators in the transaction.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - execution_cost_units_consumed
      - finalization_cost_units_consumed
      - xrd_total_execution_cost
      - xrd_total_finalization_cost
      - xrd_total_royalty_cost
      - xrd_total_storage_cost
      - xrd_total_tipping_cost
      type: object
    CostingParameters:
      example:
        finalization_cost_unit_price: finalization_cost_unit_price
        execution_cost_unit_loan: 2560717018
        finalization_cost_unit_limit: 2421234836
        execution_cost_unit_price: execution_cost_unit_price
        xrd_storage_price: xrd_storage_price
        xrd_usd_price: xrd_usd_price
        execution_cost_unit_limit: 629561881
        tip_percentage: 58
      properties:
        execution_cost_unit_price:
          description: |
            The string-encoded decimal representing the XRD price of a single cost unit of transaction execution.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        execution_cost_unit_limit:
          description: "An integer between `0` and `2^32 - 1`, representing the maximum\
            \ amount of cost units available for the transaction execution."
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        execution_cost_unit_loan:
          description: "An integer between `0` and `2^32 - 1`, representing the number\
            \ of execution cost units loaned from system."
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        finalization_cost_unit_price:
          description: |
            The string-encoded decimal representing the XRD price of a single cost unit of transaction finalization.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        finalization_cost_unit_limit:
          description: "An integer between `0` and `2^32 - 1`, representing the maximum\
            \ amount of cost units available for the transaction finalization."
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        xrd_usd_price:
          description: |
            The string-encoded decimal representing the price of 1 USD, expressed in XRD.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        xrd_storage_price:
          description: |
            The string-encoded decimal representing the price of 1 byte of storage, expressed in XRD.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        tip_percentage:
          description: "An integer between `0` and `255`, giving the validator tip\
            \ as a percentage amount. A value of `1` corresponds to 1% of the fee."
          format: int32
          maximum: 255
          minimum: 0
          type: integer
      required:
      - execution_cost_unit_limit
      - execution_cost_unit_loan
      - execution_cost_unit_price
      - finalization_cost_unit_limit
      - finalization_cost_unit_price
      - tip_percentage
      - xrd_storage_price
      - xrd_usd_price
      type: object
    FeeSource:
      example:
        from_vaults:
        - xrd_amount: xrd_amount
          vault_entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
        - xrd_amount: xrd_amount
          vault_entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
      properties:
        from_vaults:
          description: A breakdown of which vaults were used to pay the fee.
          items:
            $ref: '#/components/schemas/PaymentFromVault'
          type: array
      required:
      - from_vaults
      type: object
    PaymentFromVault:
      example:
        xrd_amount: xrd_amount
        vault_entity:
          entity_type: null
          entity_address: entity_address
          is_global: true
      properties:
        vault_entity:
          $ref: '#/components/schemas/EntityReference'
        xrd_amount:
          description: |
            The string-encoded decimal representing the amount of fee in XRD paid by this vault.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - vault_entity
      - xrd_amount
      type: object
    FeeDestination:
      example:
        to_burn: to_burn
        to_validator_set: to_validator_set
        to_proposer: to_proposer
        to_royalty_recipients:
        - royalty_recipient:
            entity_type: null
            entity_address: entity_address
            is_global: true
          xrd_amount: xrd_amount
        - royalty_recipient:
            entity_type: null
            entity_address: entity_address
            is_global: true
          xrd_amount: xrd_amount
      properties:
        to_proposer:
          description: |
            The string-encoded decimal representing the amount of fee in XRD paid to the proposer.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        to_validator_set:
          description: |
            The string-encoded decimal representing the amount of fee in XRD paid to the validator set.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        to_burn:
          description: |
            The string-encoded decimal representing the amount of fee burnt, in XRD.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        to_royalty_recipients:
          description: |
            A breakdown of where the royalties were paid to.
          items:
            $ref: '#/components/schemas/PaymentToRoyaltyRecipient'
          type: array
      required:
      - to_burn
      - to_proposer
      - to_royalty_recipients
      - to_validator_set
      type: object
    PaymentToRoyaltyRecipient:
      example:
        royalty_recipient:
          entity_type: null
          entity_address: entity_address
          is_global: true
        xrd_amount: xrd_amount
      properties:
        royalty_recipient:
          $ref: '#/components/schemas/EntityReference'
        xrd_amount:
          description: |
            The string-encoded decimal representing the amount of fee in XRD paid as royalty to this recipient.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - royalty_recipient
      - xrd_amount
      type: object
    ProposerReward:
      properties:
        validator_index:
          $ref: '#/components/schemas/ActiveValidatorIndex'
        xrd_amount:
          description: |
            The string-encoded decimal representing the amount of reward in XRD.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - validator_index
      - xrd_amount
      type: object
    StateUpdates:
      description: Transaction state updates (only present if status is Succeeded
        or Failed)
      example:
        deleted_substates:
        - system_structure:
            type: null
          previous_value:
            substate_data_hash: substate_data_hash
            substate_data:
              substate_type: null
              is_locked: true
            substate_hex: substate_hex
          substate_id: null
        - system_structure:
            type: null
          previous_value:
            substate_data_hash: substate_data_hash
            substate_data:
              substate_type: null
              is_locked: true
            substate_hex: substate_hex
          substate_id: null
        deleted_partitions:
        - entity_type: null
          partition_kind: null
          partition_number: 180
          entity_address: entity_address
          entity_module: null
        - entity_type: null
          partition_kind: null
          partition_number: 180
          entity_address: entity_address
          entity_module: null
        created_substates:
        - system_structure:
            type: null
          substate_id: null
          value:
            substate_data_hash: substate_data_hash
            substate_data:
              substate_type: null
              is_locked: true
            substate_hex: substate_hex
        - system_structure:
            type: null
          substate_id: null
          value:
            substate_data_hash: substate_data_hash
            substate_data:
              substate_type: null
              is_locked: true
            substate_hex: substate_hex
        updated_substates:
        - system_structure:
            type: null
          previous_value:
            substate_data_hash: substate_data_hash
            substate_data:
              substate_type: null
              is_locked: true
            substate_hex: substate_hex
          substate_id: null
          new_value:
            substate_data_hash: substate_data_hash
            substate_data:
              substate_type: null
              is_locked: true
            substate_hex: substate_hex
        - system_structure:
            type: null
          previous_value:
            substate_data_hash: substate_data_hash
            substate_data:
              substate_type: null
              is_locked: true
            substate_hex: substate_hex
          substate_id: null
          new_value:
            substate_data_hash: substate_data_hash
            substate_data:
              substate_type: null
              is_locked: true
            substate_hex: substate_hex
        new_global_entities:
        - entity_type: null
          entity_address: entity_address
          is_global: true
        - entity_type: null
          entity_address: entity_address
          is_global: true
      properties:
        deleted_partitions:
          items:
            $ref: '#/components/schemas/PartitionId'
          type: array
        created_substates:
          items:
            $ref: '#/components/schemas/CreatedSubstate'
          type: array
        updated_substates:
          items:
            $ref: '#/components/schemas/UpdatedSubstate'
          type: array
        deleted_substates:
          items:
            $ref: '#/components/schemas/DeletedSubstate'
          type: array
        new_global_entities:
          items:
            $ref: '#/components/schemas/EntityReference'
          type: array
      required:
      - created_substates
      - deleted_partitions
      - deleted_substates
      - new_global_entities
      - updated_substates
      type: object
    NextEpoch:
      example:
        validators:
        - stake: stake
          address: address
          key: null
        - stake: stake
          address: address
          key: null
        epoch: 3616076749
      properties:
        epoch:
          description: "An integer between `0` and `10^10`, marking the new epoch"
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        validators:
          description: "Active validator set for the new epoch, ordered by stake descending."
          items:
            $ref: '#/components/schemas/ActiveValidator'
          type: array
      required:
      - epoch
      - validators
      type: object
    CreatedSubstate:
      example:
        system_structure:
          type: null
        substate_id: null
        value:
          substate_data_hash: substate_data_hash
          substate_data:
            substate_type: null
            is_locked: true
          substate_hex: substate_hex
      properties:
        substate_id:
          $ref: '#/components/schemas/SubstateId'
        value:
          $ref: '#/components/schemas/SubstateValue'
        system_structure:
          $ref: '#/components/schemas/SubstateSystemStructure'
      required:
      - substate_id
      - system_structure
      - value
      type: object
    UpdatedSubstate:
      example:
        system_structure:
          type: null
        previous_value:
          substate_data_hash: substate_data_hash
          substate_data:
            substate_type: null
            is_locked: true
          substate_hex: substate_hex
        substate_id: null
        new_value:
          substate_data_hash: substate_data_hash
          substate_data:
            substate_type: null
            is_locked: true
          substate_hex: substate_hex
      properties:
        substate_id:
          $ref: '#/components/schemas/SubstateId'
        new_value:
          $ref: '#/components/schemas/SubstateValue'
        previous_value:
          $ref: '#/components/schemas/SubstateValue'
        system_structure:
          $ref: '#/components/schemas/SubstateSystemStructure'
      required:
      - new_value
      - substate_id
      - system_structure
      type: object
    SubstateValue:
      example:
        substate_data_hash: substate_data_hash
        substate_data:
          substate_type: null
          is_locked: true
        substate_hex: substate_hex
      properties:
        substate_hex:
          description: "The hex-encoded, SBOR-encoded substate data bytes. Only returned\
            \ if enabled in SubstateFormatOptions on your request (default false)."
          type: string
        substate_data_hash:
          description: The hex-encoded Blake2b-256 hash of the substate data bytes.
            Only returned if enabled in SubstateFormatOptions on your request (default
            false).
          type: string
        substate_data:
          $ref: '#/components/schemas/Substate'
      type: object
    DeletedSubstate:
      example:
        system_structure:
          type: null
        previous_value:
          substate_data_hash: substate_data_hash
          substate_data:
            substate_type: null
            is_locked: true
          substate_hex: substate_hex
        substate_id: null
      properties:
        substate_id:
          $ref: '#/components/schemas/SubstateId'
        previous_value:
          $ref: '#/components/schemas/SubstateValue'
        system_structure:
          $ref: '#/components/schemas/SubstateSystemStructure'
      required:
      - substate_id
      - system_structure
      type: object
    EntityReference:
      example:
        entity_type: null
        entity_address: entity_address
        is_global: true
      properties:
        entity_type:
          $ref: '#/components/schemas/EntityType'
        is_global:
          type: boolean
        entity_address:
          description: Bech32m-encoded human readable version of the entity's address
            (ie the entity's node id)
          type: string
      required:
      - entity_address
      - entity_type
      - is_global
      type: object
    PartitionId:
      example:
        entity_type: null
        partition_kind: null
        partition_number: 180
        entity_address: entity_address
        entity_module: null
      properties:
        entity_type:
          $ref: '#/components/schemas/EntityType'
        entity_address:
          description: Bech32m-encoded human readable version of the entity's address
            (ie the entity's node id)
          type: string
        entity_module:
          $ref: '#/components/schemas/EntityModule'
        partition_kind:
          $ref: '#/components/schemas/PartitionKind'
        partition_number:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
      required:
      - entity_address
      - entity_module
      - entity_type
      - partition_kind
      - partition_number
      type: object
    SubstateId:
      allOf:
      - $ref: '#/components/schemas/PartitionId'
      - $ref: '#/components/schemas/SubstateId_allOf'
    EntityModule:
      enum:
      - TypeInfo
      - Metadata
      - RoleAssignment
      - Royalty
      - Main
      - Schema
      type: string
    PartitionKind:
      description: |
        The type of the partition:
        - Field
          - Has key: TupleKey(u8) also known as an offset
          - No iteration exposed to engine
          - Is versioned / locked substate-by-substate
        - KeyValue ("ConcurrentMap")
          - Has key: MapKey(Vec<u8>)
          - No iteration exposed to engine
          - Is versioned / locked substate-by-substate
        - Index
          - Has key: MapKey(Vec<u8>)
          - Iteration exposed to engine via the MapKey's database key (ie hash of the key)
          - Is versioned / locked in its entirety
        - SortedIndex
          - Has key: SortedU16Key(U16, Vec<u8>)
          - Iteration exposed to engine via the user-controlled U16 prefix and then the MapKey's database key (ie hash of the key)
          - Is versioned / locked in its entirety
      enum:
      - Field
      - KeyValue
      - Index
      - SortedIndex
      type: string
    PartitionDescriptionType:
      enum:
      - Logical
      - Physical
      type: string
    PartitionDescription:
      properties:
        type:
          $ref: '#/components/schemas/PartitionDescriptionType'
        value:
          description: |
            An absolute or relative partition description, depending on the `type`:
            - if `Physical`, then this is a partition number,
            - if `Logical`, then this is a partition offset.
          format: int32
          maximum: 255
          minimum: 0
          type: integer
      required:
      - type
      - value
      type: object
    BlueprintPayloadDefType:
      enum:
      - Static
      - Generic
      type: string
    BlueprintPayloadDef:
      discriminator:
        mapping:
          Static: '#/components/schemas/StaticBlueprintPayloadDef'
          Generic: '#/components/schemas/GenericBlueprintPayloadDef'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/BlueprintPayloadDefType'
      required:
      - type
      type: object
    StaticBlueprintPayloadDef:
      allOf:
      - $ref: '#/components/schemas/BlueprintPayloadDef'
      - $ref: '#/components/schemas/StaticBlueprintPayloadDef_allOf'
    GenericBlueprintPayloadDef:
      allOf:
      - $ref: '#/components/schemas/BlueprintPayloadDef'
      - $ref: '#/components/schemas/GenericBlueprintPayloadDef_allOf'
    FullyScopedTypeId:
      description: |
        An identifier for a type in the context of a schema in an entity's schema partition.

        Note - this type provides a schema context even for well-known types where this context
        is effectively irrelevant.
      example:
        schema_hash: schema_hash
        entity_address: entity_address
        local_type_id:
          as_sbor:
            programmatic_json: ""
            hex: hex
          kind: WellKnown
          id: 3994939882
      properties:
        entity_address:
          description: Bech32m-encoded human readable version of the entity's address
            (ie the entity's node id)
          type: string
        schema_hash:
          description: "The hex-encoded schema hash, capturing the identity of an\
            \ SBOR schema."
          maxLength: 64
          minLength: 64
          type: string
        local_type_id:
          $ref: '#/components/schemas/LocalTypeId'
      required:
      - entity_address
      - local_type_id
      - schema_hash
      type: object
    ScopedTypeId:
      description: |
        An identifier for a type in the context of a schema.

        The location of the schema store to locate the schema is not included, and
        is known from context. Currently the schema store will be in the
        schema partition under a node (typically a package).

        Note - this type provides scoping to a schema even for well-known types where
        the schema is irrelevant.
      properties:
        schema_hash:
          description: "The hex-encoded schema hash, capturing the identity of an\
            \ SBOR schema."
          maxLength: 64
          minLength: 64
          type: string
        local_type_id:
          $ref: '#/components/schemas/LocalTypeId'
      required:
      - local_type_id
      - schema_hash
      type: object
    BlueprintTypeIdentifier:
      description: |
        An identifier for a defined type in the v1 blueprint version under the given package blueprint.
      properties:
        package_address:
          description: The Bech32m-encoded human readable version of the package address
          type: string
        blueprint_name:
          type: string
        type_name:
          type: string
      required:
      - blueprint_name
      - package_address
      - type_name
      type: object
    SubstateKey:
      discriminator:
        mapping:
          Field: '#/components/schemas/FieldSubstateKey'
          Map: '#/components/schemas/MapSubstateKey'
          Sorted: '#/components/schemas/SortedSubstateKey'
        propertyName: key_type
      properties:
        key_type:
          $ref: '#/components/schemas/SubstateKeyType'
        db_sort_key_hex:
          description: "The hex-encoded bytes of the partially-hashed DB sort key,\
            \ under the given entity partition"
          type: string
      required:
      - db_sort_key_hex
      - key_type
      type: object
    SubstateKeyType:
      enum:
      - Field
      - Map
      - Sorted
      type: string
    FieldSubstateKey:
      allOf:
      - $ref: '#/components/schemas/SubstateKey'
      - $ref: '#/components/schemas/FieldSubstateKey_allOf'
    MapSubstateKey:
      allOf:
      - $ref: '#/components/schemas/SubstateKey'
      - $ref: '#/components/schemas/MapSubstateKey_allOf'
    SortedSubstateKey:
      allOf:
      - $ref: '#/components/schemas/SubstateKey'
      - $ref: '#/components/schemas/SortedSubstateKey_allOf'
    ResourceAddress:
      description: The Bech32m-encoded human readable version of the resource address
      type: string
    ComponentAddress:
      description: The Bech32m-encoded human readable version of the component address
      type: string
    PackageAddress:
      description: The Bech32m-encoded human readable version of the package address
      type: string
    GlobalAddress:
      description: The Bech32m-encoded human readable version of any global address
      type: string
    Instant:
      example:
        date_time: date_time
        unix_timestamp_ms: 60274561830704
      properties:
        unix_timestamp_ms:
          description: "An integer between `0` and `10^14`, marking the unix timestamp\
            \ in ms."
          format: int64
          maximum: 100000000000000
          minimum: 0
          type: integer
        date_time:
          description: |
            The RFC 3339 / ISO 8601 string representation of the timestamp. Will always use "Z" denoting UTC and include milliseconds.
            EG: `2023-01-26T18:30:09.453Z`.
          type: string
      required:
      - date_time
      - unix_timestamp_ms
      type: object
    InstructionResourceChanges:
      example:
        resource_changes:
        - amount: amount
          component_entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
          resource_address: resource_address
          vault_entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
        - amount: amount
          component_entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
          resource_address: resource_address
          vault_entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
        index: 343953088
      properties:
        index:
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        resource_changes:
          items:
            $ref: '#/components/schemas/ResourceChange'
          type: array
      required:
      - index
      - resource_changes
      type: object
    ResourceChange:
      example:
        amount: amount
        component_entity:
          entity_type: null
          entity_address: entity_address
          is_global: true
        resource_address: resource_address
        vault_entity:
          entity_type: null
          entity_address: entity_address
          is_global: true
      properties:
        resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
        component_entity:
          $ref: '#/components/schemas/EntityReference'
        vault_entity:
          $ref: '#/components/schemas/EntityReference'
        amount:
          description: |
            The string-encoded decimal representing the XRD amount put or taken from the vault.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - amount
      - component_entity
      - resource_address
      - vault_entity
      type: object
    Event:
      description: Event emitted by a transaction.
      example:
        data:
          programmatic_json: ""
          hex: hex
        type:
          name: name
          type_reference:
            full_type_id:
              schema_hash: schema_hash
              entity_address: entity_address
              local_type_id:
                as_sbor:
                  programmatic_json: ""
                  hex: hex
                kind: WellKnown
                id: 3994939882
          emitter:
            type: null
      properties:
        type:
          $ref: '#/components/schemas/EventTypeIdentifier'
        data:
          $ref: '#/components/schemas/SborData'
      required:
      - data
      - type
      type: object
    EventTypeIdentifier:
      description: Identifier of a specific event schema.
      example:
        name: name
        type_reference:
          full_type_id:
            schema_hash: schema_hash
            entity_address: entity_address
            local_type_id:
              as_sbor:
                programmatic_json: ""
                hex: hex
              kind: WellKnown
              id: 3994939882
        emitter:
          type: null
      properties:
        emitter:
          $ref: '#/components/schemas/EventEmitterIdentifier'
        type_reference:
          $ref: '#/components/schemas/PackageTypeReference'
        name:
          type: string
      required:
      - emitter
      - name
      - type_reference
      type: object
    EventEmitterIdentifierType:
      enum:
      - Function
      - Method
      type: string
    EventEmitterIdentifier:
      discriminator:
        mapping:
          Function: '#/components/schemas/FunctionEventEmitterIdentifier'
          Method: '#/components/schemas/MethodEventEmitterIdentifier'
        propertyName: type
      example:
        type: null
      properties:
        type:
          $ref: '#/components/schemas/EventEmitterIdentifierType'
      required:
      - type
      type: object
    FunctionEventEmitterIdentifier:
      allOf:
      - $ref: '#/components/schemas/EventEmitterIdentifier'
      - $ref: '#/components/schemas/FunctionEventEmitterIdentifier_allOf'
    MethodEventEmitterIdentifier:
      allOf:
      - $ref: '#/components/schemas/EventEmitterIdentifier'
      - $ref: '#/components/schemas/MethodEventEmitterIdentifier_allOf'
    PublicKeyType:
      enum:
      - EcdsaSecp256k1
      - EddsaEd25519
      type: string
    PublicKey:
      discriminator:
        mapping:
          EcdsaSecp256k1: '#/components/schemas/EcdsaSecp256k1PublicKey'
          EddsaEd25519: '#/components/schemas/EddsaEd25519PublicKey'
        propertyName: key_type
      example:
        key_type: null
      properties:
        key_type:
          $ref: '#/components/schemas/PublicKeyType'
      required:
      - key_type
      type: object
    EcdsaSecp256k1PublicKey:
      allOf:
      - $ref: '#/components/schemas/PublicKey'
      - $ref: '#/components/schemas/EcdsaSecp256k1PublicKey_allOf'
    EddsaEd25519PublicKey:
      allOf:
      - $ref: '#/components/schemas/PublicKey'
      - $ref: '#/components/schemas/EddsaEd25519PublicKey_allOf'
    Signature:
      discriminator:
        mapping:
          EcdsaSecp256k1: '#/components/schemas/EcdsaSecp256k1Signature'
          EddsaEd25519: '#/components/schemas/EddsaEd25519Signature'
        propertyName: key_type
      properties:
        key_type:
          $ref: '#/components/schemas/PublicKeyType'
      required:
      - key_type
      type: object
    EcdsaSecp256k1Signature:
      allOf:
      - $ref: '#/components/schemas/Signature'
      - $ref: '#/components/schemas/EcdsaSecp256k1Signature_allOf'
    EddsaEd25519Signature:
      allOf:
      - $ref: '#/components/schemas/Signature'
      - $ref: '#/components/schemas/EddsaEd25519Signature_allOf'
    SignatureWithPublicKey:
      discriminator:
        mapping:
          EcdsaSecp256k1: '#/components/schemas/EcdsaSecp256k1SignatureWithPublicKey'
          EddsaEd25519: '#/components/schemas/EddsaEd25519SignatureWithPublicKey'
        propertyName: key_type
      properties:
        key_type:
          $ref: '#/components/schemas/PublicKeyType'
      required:
      - key_type
      type: object
    EcdsaSecp256k1SignatureWithPublicKey:
      allOf:
      - $ref: '#/components/schemas/SignatureWithPublicKey'
      - $ref: '#/components/schemas/EcdsaSecp256k1SignatureWithPublicKey_allOf'
    EddsaEd25519SignatureWithPublicKey:
      allOf:
      - $ref: '#/components/schemas/SignatureWithPublicKey'
      - $ref: '#/components/schemas/EddsaEd25519SignatureWithPublicKey_allOf'
    AccessRuleType:
      enum:
      - Protected
      - AllowAll
      - DenyAll
      type: string
    AccessRule:
      discriminator:
        mapping:
          Protected: '#/components/schemas/ProtectedAccessRule'
          AllowAll: '#/components/schemas/AllowAllAccessRule'
          DenyAll: '#/components/schemas/DenyAllAccessRule'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/AccessRuleType'
      required:
      - type
      type: object
    ProtectedAccessRule:
      allOf:
      - $ref: '#/components/schemas/AccessRule'
      - $ref: '#/components/schemas/ProtectedAccessRule_allOf'
    AllowAllAccessRule:
      allOf:
      - $ref: '#/components/schemas/AccessRule'
      - type: object
    DenyAllAccessRule:
      allOf:
      - $ref: '#/components/schemas/AccessRule'
      - type: object
    AccessRuleNodeType:
      enum:
      - ProofRule
      - AnyOf
      - AllOf
      type: string
    AccessRuleNode:
      discriminator:
        mapping:
          ProofRule: '#/components/schemas/ProofAccessRuleNode'
          AnyOf: '#/components/schemas/AnyOfAccessRuleNode'
          AllOf: '#/components/schemas/AllOfAccessRuleNode'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/AccessRuleNodeType'
      required:
      - type
      type: object
    ProofAccessRuleNode:
      allOf:
      - $ref: '#/components/schemas/AccessRuleNode'
      - $ref: '#/components/schemas/ProofAccessRuleNode_allOf'
    AnyOfAccessRuleNode:
      allOf:
      - $ref: '#/components/schemas/AccessRuleNode'
      - $ref: '#/components/schemas/AnyOfAccessRuleNode_allOf'
    AllOfAccessRuleNode:
      allOf:
      - $ref: '#/components/schemas/AccessRuleNode'
      - $ref: '#/components/schemas/AnyOfAccessRuleNode_allOf'
    ProofRuleType:
      enum:
      - Require
      - AmountOf
      - AllOf
      - AnyOf
      - CountOf
      type: string
    ProofRule:
      discriminator:
        mapping:
          Require: '#/components/schemas/RequireProofRule'
          AmountOf: '#/components/schemas/AmountOfProofRule'
          AllOf: '#/components/schemas/AllOfProofRule'
          AnyOf: '#/components/schemas/AnyOfProofRule'
          CountOf: '#/components/schemas/CountOfProofRule'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/ProofRuleType'
      required:
      - type
      type: object
    RequireProofRule:
      allOf:
      - $ref: '#/components/schemas/ProofRule'
      - $ref: '#/components/schemas/RequireProofRule_allOf'
    AmountOfProofRule:
      allOf:
      - $ref: '#/components/schemas/ProofRule'
      - $ref: '#/components/schemas/AmountOfProofRule_allOf'
    AllOfProofRule:
      allOf:
      - $ref: '#/components/schemas/ProofRule'
      - $ref: '#/components/schemas/AllOfProofRule_allOf'
    AnyOfProofRule:
      allOf:
      - $ref: '#/components/schemas/ProofRule'
      - $ref: '#/components/schemas/AllOfProofRule_allOf'
    CountOfProofRule:
      allOf:
      - $ref: '#/components/schemas/ProofRule'
      - $ref: '#/components/schemas/CountOfProofRule_allOf'
    Requirement:
      discriminator:
        mapping:
          Resource: '#/components/schemas/ResourceRequirement'
          NonFungible: '#/components/schemas/NonFungibleRequirement'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/RequirementType'
      required:
      - type
      type: object
    RequirementType:
      enum:
      - Resource
      - NonFungible
      type: string
    ResourceRequirement:
      allOf:
      - $ref: '#/components/schemas/Requirement'
      - $ref: '#/components/schemas/ResourceRequirement_allOf'
    NonFungibleRequirement:
      allOf:
      - $ref: '#/components/schemas/Requirement'
      - $ref: '#/components/schemas/NonFungibleRequirement_allOf'
    OwnerRole:
      properties:
        rule:
          $ref: '#/components/schemas/AccessRule'
        updater:
          $ref: '#/components/schemas/OwnerRoleUpdater'
      required:
      - rule
      - updater
      type: object
    OwnerRoleUpdater:
      enum:
      - None
      - Owner
      - Object
      type: string
    ResourceType:
      enum:
      - Fungible
      - NonFungible
      type: string
    NonFungibleIdType:
      enum:
      - String
      - Integer
      - Bytes
      - RUID
      type: string
    NonFungibleLocalId:
      properties:
        simple_rep:
          description: |
            The simple string representation of the non-fungible id.
            * For string ids, this is `<the-string-id>`
            * For integer ids, this is `#the-integer-id#`
            * For bytes ids, this is `[the-lower-case-hex-representation]`
            * For RUID ids, this is `{...-...-...-...}` where `...` are each 16 hex characters.
            A given non-fungible resource has a fixed `NonFungibleIdType`, so this representation uniquely identifies this non-fungible
            under the given resource address.
          type: string
        id_type:
          $ref: '#/components/schemas/NonFungibleIdType'
        sbor_hex:
          description: The hex-encoded SBOR-encoded bytes of its non-fungible id
          type: string
      required:
      - id_type
      - sbor_hex
      - simple_rep
      type: object
    NonFungibleLocalIdSimpleRepresentation:
      description: |
        The simple string representation of the non-fungible id.
        * For string ids, this is `<the-string-id>`
        * For integer ids, this is `#the-integer-id#`
        * For bytes ids, this is `[the-lower-case-hex-representation]`
        * For RUID ids, this is `{...-...-...-...}` where `...` are each 16 hex characters.
        A given non-fungible resource has a fixed `NonFungibleIdType`, so this representation uniquely identifies this non-fungible
        under the given resource address.
      type: string
    NonFungibleGlobalId:
      properties:
        resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
        local_id:
          $ref: '#/components/schemas/NonFungibleLocalId'
      required:
      - local_id
      - resource_address
      type: object
    ResourceAmount:
      discriminator:
        mapping:
          Fungible: '#/components/schemas/FungibleResourceAmount'
          NonFungible: '#/components/schemas/NonFungibleResourceAmount'
        propertyName: resource_type
      example:
        resource_type: null
        resource_address: resource_address
      properties:
        resource_type:
          $ref: '#/components/schemas/ResourceType'
        resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
      required:
      - resource_address
      - resource_type
      type: object
    FungibleResourceAmount:
      allOf:
      - $ref: '#/components/schemas/ResourceAmount'
      - $ref: '#/components/schemas/FungibleResourceAmount_allOf'
    NonFungibleResourceAmount:
      allOf:
      - $ref: '#/components/schemas/ResourceAmount'
      - $ref: '#/components/schemas/NonFungibleResourceAmount_allOf'
    PresentedBadgeType:
      enum:
      - Resource
      - NonFungible
      type: string
    PresentedBadge:
      discriminator:
        mapping:
          Resource: '#/components/schemas/ResourcePresentedBadge'
          NonFungible: '#/components/schemas/NonFungiblePresentedBadge'
        propertyName: type
      example:
        type: null
        resource_address: resource_address
      properties:
        type:
          $ref: '#/components/schemas/PresentedBadgeType'
        resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
      required:
      - resource_address
      - type
      type: object
    ResourcePresentedBadge:
      allOf:
      - $ref: '#/components/schemas/PresentedBadge'
      - type: object
    NonFungiblePresentedBadge:
      allOf:
      - $ref: '#/components/schemas/PresentedBadge'
      - $ref: '#/components/schemas/NonFungiblePresentedBadge_allOf'
    DataStruct:
      properties:
        struct_data:
          $ref: '#/components/schemas/SborData'
        owned_entities:
          items:
            $ref: '#/components/schemas/EntityReference'
          type: array
        referenced_entities:
          items:
            $ref: '#/components/schemas/EntityReference'
          type: array
      required:
      - owned_entities
      - referenced_entities
      - struct_data
      type: object
    SborData:
      description: |
        Various representations of an SBOR payload.
        Some endpoints may allow opting in/out of each representation.
      example:
        programmatic_json: ""
        hex: hex
      properties:
        hex:
          description: "The hex-encoded, raw SBOR-encoded data"
          type: string
        programmatic_json:
          description: The (untyped) unannotated programmatic SBOR JSON
      type: object
    BlueprintRoyaltyConfig:
      properties:
        is_enabled:
          type: boolean
        method_rules:
          description: The royalty rules by method. The array is only present if royalties
            are enabled.
          items:
            $ref: '#/components/schemas/BlueprintMethodRoyalty'
          type: array
      required:
      - is_enabled
      type: object
    BlueprintMethodRoyalty:
      properties:
        method_name:
          type: string
        royalty_amount:
          $ref: '#/components/schemas/RoyaltyAmount'
      required:
      - method_name
      type: object
    RoyaltyAmount:
      properties:
        amount:
          description: |
            A string-encoded fixed-precision decimal to 18 decimal places.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        unit:
          enum:
          - XRD
          - USD
          type: string
      required:
      - amount
      - unit
      type: object
    ActiveValidator:
      example:
        stake: stake
        address: address
        key: null
      properties:
        address:
          description: The Bech32m-encoded human readable version of the component
            address
          type: string
        key:
          $ref: '#/components/schemas/EcdsaSecp256k1PublicKey'
        stake:
          description: |
            A string-encoded decimal representing the validator's voting power for this epoch.
            This is a snapshot of the amount of XRD staked to the validator at the start of the epoch.
          type: string
      required:
      - address
      - key
      - stake
      type: object
    ScryptoSchema:
      properties:
        sbor_data:
          $ref: '#/components/schemas/SborData'
      required:
      - sbor_data
      type: object
    BlueprintDefinition:
      properties:
        interface:
          $ref: '#/components/schemas/BlueprintInterface'
        function_exports:
          additionalProperties:
            $ref: '#/components/schemas/PackageExport'
          description: A map from the function name to its export
          type: object
        hook_exports:
          description: |
            A map from certain object lifecycle hooks to a callback "package export".
            There is at most one callback registered for each `ObjectHook`.
          items:
            $ref: '#/components/schemas/HookExport'
          type: array
      required:
      - function_exports
      - hook_exports
      - interface
      type: object
    HookExport:
      properties:
        object_hook:
          $ref: '#/components/schemas/ObjectHook'
        export:
          $ref: '#/components/schemas/PackageExport'
      required:
      - export
      - object_hook
      type: object
    ObjectHook:
      enum:
      - OnVirtualize
      - OnMove
      - OnDrop
      type: string
    BlueprintDependencies:
      properties:
        dependencies:
          items:
            $ref: '#/components/schemas/GlobalAddress'
          type: array
      required:
      - dependencies
      type: object
    BlueprintInterface:
      properties:
        outer_blueprint:
          type: string
        generic_type_parameters:
          description: |
            Generic (SBOR) type parameters which need to be filled by a concrete instance
            of this blueprint.
          items:
            $ref: '#/components/schemas/GenericTypeParameter'
          type: array
        is_transient:
          description: "If true, an instantiation of this blueprint cannot be persisted.\
            \ EG buckets and proofs are transient."
          type: boolean
        features:
          items:
            type: string
          type: array
        state:
          $ref: '#/components/schemas/IndexedStateSchema'
        functions:
          additionalProperties:
            $ref: '#/components/schemas/FunctionSchema'
          description: A map from the function name to the FunctionSchema
          type: object
        events:
          additionalProperties:
            $ref: '#/components/schemas/BlueprintPayloadDef'
          description: A map from the event name to the event payload type reference.
          type: object
        types:
          additionalProperties:
            $ref: '#/components/schemas/ScopedTypeId'
          description: |
            A map from the registered type name to the concrete type,
            resolved against a schema from the package's schema partition.
          type: object
      required:
      - events
      - features
      - functions
      - generic_type_parameters
      - is_transient
      - state
      - types
      type: object
    IndexedStateSchema:
      properties:
        fields:
          $ref: '#/components/schemas/BlueprintSchemaFieldPartition'
        collections:
          items:
            $ref: '#/components/schemas/BlueprintSchemaCollectionPartition'
          type: array
        num_partitions:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
      required:
      - collections
      - num_partitions
      type: object
    GenericTypeParameter:
      properties:
        constraints:
          $ref: '#/components/schemas/GenericTypeParameterConstraints'
      required:
      - constraints
      type: object
    GenericTypeParameterConstraints:
      description: |
        The constraints on the concrete type provided to fill the generic type parameter.
        Note: currently, we only support the wildcard (i.e. `Any`) generic type.
      enum:
      - Any
      type: string
    SubstateSystemStructureType:
      enum:
      - SystemField
      - SystemSchema
      - KeyValueStoreEntry
      - ObjectField
      - ObjectKeyValuePartitionEntry
      - ObjectIndexPartitionEntry
      - ObjectSortedIndexPartitionEntry
      type: string
    SubstateSystemStructure:
      discriminator:
        mapping:
          SystemField: '#/components/schemas/SystemFieldStructure'
          SystemSchema: '#/components/schemas/SystemSchemaStructure'
          KeyValueStoreEntry: '#/components/schemas/KeyValueStoreEntryStructure'
          ObjectField: '#/components/schemas/ObjectFieldStructure'
          ObjectKeyValuePartitionEntry: '#/components/schemas/ObjectKeyValuePartitionEntryStructure'
          ObjectIndexPartitionEntry: '#/components/schemas/ObjectIndexPartitionEntryStructure'
          ObjectSortedIndexPartitionEntry: '#/components/schemas/ObjectSortedIndexPartitionEntryStructure'
        propertyName: type
      example:
        type: null
      properties:
        type:
          $ref: '#/components/schemas/SubstateSystemStructureType'
      required:
      - type
      type: object
    SystemFieldStructure:
      allOf:
      - $ref: '#/components/schemas/SubstateSystemStructure'
      - $ref: '#/components/schemas/SystemFieldStructure_allOf'
    SystemSchemaStructure:
      allOf:
      - $ref: '#/components/schemas/SubstateSystemStructure'
      - type: object
    KeyValueStoreEntryStructure:
      allOf:
      - $ref: '#/components/schemas/SubstateSystemStructure'
      - $ref: '#/components/schemas/KeyValueStoreEntryStructure_allOf'
    ObjectFieldStructure:
      allOf:
      - $ref: '#/components/schemas/SubstateSystemStructure'
      - $ref: '#/components/schemas/ObjectFieldStructure_allOf'
    ObjectKeyValuePartitionEntryStructure:
      allOf:
      - $ref: '#/components/schemas/SubstateSystemStructure'
      - $ref: '#/components/schemas/KeyValueBasedStructure'
    ObjectIndexPartitionEntryStructure:
      allOf:
      - $ref: '#/components/schemas/SubstateSystemStructure'
      - $ref: '#/components/schemas/KeyValueBasedStructure'
    ObjectSortedIndexPartitionEntryStructure:
      allOf:
      - $ref: '#/components/schemas/SubstateSystemStructure'
      - $ref: '#/components/schemas/KeyValueBasedStructure'
    KeyValueBasedStructure:
      properties:
        key_schema:
          $ref: '#/components/schemas/ObjectSubstateTypeReference'
        value_schema:
          $ref: '#/components/schemas/ObjectSubstateTypeReference'
      required:
      - key_schema
      - value_schema
      type: object
    SystemFieldKind:
      enum:
      - TypeInfo
      type: string
    ObjectSubstateTypeReferenceType:
      enum:
      - Package
      - ObjectInstance
      type: string
    ObjectSubstateTypeReference:
      discriminator:
        mapping:
          Package: '#/components/schemas/PackageObjectSubstateTypeReference'
          ObjectInstance: '#/components/schemas/ObjectInstanceTypeReference'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/ObjectSubstateTypeReferenceType'
      required:
      - type
      type: object
    PackageObjectSubstateTypeReference:
      allOf:
      - $ref: '#/components/schemas/ObjectSubstateTypeReference'
      - $ref: '#/components/schemas/PackageTypeReference'
    ObjectInstanceTypeReference:
      allOf:
      - $ref: '#/components/schemas/ObjectSubstateTypeReference'
      - $ref: '#/components/schemas/ObjectInstanceTypeReference_allOf'
    PackageTypeReference:
      example:
        full_type_id:
          schema_hash: schema_hash
          entity_address: entity_address
          local_type_id:
            as_sbor:
              programmatic_json: ""
              hex: hex
            kind: WellKnown
            id: 3994939882
      properties:
        full_type_id:
          $ref: '#/components/schemas/FullyScopedTypeId'
      required:
      - full_type_id
      type: object
    PackageExport:
      properties:
        code_hash:
          description: "The hex-encoded code hash, capturing the vm-type and the code\
            \ itself."
          maxLength: 64
          minLength: 64
          type: string
        export_name:
          type: string
      required:
      - code_hash
      - export_name
      type: object
    CodeHash:
      description: "The hex-encoded code hash, capturing the vm-type and the code\
        \ itself."
      maxLength: 64
      minLength: 64
      type: string
    SchemaHash:
      description: "The hex-encoded schema hash, capturing the identity of an SBOR\
        \ schema."
      maxLength: 64
      minLength: 64
      type: string
    AuthConfig:
      properties:
        function_auth_type:
          $ref: '#/components/schemas/FunctionAuthType'
        function_access_rules:
          additionalProperties:
            $ref: '#/components/schemas/AccessRule'
          description: |
            A map from a function name to AccessRule.
            Only exists if `function_auth_type` is set to `FunctionAccessRules`.
          type: object
        method_auth_type:
          $ref: '#/components/schemas/MethodAuthType'
        method_roles:
          $ref: '#/components/schemas/StaticRoleDefinitionAuthTemplate'
      required:
      - function_auth_type
      - method_auth_type
      type: object
    FunctionAuthType:
      enum:
      - AllowAll
      - FunctionAccessRules
      - RootOnly
      type: string
    MethodAuthType:
      enum:
      - AllowAll
      - StaticRoleDefinition
      type: string
    StaticRoleDefinitionAuthTemplate:
      properties:
        role_specification:
          $ref: '#/components/schemas/RoleSpecification'
        roles:
          additionalProperties:
            $ref: '#/components/schemas/RoleDetails'
          description: A map from role name to role details
          type: object
        method_accessibility_map:
          additionalProperties:
            $ref: '#/components/schemas/MethodAccessibility'
          description: A map from a method identifier to MethodAccessibility
          type: object
      required:
      - method_accessibility_map
      - role_specification
      type: object
    RoleSpecification:
      enum:
      - Normal
      - UseOuter
      type: string
    RoleDetails:
      properties:
        updater_roles:
          items:
            type: string
          type: array
      required:
      - updater_roles
      type: object
    MethodAccessibilityType:
      enum:
      - Public
      - OuterObjectOnly
      - RoleProtected
      - OwnPackageOnly
      type: string
    MethodAccessibility:
      discriminator:
        mapping:
          Public: '#/components/schemas/PublicMethodAccessibility'
          OuterObjectOnly: '#/components/schemas/OuterObjectOnlyMethodAccessibility'
          RoleProtected: '#/components/schemas/RoleProtectedMethodAccessibility'
          OwnPackageOnly: '#/components/schemas/OwnPackageOnlyMethodAccessibility'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/MethodAccessibilityType'
      required:
      - type
      type: object
    PublicMethodAccessibility:
      allOf:
      - $ref: '#/components/schemas/MethodAccessibility'
      - type: object
    OuterObjectOnlyMethodAccessibility:
      allOf:
      - $ref: '#/components/schemas/MethodAccessibility'
      - type: object
    RoleProtectedMethodAccessibility:
      allOf:
      - $ref: '#/components/schemas/MethodAccessibility'
      - $ref: '#/components/schemas/RoleProtectedMethodAccessibility_allOf'
    OwnPackageOnlyMethodAccessibility:
      allOf:
      - $ref: '#/components/schemas/MethodAccessibility'
      - type: object
    BlueprintSchemaFieldPartition:
      description: The fields partition of the blueprint.
      properties:
        partition_description:
          $ref: '#/components/schemas/PartitionDescription'
        fields:
          description: The field substates for this blueprint.
          items:
            $ref: '#/components/schemas/FieldSchema'
          type: array
      required:
      - fields
      - partition_description
      type: object
    FieldSchema:
      properties:
        field_type_ref:
          $ref: '#/components/schemas/BlueprintPayloadDef'
        condition:
          $ref: '#/components/schemas/FieldSchemaFeatureCondition'
        transient_default_value_hex:
          description: The hex-encoded default value of this field. Only present if
            this field is transient.
          type: string
      required:
      - field_type_ref
      type: object
    FieldSchemaFeatureConditionType:
      enum:
      - Always
      - IfOwnFeature
      - IfOuterObjectFeature
      type: string
    FieldSchemaFeatureCondition:
      discriminator:
        mapping:
          Always: '#/components/schemas/FieldSchemaFeatureConditionAlways'
          IfOwnFeature: '#/components/schemas/FieldSchemaFeatureConditionIfOwnFeature'
          IfOuterObjectFeature: '#/components/schemas/FieldSchemaFeatureConditionIfOuterObjectFeature'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/FieldSchemaFeatureConditionType'
      required:
      - type
      type: object
    FieldSchemaFeatureConditionAlways:
      allOf:
      - $ref: '#/components/schemas/FieldSchemaFeatureCondition'
      - type: object
    FieldSchemaFeatureConditionIfOwnFeature:
      allOf:
      - $ref: '#/components/schemas/FieldSchemaFeatureCondition'
      - $ref: '#/components/schemas/FieldSchemaFeatureConditionIfOwnFeature_allOf'
    FieldSchemaFeatureConditionIfOuterObjectFeature:
      allOf:
      - $ref: '#/components/schemas/FieldSchemaFeatureCondition'
      - $ref: '#/components/schemas/FieldSchemaFeatureConditionIfOwnFeature_allOf'
    BlueprintSchemaCollectionPartition:
      description: The fields partition of the blueprint.
      properties:
        partition_description:
          $ref: '#/components/schemas/PartitionDescription'
        collection_schema:
          $ref: '#/components/schemas/BlueprintCollectionSchema'
      required:
      - collection_schema
      - partition_description
      type: object
    BlueprintCollectionSchema:
      discriminator:
        mapping:
          KeyValue: '#/components/schemas/KeyValueBlueprintCollectionSchema'
          Index: '#/components/schemas/IndexBlueprintCollectionSchema'
          SortedIndex: '#/components/schemas/SortedIndexBlueprintCollectionSchema'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/BlueprintCollectionSchemaType'
      required:
      - type
      type: object
    BlueprintCollectionSchemaType:
      enum:
      - KeyValue
      - Index
      - SortedIndex
      type: string
    KeyValueBlueprintCollectionSchema:
      allOf:
      - $ref: '#/components/schemas/BlueprintCollectionSchema'
      - $ref: '#/components/schemas/KeyValueBlueprintCollectionSchema_allOf'
    IndexBlueprintCollectionSchema:
      allOf:
      - $ref: '#/components/schemas/BlueprintCollectionSchema'
      - $ref: '#/components/schemas/IndexBlueprintCollectionSchema_allOf'
    SortedIndexBlueprintCollectionSchema:
      allOf:
      - $ref: '#/components/schemas/BlueprintCollectionSchema'
      - $ref: '#/components/schemas/SortedIndexBlueprintCollectionSchema_allOf'
    BlueprintTypeReference:
      discriminator:
        mapping:
          BlueprintSchema: '#/components/schemas/BlueprintSchemaBlueprintTypeReference'
          InstanceSchema: '#/components/schemas/InstanceSchemaBlueprintTypeReference'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/BlueprintTypeReferenceKind'
      required:
      - type
      type: object
    BlueprintTypeReferenceKind:
      enum:
      - BlueprintSchema
      - InstanceSchema
      type: string
    BlueprintSchemaBlueprintTypeReference:
      allOf:
      - $ref: '#/components/schemas/BlueprintTypeReference'
      - $ref: '#/components/schemas/BlueprintSchemaBlueprintTypeReference_allOf'
    InstanceSchemaBlueprintTypeReference:
      allOf:
      - $ref: '#/components/schemas/BlueprintTypeReference'
      - $ref: '#/components/schemas/InstanceSchemaBlueprintTypeReference_allOf'
    LocalTypeId:
      example:
        as_sbor:
          programmatic_json: ""
          hex: hex
        kind: WellKnown
        id: 3994939882
      properties:
        kind:
          description: The location against which to resolve this type reference.
          enum:
          - WellKnown
          - SchemaLocal
          type: string
        id:
          description: |
            A reference to a type, interpreted according to `kind`:
            - If `WellKnown`, then it is a pointer to a well known scrypto type with that ID,
            - If `SchemaLocal`, then it is an index into the given schema.
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        as_sbor:
          $ref: '#/components/schemas/SborData'
      required:
      - as_sbor
      - id
      - kind
      type: object
    VirtualLazyLoadSchema:
      properties:
        export_name:
          type: string
      required:
      - export_name
      type: object
    FunctionSchema:
      properties:
        receiver_info:
          $ref: '#/components/schemas/ReceiverInfo'
        input:
          $ref: '#/components/schemas/BlueprintPayloadDef'
        output:
          $ref: '#/components/schemas/BlueprintPayloadDef'
      required:
      - input
      - output
      type: object
    ReceiverInfo:
      properties:
        receiver:
          enum:
          - SelfRef
          - SelfRefMut
          type: string
        reference_type:
          $ref: '#/components/schemas/ReferenceType'
      required:
      - receiver
      - reference_type
      type: object
    ReferenceType:
      properties:
        raw_bits:
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        normal:
          type: boolean
        direct_access:
          type: boolean
      required:
      - direct_access
      - normal
      - raw_bits
      type: object
    EntityType:
      enum:
      - GlobalPackage
      - GlobalConsensusManager
      - GlobalValidator
      - GlobalGenericComponent
      - GlobalAccount
      - GlobalIdentity
      - GlobalAccessController
      - GlobalVirtualSecp256k1Account
      - GlobalVirtualSecp256k1Identity
      - GlobalVirtualEd25519Account
      - GlobalVirtualEd25519Identity
      - GlobalFungibleResource
      - InternalFungibleVault
      - GlobalNonFungibleResource
      - InternalNonFungibleVault
      - InternalGenericComponent
      - InternalKeyValueStore
      - GlobalOneResourcePool
      - GlobalTwoResourcePool
      - GlobalMultiResourcePool
      - GlobalTransactionTracker
      type: string
    EntityAddress:
      description: Bech32m-encoded human readable version of the entity's address
        (ie the entity's node id)
      type: string
    AttachedModuleId:
      enum:
      - Metadata
      - Royalty
      - RoleAssignment
      type: string
    ModuleId:
      enum:
      - Main
      - Metadata
      - Royalty
      - RoleAssignment
      type: string
    Substate:
      discriminator:
        mapping:
          TypeInfoModuleFieldTypeInfo: '#/components/schemas/TypeInfoModuleFieldTypeInfoSubstate'
          RoleAssignmentModuleFieldOwnerRole: '#/components/schemas/RoleAssignmentModuleFieldOwnerRoleSubstate'
          RoleAssignmentModuleRuleEntry: '#/components/schemas/RoleAssignmentModuleRuleEntrySubstate'
          RoyaltyModuleFieldState: '#/components/schemas/RoyaltyModuleFieldStateSubstate'
          RoyaltyModuleMethodRoyaltyEntry: '#/components/schemas/RoyaltyModuleMethodRoyaltyEntrySubstate'
          MetadataModuleEntry: '#/components/schemas/MetadataModuleEntrySubstate'
          PackageFieldRoyaltyAccumulator: '#/components/schemas/PackageFieldRoyaltyAccumulatorSubstate'
          PackageCodeVmTypeEntry: '#/components/schemas/PackageCodeVmTypeEntrySubstate'
          PackageCodeOriginalCodeEntry: '#/components/schemas/PackageCodeOriginalCodeEntrySubstate'
          PackageCodeInstrumentedCodeEntry: '#/components/schemas/PackageCodeInstrumentedCodeEntrySubstate'
          SchemaEntry: '#/components/schemas/SchemaEntrySubstate'
          PackageBlueprintDefinitionEntry: '#/components/schemas/PackageBlueprintDefinitionEntrySubstate'
          PackageBlueprintDependenciesEntry: '#/components/schemas/PackageBlueprintDependenciesEntrySubstate'
          PackageBlueprintRoyaltyEntry: '#/components/schemas/PackageBlueprintRoyaltyEntrySubstate'
          PackageBlueprintAuthTemplateEntry: '#/components/schemas/PackageBlueprintAuthTemplateEntrySubstate'
          FungibleResourceManagerFieldDivisibility: '#/components/schemas/FungibleResourceManagerFieldDivisibilitySubstate'
          FungibleResourceManagerFieldTotalSupply: '#/components/schemas/FungibleResourceManagerFieldTotalSupplySubstate'
          NonFungibleResourceManagerFieldIdType: '#/components/schemas/NonFungibleResourceManagerFieldIdTypeSubstate'
          NonFungibleResourceManagerFieldTotalSupply: '#/components/schemas/NonFungibleResourceManagerFieldTotalSupplySubstate'
          NonFungibleResourceManagerFieldMutableFields: '#/components/schemas/NonFungibleResourceManagerFieldMutableFieldsSubstate'
          NonFungibleResourceManagerDataEntry: '#/components/schemas/NonFungibleResourceManagerDataEntrySubstate'
          FungibleVaultFieldBalance: '#/components/schemas/FungibleVaultFieldBalanceSubstate'
          FungibleVaultFieldFrozenStatus: '#/components/schemas/FungibleVaultFieldFrozenStatusSubstate'
          NonFungibleVaultFieldBalance: '#/components/schemas/NonFungibleVaultFieldBalanceSubstate'
          NonFungibleVaultFieldFrozenStatus: '#/components/schemas/NonFungibleVaultFieldFrozenStatusSubstate'
          NonFungibleVaultContentsIndexEntry: '#/components/schemas/NonFungibleVaultContentsIndexEntrySubstate'
          ConsensusManagerFieldConfig: '#/components/schemas/ConsensusManagerFieldConfigSubstate'
          ConsensusManagerFieldState: '#/components/schemas/ConsensusManagerFieldStateSubstate'
          ConsensusManagerFieldCurrentValidatorSet: '#/components/schemas/ConsensusManagerFieldCurrentValidatorSetSubstate'
          ConsensusManagerFieldCurrentProposalStatistic: '#/components/schemas/ConsensusManagerFieldCurrentProposalStatisticSubstate'
          ConsensusManagerFieldCurrentTimeRoundedToMinutes: '#/components/schemas/ConsensusManagerFieldCurrentTimeRoundedToMinutesSubstate'
          ConsensusManagerFieldCurrentTime: '#/components/schemas/ConsensusManagerFieldCurrentTimeSubstate'
          ConsensusManagerFieldValidatorRewards: '#/components/schemas/ConsensusManagerFieldValidatorRewardsSubstate'
          ConsensusManagerRegisteredValidatorsByStakeIndexEntry: '#/components/schemas/ConsensusManagerRegisteredValidatorsByStakeIndexEntrySubstate'
          ValidatorFieldState: '#/components/schemas/ValidatorFieldStateSubstate'
          ValidatorFieldProtocolUpdateReadinessSignal: '#/components/schemas/ValidatorFieldProtocolUpdateReadinessSignalSubstate'
          AccountFieldState: '#/components/schemas/AccountFieldStateSubstate'
          AccountVaultEntry: '#/components/schemas/AccountVaultEntrySubstate'
          AccountResourcePreferenceEntry: '#/components/schemas/AccountResourcePreferenceEntrySubstate'
          AccountAuthorizedDepositorEntry: '#/components/schemas/AccountAuthorizedDepositorEntrySubstate'
          AccessControllerFieldState: '#/components/schemas/AccessControllerFieldStateSubstate'
          GenericScryptoComponentFieldState: '#/components/schemas/GenericScryptoComponentFieldStateSubstate'
          GenericKeyValueStoreEntry: '#/components/schemas/GenericKeyValueStoreEntrySubstate'
          OneResourcePoolFieldState: '#/components/schemas/OneResourcePoolFieldStateSubstate'
          TwoResourcePoolFieldState: '#/components/schemas/TwoResourcePoolFieldStateSubstate'
          MultiResourcePoolFieldState: '#/components/schemas/MultiResourcePoolFieldStateSubstate'
          TransactionTrackerFieldState: '#/components/schemas/TransactionTrackerFieldStateSubstate'
          TransactionTrackerCollectionEntry: '#/components/schemas/TransactionTrackerCollectionEntrySubstate'
        propertyName: substate_type
      example:
        substate_type: null
        is_locked: true
      properties:
        substate_type:
          $ref: '#/components/schemas/SubstateType'
        is_locked:
          type: boolean
      required:
      - is_locked
      - substate_type
      type: object
    SubstateType:
      enum:
      - TypeInfoModuleFieldTypeInfo
      - RoleAssignmentModuleFieldOwnerRole
      - RoleAssignmentModuleRuleEntry
      - RoleAssignmentModuleMutabilityEntry
      - RoyaltyModuleFieldState
      - RoyaltyModuleMethodRoyaltyEntry
      - MetadataModuleEntry
      - PackageFieldRoyaltyAccumulator
      - PackageCodeVmTypeEntry
      - PackageCodeOriginalCodeEntry
      - PackageCodeInstrumentedCodeEntry
      - SchemaEntry
      - PackageBlueprintDefinitionEntry
      - PackageBlueprintDependenciesEntry
      - PackageBlueprintRoyaltyEntry
      - PackageBlueprintAuthTemplateEntry
      - PackageFieldFunctionAccessRules
      - FungibleResourceManagerFieldDivisibility
      - FungibleResourceManagerFieldTotalSupply
      - NonFungibleResourceManagerFieldIdType
      - NonFungibleResourceManagerFieldTotalSupply
      - NonFungibleResourceManagerFieldMutableFields
      - NonFungibleResourceManagerDataEntry
      - FungibleVaultFieldBalance
      - FungibleVaultFieldFrozenStatus
      - NonFungibleVaultFieldBalance
      - NonFungibleVaultFieldFrozenStatus
      - NonFungibleVaultContentsIndexEntry
      - ConsensusManagerFieldConfig
      - ConsensusManagerFieldState
      - ConsensusManagerFieldCurrentValidatorSet
      - ConsensusManagerFieldCurrentProposalStatistic
      - ConsensusManagerFieldCurrentTimeRoundedToMinutes
      - ConsensusManagerFieldCurrentTime
      - ConsensusManagerFieldValidatorRewards
      - ConsensusManagerRegisteredValidatorsByStakeIndexEntry
      - ValidatorFieldState
      - ValidatorFieldProtocolUpdateReadinessSignal
      - AccountFieldState
      - AccountVaultEntry
      - AccountResourcePreferenceEntry
      - AccountAuthorizedDepositorEntry
      - AccessControllerFieldState
      - GenericScryptoComponentFieldState
      - GenericKeyValueStoreEntry
      - OneResourcePoolFieldState
      - TwoResourcePoolFieldState
      - MultiResourcePoolFieldState
      - TransactionTrackerFieldState
      - TransactionTrackerCollectionEntry
      type: string
    ObjectRoleKey:
      properties:
        object_module_id:
          $ref: '#/components/schemas/ModuleId'
        role_key:
          type: string
      required:
      - object_module_id
      - role_key
      type: object
    MainMethodKey:
      properties:
        method_name:
          type: string
      required:
      - method_name
      type: object
    MetadataKey:
      properties:
        name:
          type: string
      required:
      - name
      type: object
    PackageCodeKey:
      properties:
        code_hash:
          description: "The hex-encoded code hash, capturing the vm-type and the code\
            \ itself."
          maxLength: 64
          minLength: 64
          type: string
      required:
      - code_hash
      type: object
    SchemaKey:
      properties:
        schema_hash:
          description: "The hex-encoded schema hash, capturing the identity of an\
            \ SBOR schema."
          maxLength: 64
          minLength: 64
          type: string
      required:
      - schema_hash
      type: object
    BlueprintVersionKey:
      properties:
        blueprint_name:
          description: "The first part of the substate key `(blueprint_name, blueprint_version)`."
          type: string
        blueprint_version:
          description: "The second part of the substate key `(blueprint_name, blueprint_version)`."
          type: string
      required:
      - blueprint_name
      - blueprint_version
      type: object
    LocalNonFungibleKey:
      properties:
        non_fungible_local_id:
          $ref: '#/components/schemas/NonFungibleLocalId'
      required:
      - non_fungible_local_id
      type: object
    ActiveValidatorKey:
      properties:
        stake_weighting:
          description: |
            The divided stake, giving a weighting for the validator,
            used as part of the sort key.
          format: int32
          maximum: 65535
          minimum: 0
          type: integer
        validator_address:
          description: The Bech32m-encoded human readable version of the component
            address
          type: string
      required:
      - stake_weighting
      - validator_address
      type: object
    ResourceKey:
      properties:
        resource_address:
          description: The Bech32m-encoded human readable version of the component
            address
          type: string
      required:
      - resource_address
      type: object
    AuthorizedDepositorKey:
      properties:
        badge:
          $ref: '#/components/schemas/AuthorizedDepositorBadge'
      required:
      - badge
      type: object
    AuthorizedDepositorBadgeType:
      enum:
      - Resource
      - NonFungible
      type: string
    AuthorizedDepositorBadge:
      discriminator:
        mapping:
          Resource: '#/components/schemas/ResourceAuthorizedDepositorBadge'
          NonFungible: '#/components/schemas/NonFungibleAuthorizedDepositorBadge'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/AuthorizedDepositorBadgeType'
      required:
      - type
      type: object
    ResourceAuthorizedDepositorBadge:
      allOf:
      - $ref: '#/components/schemas/AuthorizedDepositorBadge'
      - $ref: '#/components/schemas/ResourceAuthorizedDepositorBadge_allOf'
    NonFungibleAuthorizedDepositorBadge:
      allOf:
      - $ref: '#/components/schemas/AuthorizedDepositorBadge'
      - $ref: '#/components/schemas/NonFungibleAuthorizedDepositorBadge_allOf'
    TransactionIdKey:
      properties:
        intent_hash:
          description: |
            The hex-encoded intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core content "intent" of the transaction. Each intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
          maxLength: 64
          minLength: 64
          type: string
        intent_hash_bech32m:
          description: The Bech32m-encoded human readable `IntentHash`.
          type: string
      required:
      - intent_hash
      - intent_hash_bech32m
      type: object
    GenericKey:
      properties:
        key_data:
          $ref: '#/components/schemas/SborData'
      type: object
    TypeInfoModuleFieldTypeInfoSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/TypeInfoModuleFieldTypeInfoSubstate_allOf'
    TypeInfoModuleFieldTypeInfoValue:
      properties:
        details:
          $ref: '#/components/schemas/TypeInfoDetails'
      required:
      - details
      type: object
    TypeInfoType:
      enum:
      - Object
      - KeyValueStore
      type: string
    TypeInfoDetails:
      discriminator:
        mapping:
          Object: '#/components/schemas/ObjectTypeInfoDetails'
          KeyValueStore: '#/components/schemas/KeyValueStoreTypeInfoDetails'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/TypeInfoType'
      required:
      - type
      type: object
    ObjectTypeInfoDetails:
      allOf:
      - $ref: '#/components/schemas/TypeInfoDetails'
      - $ref: '#/components/schemas/ObjectTypeInfoDetails_allOf'
    ModuleVersion:
      properties:
        module:
          $ref: '#/components/schemas/AttachedModuleId'
        version:
          description: "A string of `Major.Minor.Patch` where Major, Minor and Patch\
            \ are all u32s."
          type: string
      required:
      - module
      - version
      type: object
    BlueprintInfo:
      properties:
        package_address:
          description: The Bech32m-encoded human readable version of the package address
          type: string
        blueprint_name:
          type: string
        blueprint_version:
          type: string
        outer_object:
          description: The Bech32m-encoded human readable version of any global address
          type: string
        features:
          items:
            type: string
          type: array
        generic_substitutions:
          items:
            $ref: '#/components/schemas/GenericSubstitution'
          type: array
      required:
      - blueprint_name
      - blueprint_version
      - features
      - generic_substitutions
      - package_address
      type: object
    KeyValueStoreTypeInfoDetails:
      allOf:
      - $ref: '#/components/schemas/TypeInfoDetails'
      - $ref: '#/components/schemas/KeyValueStoreTypeInfoDetails_allOf'
    KeyValueStoreInfo:
      properties:
        key_generic_substitution:
          $ref: '#/components/schemas/GenericSubstitution'
        value_generic_substitution:
          $ref: '#/components/schemas/GenericSubstitution'
        allow_ownership:
          description: Whether the entries of the key-value partition are allowed
            to own child nodes.
          type: boolean
      required:
      - allow_ownership
      - key_generic_substitution
      - value_generic_substitution
      type: object
    GenericSubstitutionType:
      enum:
      - Local
      - Remote
      type: string
    GenericSubstitution:
      discriminator:
        mapping:
          Local: '#/components/schemas/LocalGenericSubstitution'
          Remote: '#/components/schemas/RemoteGenericSubstitution'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/GenericSubstitutionType'
      required:
      - type
      type: object
    LocalGenericSubstitution:
      allOf:
      - $ref: '#/components/schemas/GenericSubstitution'
      - $ref: '#/components/schemas/LocalGenericSubstitution_allOf'
    RemoteGenericSubstitution:
      allOf:
      - $ref: '#/components/schemas/GenericSubstitution'
      - $ref: '#/components/schemas/RemoteGenericSubstitution_allOf'
    RoleAssignmentModuleFieldOwnerRoleSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/RoleAssignmentModuleFieldOwnerRoleSubstate_allOf'
    RoleAssignmentModuleFieldOwnerRoleValue:
      properties:
        owner_role:
          $ref: '#/components/schemas/OwnerRole'
      required:
      - owner_role
      type: object
    RoleAssignmentModuleRuleEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/RoleAssignmentModuleRuleEntrySubstate_allOf'
    RoleAssignmentModuleRuleEntryValue:
      properties:
        access_rule:
          $ref: '#/components/schemas/AccessRule'
      required:
      - access_rule
      type: object
    RoyaltyModuleFieldStateSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/RoyaltyModuleFieldStateSubstate_allOf'
    RoyaltyModuleFieldStateValue:
      properties:
        is_enabled:
          type: boolean
        vault_entity:
          $ref: '#/components/schemas/EntityReference'
      required:
      - is_enabled
      - vault_entity
      type: object
    RoyaltyModuleMethodRoyaltyEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/RoyaltyModuleMethodRoyaltyEntrySubstate_allOf'
    RoyaltyModuleMethodRoyaltyEntryValue:
      description: "If missing, it represents a free method."
      properties:
        royalty_amount:
          $ref: '#/components/schemas/RoyaltyAmount'
      type: object
    MetadataModuleEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/MetadataModuleEntrySubstate_allOf'
    MetadataModuleEntryValue:
      description: "If missing, it represents a non-existing or deleted value."
      properties:
        data_struct:
          $ref: '#/components/schemas/DataStruct'
      required:
      - data_struct
      type: object
    TransactionTrackerFieldStateSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/TransactionTrackerFieldStateSubstate_allOf'
    TransactionTrackerFieldStateValue:
      properties:
        start_epoch:
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        start_partition:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        partition_range_start_inclusive:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        partition_range_end_inclusive:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        epochs_per_partition:
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
      required:
      - epochs_per_partition
      - partition_range_end_inclusive
      - partition_range_start_inclusive
      - start_epoch
      - start_partition
      type: object
    TransactionTrackerCollectionEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/TransactionTrackerCollectionEntrySubstate_allOf'
    TransactionTrackerCollectionEntryValue:
      properties:
        status:
          $ref: '#/components/schemas/TransactionTrackerTransactionStatus'
      required:
      - status
      type: object
    TransactionTrackerTransactionStatus:
      enum:
      - CommittedSuccess
      - CommittedFailure
      - Cancelled
      type: string
    PackageFieldRoyaltyAccumulatorSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/PackageFieldRoyaltyAccumulatorSubstate_allOf'
    PackageFieldRoyaltyAccumulatorValue:
      properties:
        vault_entity:
          $ref: '#/components/schemas/EntityReference'
      required:
      - vault_entity
      type: object
    PackageCodeVmTypeEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/PackageCodeVmTypeEntrySubstate_allOf'
    PackageCodeVmTypeEntryValue:
      properties:
        vm_type:
          $ref: '#/components/schemas/VmType'
      required:
      - vm_type
      type: object
    VmType:
      enum:
      - Native
      - ScryptoV1
      type: string
    PackageCodeOriginalCodeEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/PackageCodeOriginalCodeEntrySubstate_allOf'
    PackageCodeOriginalCodeEntryValue:
      properties:
        code_hex:
          description: |
            Either the hex-encoded WASM package code (if Scrypto), or the native package identifier.
          type: string
      required:
      - code_hex
      type: object
    PackageCodeInstrumentedCodeEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/PackageCodeInstrumentedCodeEntrySubstate_allOf'
    PackageCodeInstrumentedCodeEntryValue:
      properties:
        code_hex:
          description: |
            The hex-encoded instrumented WASM package code.
          type: string
      required:
      - code_hex
      type: object
    SchemaEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/SchemaEntrySubstate_allOf'
    SchemaEntryValue:
      properties:
        schema:
          $ref: '#/components/schemas/ScryptoSchema'
      required:
      - schema
      type: object
    PackageBlueprintDefinitionEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/PackageBlueprintDefinitionEntrySubstate_allOf'
    PackageBlueprintDefinitionEntryValue:
      properties:
        definition:
          $ref: '#/components/schemas/BlueprintDefinition'
      required:
      - definition
      type: object
    PackageBlueprintDependenciesEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/PackageBlueprintDependenciesEntrySubstate_allOf'
    PackageBlueprintDependenciesEntryValue:
      properties:
        dependencies:
          $ref: '#/components/schemas/BlueprintDependencies'
      required:
      - dependencies
      type: object
    PackageBlueprintRoyaltyEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/PackageBlueprintRoyaltyEntrySubstate_allOf'
    PackageBlueprintRoyaltyEntryValue:
      properties:
        royalty_config:
          $ref: '#/components/schemas/BlueprintRoyaltyConfig'
      required:
      - royalty_config
      type: object
    PackageBlueprintAuthTemplateEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/PackageBlueprintAuthTemplateEntrySubstate_allOf'
    PackageBlueprintAuthTemplateEntryValue:
      properties:
        auth_config:
          $ref: '#/components/schemas/AuthConfig'
      required:
      - auth_config
      type: object
    FungibleResourceManagerFieldDivisibilitySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/FungibleResourceManagerFieldDivisibilitySubstate_allOf'
    FungibleResourceManagerFieldDivisibilityValue:
      properties:
        divisibility:
          maximum: 18
          minimum: 0
          type: integer
      required:
      - divisibility
      type: object
    FungibleResourceManagerFieldTotalSupplySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/FungibleResourceManagerFieldTotalSupplySubstate_allOf'
    FungibleResourceManagerFieldTotalSupplyValue:
      properties:
        total_supply:
          description: |
            The string-encoded decimal representing the total supply of this resource.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - total_supply
      type: object
    NonFungibleResourceManagerFieldIdTypeSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/NonFungibleResourceManagerFieldIdTypeSubstate_allOf'
    NonFungibleResourceManagerFieldIdTypeValue:
      properties:
        non_fungible_id_type:
          $ref: '#/components/schemas/NonFungibleIdType'
      required:
      - non_fungible_id_type
      type: object
    NonFungibleResourceManagerFieldTotalSupplySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/NonFungibleResourceManagerFieldTotalSupplySubstate_allOf'
    NonFungibleResourceManagerFieldTotalSupplyValue:
      properties:
        total_supply:
          description: |
            The string-encoded decimal representing the total supply of this resource.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - total_supply
      type: object
    NonFungibleResourceManagerFieldMutableFieldsSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/NonFungibleResourceManagerFieldMutableFieldsSubstate_allOf'
    NonFungibleResourceManagerFieldMutableFieldsValue:
      properties:
        mutable_fields:
          description: The fields of the NF Metadata which are mutable.
          items:
            $ref: '#/components/schemas/MutableField'
          type: array
      required:
      - mutable_fields
      type: object
    MutableField:
      properties:
        name:
          type: string
        index:
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
      required:
      - index
      - name
      type: object
    NonFungibleResourceManagerDataEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/NonFungibleResourceManagerDataEntrySubstate_allOf'
    NonFungibleResourceManagerDataEntryValue:
      description: |
        If missing, it represents a burned Non-Fungible.
        A Non-Fungible with that local id cannot be minted again - the id is not re-usable.
      properties:
        data_struct:
          $ref: '#/components/schemas/DataStruct'
      required:
      - data_struct
      type: object
    FungibleVaultFieldBalanceSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/FungibleVaultFieldBalanceSubstate_allOf'
    FungibleVaultFieldBalanceValue:
      properties:
        amount:
          description: |
            The string-encoded decimal representing the token amount in the vault.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - amount
      type: object
    FungibleVaultFieldFrozenStatusSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/FungibleVaultFieldFrozenStatusSubstate_allOf'
    FungibleVaultFieldFrozenStatusValue:
      properties:
        frozen_status:
          $ref: '#/components/schemas/FrozenStatus'
      required:
      - frozen_status
      type: object
    FrozenStatus:
      properties:
        is_withdraw_frozen:
          type: boolean
        is_deposit_frozen:
          type: boolean
        is_burn_frozen:
          type: boolean
      required:
      - is_burn_frozen
      - is_deposit_frozen
      - is_withdraw_frozen
      type: object
    NonFungibleVaultFieldBalanceSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/NonFungibleVaultFieldBalanceSubstate_allOf'
    NonFungibleVaultFieldBalanceValue:
      properties:
        amount:
          description: |
            The string-encoded decimal representing the token amount in the vault.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - amount
      type: object
    NonFungibleVaultFieldFrozenStatusSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/NonFungibleVaultFieldFrozenStatusSubstate_allOf'
    NonFungibleVaultFieldFrozenStatusValue:
      properties:
        frozen_status:
          $ref: '#/components/schemas/FrozenStatus'
      required:
      - frozen_status
      type: object
    NonFungibleVaultContentsIndexEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/NonFungibleVaultContentsIndexEntrySubstate_allOf'
    NonFungibleVaultContentsIndexEntryValue:
      description: |
        This object is empty, and always present on this substate.
        Note that when a non-fungible is withdrawn from the vault, the full substate is deleted, which is marked
        by a DeletedSubstate action (rather than deletion of the value property in an UpdateSubstate action).
        This is because this is an Index entry, not a KeyValueStore entry.
      properties:
        is_present:
          description: |
            This is a dummy property which is always set to true and means nothing.
            It exists just to ensure this object has a well-defined type in OpenAPI schemas.
          type: boolean
      required:
      - is_present
      type: object
    ConsensusManagerFieldConfigSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/ConsensusManagerFieldConfigSubstate_allOf'
    ConsensusManagerFieldConfigValue:
      properties:
        max_validators:
          description: |
            An integer between `0` and `10^10`, specifying the maximum number of validators
            in the active validator set.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        epoch_change_condition:
          $ref: '#/components/schemas/EpochChangeCondition'
        num_unstake_epochs:
          description: |
            An integer between `0` and `10^10`, specifying the minimum number of epochs
            before an unstaker can withdraw their XRD.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        total_emission_xrd_per_epoch:
          description: |
            A string-encoded fixed-precision decimal to 18 decimal places.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        min_validator_reliability:
          description: |
            A string-encoded fixed-precision decimal to 18 decimal places.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        num_owner_stake_units_unlock_epochs:
          description: |
            An integer between `0` and `10^10`, specifying the minimum number of epochs
            before an owner can take their stake units after attempting to withdraw them.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        num_fee_increase_delay_epochs:
          description: |
            An integer between `0` and `10^10`, specifying the minimum number of epochs
            before a fee increase takes effect.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        validator_creation_usd_equivalent_cost:
          description: |
            The defining decimal cost of a validator in USD.
            This is turned into an XRD cost through the current protocol-based USD/XRD multiplier.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        validator_creation_xrd_cost:
          description: |
            The decimal amount of XRD required to be passed in a bucket to create a validator.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - epoch_change_condition
      - max_validators
      - min_validator_reliability
      - num_fee_increase_delay_epochs
      - num_owner_stake_units_unlock_epochs
      - num_unstake_epochs
      - total_emission_xrd_per_epoch
      - validator_creation_usd_equivalent_cost
      - validator_creation_xrd_cost
      type: object
    ConsensusManagerFieldValidatorRewardsSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/ConsensusManagerFieldValidatorRewardsSubstate_allOf'
    ConsensusManagerFieldValidatorRewardsValue:
      properties:
        proposer_rewards:
          items:
            $ref: '#/components/schemas/ProposerReward'
          type: array
        rewards_vault:
          $ref: '#/components/schemas/EntityReference'
      required:
      - proposer_rewards
      - rewards_vault
      type: object
    EpochChangeCondition:
      properties:
        min_round_count:
          description: "An integer between `0` and `10^10`, specifying the minimum\
            \ number of rounds per epoch"
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        max_round_count:
          description: "An integer between `0` and `10^10`, specifying the maximum\
            \ number of rounds per epoch"
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        target_duration_millis:
          description: |
            An integer between `0` and `10^10`, specifying the target number of milliseconds per epoch,
            assuming the round number is within the min and max range.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
      required:
      - max_round_count
      - min_round_count
      - target_duration_millis
      type: object
    ConsensusManagerFieldStateSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/ConsensusManagerFieldStateSubstate_allOf'
    ConsensusManagerFieldStateValue:
      properties:
        epoch:
          description: "An integer between `0` and `10^10`, marking the current epoch"
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        round:
          description: "An integer between `0` and `10^10`, marking the current round\
            \ in an epoch"
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        is_started:
          type: boolean
        effective_epoch_start:
          $ref: '#/components/schemas/Instant'
        actual_epoch_start:
          $ref: '#/components/schemas/Instant'
        current_leader:
          $ref: '#/components/schemas/ActiveValidatorIndex'
      required:
      - actual_epoch_start
      - effective_epoch_start
      - epoch
      - is_started
      - round
      type: object
    ConsensusManagerFieldCurrentProposalStatisticSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/ConsensusManagerFieldCurrentProposalStatisticSubstate_allOf'
    ConsensusManagerFieldCurrentProposalStatisticValue:
      properties:
        completed:
          description: "The number of successfully completed proposals this epoch\
            \ for each validator, indexed by the validator order in the active set."
          items:
            format: int64
            maximum: 10000000000
            minimum: 0
            type: integer
          type: array
        missed:
          description: "The number of missed proposals this epoch for each validator,\
            \ indexed by the validator order in the active set."
          items:
            format: int64
            maximum: 10000000000
            minimum: 0
            type: integer
          type: array
      required:
      - completed
      - missed
      type: object
    ConsensusManagerFieldCurrentValidatorSetSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/ConsensusManagerFieldCurrentValidatorSetSubstate_allOf'
    ConsensusManagerFieldCurrentValidatorSetValue:
      properties:
        validator_set:
          items:
            $ref: '#/components/schemas/ActiveValidator'
          type: array
      required:
      - validator_set
      type: object
    ConsensusManagerRegisteredValidatorsByStakeIndexEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/ConsensusManagerRegisteredValidatorsByStakeIndexEntrySubstate_allOf'
    ConsensusManagerRegisteredValidatorsByStakeIndexEntryValue:
      properties:
        active_validator:
          $ref: '#/components/schemas/ActiveValidator'
      required:
      - active_validator
      type: object
    ConsensusManagerFieldCurrentTimeRoundedToMinutesSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/ConsensusManagerFieldCurrentTimeRoundedToMinutesSubstate_allOf'
    ConsensusManagerFieldCurrentTimeRoundedToMinutesValue:
      properties:
        proposer_timestamp_rounded_down_to_minute:
          $ref: '#/components/schemas/Instant'
      required:
      - proposer_timestamp_rounded_down_to_minute
      type: object
    ConsensusManagerFieldCurrentTimeSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/ConsensusManagerFieldCurrentTimeSubstate_allOf'
    ConsensusManagerFieldCurrentTimeValue:
      properties:
        proposer_timestamp:
          $ref: '#/components/schemas/Instant'
      required:
      - proposer_timestamp
      type: object
    ValidatorFieldStateSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/ValidatorFieldStateSubstate_allOf'
    ValidatorFieldStateValue:
      properties:
        sorted_key:
          $ref: '#/components/schemas/SubstateKey'
        public_key:
          $ref: '#/components/schemas/EcdsaSecp256k1PublicKey'
        is_registered:
          type: boolean
        accepts_delegated_stake:
          type: boolean
        validator_fee_factor:
          description: |
            A string-encoded fixed-precision decimal to 18 decimal places.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        validator_fee_change_request:
          $ref: '#/components/schemas/ValidatorFeeChangeRequest'
        stake_unit_resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
        stake_xrd_vault:
          $ref: '#/components/schemas/EntityReference'
        claim_token_resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
        pending_xrd_withdraw_vault:
          $ref: '#/components/schemas/EntityReference'
        locked_owner_stake_unit_vault:
          $ref: '#/components/schemas/EntityReference'
        pending_owner_stake_unit_unlock_vault:
          $ref: '#/components/schemas/EntityReference'
        pending_owner_stake_unit_withdrawals:
          items:
            $ref: '#/components/schemas/PendingOwnerStakeWithdrawal'
          type: array
        already_unlocked_owner_stake_unit_amount:
          description: |
            A string-encoded fixed-precision decimal to 18 decimal places.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - accepts_delegated_stake
      - already_unlocked_owner_stake_unit_amount
      - claim_token_resource_address
      - is_registered
      - locked_owner_stake_unit_vault
      - pending_owner_stake_unit_unlock_vault
      - pending_owner_stake_unit_withdrawals
      - pending_xrd_withdraw_vault
      - public_key
      - stake_unit_resource_address
      - stake_xrd_vault
      - validator_fee_factor
      type: object
    ValidatorFeeChangeRequest:
      properties:
        epoch_effective:
          description: |
            An integer between `0` and `10^10`, marking the epoch at which the fee change becomes effective.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        new_fee_factor:
          description: |
            A string-encoded fixed-precision decimal to 18 decimal places.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - epoch_effective
      - new_fee_factor
      type: object
    PendingOwnerStakeWithdrawal:
      properties:
        epoch_unlocked:
          description: |
            An integer between `0` and `10^10`, marking the epoch when the stake units are unlocked for withdrawal.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        stake_unit_amount:
          description: |
            A string-encoded fixed-precision decimal to 18 decimal places.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - epoch_unlocked
      - stake_unit_amount
      type: object
    ValidatorFieldProtocolUpdateReadinessSignalSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/ValidatorFieldProtocolUpdateReadinessSignalSubstate_allOf'
    ValidatorFieldProtocolUpdateReadinessSignalValue:
      properties:
        protocol_version_name:
          description: |
            If present, indicates the validator is currently signalling readiness for the given protocol version.
            Is validated to be exactly 32 chars long (if it exists).
          type: string
      type: object
    AccountFieldStateSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/AccountFieldStateSubstate_allOf'
    AccountFieldStateValue:
      properties:
        default_deposit_rule:
          $ref: '#/components/schemas/DefaultDepositRule'
      required:
      - default_deposit_rule
      type: object
    DefaultDepositRule:
      description: |
        This setting has the following interpretations:
        - Allow: Allows the deposit of all resources - the deny list is honored in this state.
        - Reject: Disallows the deposit of all resources - the allow list is honored in this state.
        - AllowExisting: Only deposits of existing resources *or* XRD are accepted - both allow and deny lists are honored in this mode.
      enum:
      - Accept
      - Reject
      - AllowExisting
      type: string
    AccountVaultEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/AccountVaultEntrySubstate_allOf'
    AccountVaultEntryValue:
      properties:
        vault:
          $ref: '#/components/schemas/EntityReference'
      required:
      - vault
      type: object
    AccountResourcePreferenceEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/AccountResourcePreferenceEntrySubstate_allOf'
    AccountResourcePreferenceEntryValue:
      properties:
        resource_preference:
          $ref: '#/components/schemas/ResourcePreference'
      required:
      - resource_preference
      type: object
    ResourcePreference:
      enum:
      - Allowed
      - Disallowed
      type: string
    AccountAuthorizedDepositorEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/AccountAuthorizedDepositorEntrySubstate_allOf'
    AccountAuthorizedDepositorEntryValue:
      description: Empty value. The existence of the key implies the depositor is
        authorized.
      properties:
        is_authorized:
          description: |
            This is always true. This field is just added to ensure we return some data as the value,
            so a present entry is not confused by clients for a deleted/missing entry (which would imply
            not authorized).
          type: boolean
      required:
      - is_authorized
      type: object
    AccessControllerFieldStateSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/AccessControllerFieldStateSubstate_allOf'
    AccessControllerFieldStateValue:
      properties:
        controlled_vault:
          $ref: '#/components/schemas/EntityReference'
        timed_recovery_delay_minutes:
          description: |
            An integer between `0` and `2^32 - 1`, specifying the amount of time (in minutes) that
            it takes for timed recovery to be done. When not present, then timed recovery can not be
            performed through this access controller.
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        recovery_badge_resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
        is_primary_role_locked:
          description: Whether the primary role is currently locked.
          type: boolean
        primary_role_recovery_attempt:
          $ref: '#/components/schemas/PrimaryRoleRecoveryAttempt'
        has_primary_role_badge_withdraw_attempt:
          description: Whether the primary role badge withdraw is currently being
            attempted.
          type: boolean
        recovery_role_recovery_attempt:
          $ref: '#/components/schemas/RecoveryRoleRecoveryAttempt'
        has_recovery_role_badge_withdraw_attempt:
          description: Whether the recovery role badge withdraw is currently being
            attempted.
          type: boolean
      required:
      - controlled_vault
      - has_primary_role_badge_withdraw_attempt
      - has_recovery_role_badge_withdraw_attempt
      - is_primary_role_locked
      - recovery_badge_resource_address
      type: object
    PrimaryRoleRecoveryAttempt:
      properties:
        recovery_proposal:
          $ref: '#/components/schemas/RecoveryProposal'
      required:
      - recovery_proposal
      type: object
    RecoveryRoleRecoveryAttempt:
      properties:
        recovery_proposal:
          $ref: '#/components/schemas/RecoveryProposal'
        timed_recovery_allowed_after:
          $ref: '#/components/schemas/Instant'
      required:
      - recovery_proposal
      type: object
    RecoveryProposal:
      properties:
        primary_role:
          $ref: '#/components/schemas/AccessRule'
        recovery_role:
          $ref: '#/components/schemas/AccessRule'
        confirmation_role:
          $ref: '#/components/schemas/AccessRule'
        timed_recovery_delay_minutes:
          description: |
            An integer between `0` and `2^32 - 1`, specifying the optional proposal delay of timed recoveries.
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
      required:
      - confirmation_role
      - primary_role
      - recovery_role
      type: object
    GenericScryptoComponentFieldStateSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/GenericScryptoComponentFieldStateSubstate_allOf'
    GenericScryptoComponentFieldStateValue:
      properties:
        data_struct:
          $ref: '#/components/schemas/DataStruct'
      required:
      - data_struct
      type: object
    GenericKeyValueStoreEntrySubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/GenericKeyValueStoreEntrySubstate_allOf'
    GenericKeyValueStoreEntryValue:
      description: "If not present, the entry has been deleted."
      properties:
        data:
          $ref: '#/components/schemas/DataStruct'
      required:
      - data
      type: object
    OneResourcePoolFieldStateSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/OneResourcePoolFieldStateSubstate_allOf'
    OneResourcePoolFieldStateValue:
      properties:
        vault:
          $ref: '#/components/schemas/EntityReference'
        pool_unit_resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
      required:
      - pool_unit_resource_address
      - vault
      type: object
    TwoResourcePoolFieldStateSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/TwoResourcePoolFieldStateSubstate_allOf'
    TwoResourcePoolFieldStateValue:
      properties:
        vaults:
          items:
            $ref: '#/components/schemas/PoolVault'
          maxItems: 2
          minItems: 2
          type: array
        pool_unit_resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
      required:
      - pool_unit_resource_address
      - vaults
      type: object
    MultiResourcePoolFieldStateSubstate:
      allOf:
      - $ref: '#/components/schemas/Substate'
      - $ref: '#/components/schemas/MultiResourcePoolFieldStateSubstate_allOf'
    MultiResourcePoolFieldStateValue:
      properties:
        vaults:
          items:
            $ref: '#/components/schemas/PoolVault'
          minItems: 3
          type: array
        pool_unit_resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
      required:
      - pool_unit_resource_address
      - vaults
      type: object
    PoolVault:
      properties:
        vault:
          $ref: '#/components/schemas/EntityReference'
        resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
      required:
      - resource_address
      - vault
      type: object
    LtsTransactionConstructionRequest:
      example:
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
      required:
      - network
      type: object
    LtsTransactionConstructionResponse:
      example:
        ledger_clock:
          date_time: date_time
          unix_timestamp_ms: 60274561830704
        current_epoch: 800828190
      properties:
        current_epoch:
          description: "An integer between `0` and `10^10`, marking the current epoch"
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        ledger_clock:
          $ref: '#/components/schemas/Instant'
      required:
      - current_epoch
      - ledger_clock
      type: object
    LtsTransactionStatusRequest:
      example:
        intent_hash: intent_hash
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        intent_hash:
          description: |
            The intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core content "intent" of the transaction. Each intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
            Either hex or Bech32m-encoded strings are supported.
          type: string
      required:
      - intent_hash
      - network
      type: object
    LtsTransactionStatusResponse:
      example:
        committed_state_version: 8008281904611
        status_description: status_description
        invalid_from_epoch: 6027456183
        known_payloads:
        - error_message: error_message
          state_version: 14658129805030
          payload_hash: payload_hash
          payload_hash_bech32m: payload_hash_bech32m
          status: null
        - error_message: error_message
          state_version: 14658129805030
          payload_hash: payload_hash
          payload_hash_bech32m: payload_hash_bech32m
          status: null
        intent_status: null
      properties:
        intent_status:
          $ref: '#/components/schemas/LtsTransactionIntentStatus'
        status_description:
          description: |
            An explanation as to why the intent status is resolved as it is.
          type: string
        committed_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        invalid_from_epoch:
          description: |
            An integer between `0` and `10^10`, marking the epoch from which the transaction will no longer be valid, and be permanently rejected.
            Only present if the intent status is InMempool or Unknown and we know about a payload.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        known_payloads:
          items:
            $ref: '#/components/schemas/LtsTransactionPayloadDetails'
          type: array
      required:
      - intent_status
      - known_payloads
      - status_description
      type: object
    LtsTransactionPayloadDetails:
      example:
        error_message: error_message
        state_version: 14658129805030
        payload_hash: payload_hash
        payload_hash_bech32m: payload_hash_bech32m
        status: null
      properties:
        payload_hash:
          description: |
            The hex-encoded notarized transaction hash for a user transaction.
            This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
          maxLength: 64
          minLength: 64
          type: string
        payload_hash_bech32m:
          description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
          type: string
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        status:
          $ref: '#/components/schemas/LtsTransactionPayloadStatus'
        error_message:
          description: "An explanation for the error, if failed or rejected"
          type: string
      required:
      - payload_hash
      - payload_hash_bech32m
      - status
      type: object
    LtsTransactionIntentStatus:
      description: |
        The status of the transaction intent, as determined by the node.
        FateUncertain or FateUncertainButLikelyRejection mean that it's still possible that a payload containing the transaction
      enum:
      - CommittedSuccess
      - CommittedFailure
      - PermanentRejection
      - InMempool
      - NotSeen
      - FateUncertain
      - FateUncertainButLikelyRejection
      type: string
    LtsTransactionPayloadStatus:
      description: |
        The status of the transaction payload, as per this node.
        A NotInMempool status means that it wasn't rejected at last execution attempt, but it's not currently in the mempool either.
      enum:
      - CommittedSuccess
      - CommittedFailure
      - PermanentlyRejected
      - TransientlyRejected
      - InMempool
      - NotInMempool
      type: string
    LtsTransactionSubmitRequest:
      example:
        notarized_transaction_hex: notarized_transaction_hex
        force_recalculate: true
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        notarized_transaction_hex:
          description: "A hex-encoded, compiled notarized transaction."
          type: string
        force_recalculate:
          description: "If true, the transaction validity is freshly recalculated\
            \ without using any caches (defaults false)"
          type: boolean
      required:
      - network
      - notarized_transaction_hex
      type: object
    LtsTransactionSubmitResponse:
      example:
        duplicate: true
      properties:
        duplicate:
          description: Is true if the transaction is a duplicate of an existing transaction
            in the mempool.
          type: boolean
      required:
      - duplicate
      type: object
    LtsTransactionSubmitErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - $ref: '#/components/schemas/LtsTransactionSubmitErrorResponse_allOf'
    LtsTransactionSubmitErrorDetailsType:
      enum:
      - PriorityThresholdNotMet
      - IntentAlreadyCommitted
      - Rejected
      type: string
    LtsTransactionSubmitErrorDetails:
      discriminator:
        mapping:
          PriorityThresholdNotMet: '#/components/schemas/LtsTransactionSubmitPriorityThresholdNotMetErrorDetails'
          IntentAlreadyCommitted: '#/components/schemas/LtsTransactionSubmitIntentAlreadyCommitted'
          Rejected: '#/components/schemas/LtsTransactionSubmitRejectedErrorDetails'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/LtsTransactionSubmitErrorDetailsType'
      required:
      - type
      type: object
    LtsTransactionSubmitPriorityThresholdNotMetErrorDetails:
      allOf:
      - $ref: '#/components/schemas/LtsTransactionSubmitErrorDetails'
      - $ref: '#/components/schemas/LtsTransactionSubmitPriorityThresholdNotMetErrorDetails_allOf'
    LtsTransactionSubmitIntentAlreadyCommitted:
      allOf:
      - $ref: '#/components/schemas/LtsTransactionSubmitErrorDetails'
      - $ref: '#/components/schemas/LtsTransactionSubmitIntentAlreadyCommitted_allOf'
    LtsTransactionSubmitRejectedErrorDetails:
      allOf:
      - $ref: '#/components/schemas/LtsTransactionSubmitErrorDetails'
      - $ref: '#/components/schemas/LtsTransactionSubmitRejectedErrorDetails_allOf'
    LtsStateAccountAllFungibleResourceBalancesRequest:
      example:
        account_address: account_address
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        account_address:
          description: The Bech32m-encoded human readable version of the account's
            address
          type: string
      required:
      - account_address
      - network
      type: object
    LtsStateAccountAllFungibleResourceBalancesResponse:
      example:
        fungible_resource_balances:
        - fungible_resource_address: fungible_resource_address
          amount: amount
        - fungible_resource_address: fungible_resource_address
          amount: amount
        state_version: 8008281904611
        account_address: account_address
        ledger_header_summary:
          epoch_round:
            round: 1465812980
            epoch: 6027456183
          proposer_timestamp:
            date_time: date_time
            unix_timestamp_ms: 60274561830704
          ledger_hashes:
            state_tree_hash: state_tree_hash
            transaction_tree_hash: transaction_tree_hash
            receipt_tree_hash: receipt_tree_hash
      properties:
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        ledger_header_summary:
          $ref: '#/components/schemas/LedgerHeaderSummary'
        account_address:
          description: The Bech32m-encoded human readable version of the account's
            address
          type: string
        fungible_resource_balances:
          description: A list containing all resource balances for the requested account.
          items:
            $ref: '#/components/schemas/LtsFungibleResourceBalance'
          type: array
      required:
      - account_address
      - fungible_resource_balances
      - ledger_header_summary
      - state_version
      type: object
    LtsFungibleResourceBalance:
      example:
        fungible_resource_address: fungible_resource_address
        amount: amount
      properties:
        fungible_resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
        amount:
          description: |
            The string-encoded decimal representing the amount of the fungible resource.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - amount
      - fungible_resource_address
      type: object
    LtsStateAccountFungibleResourceBalanceRequest:
      example:
        account_address: account_address
        resource_address: resource_address
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        account_address:
          description: The Bech32m-encoded human readable version of the account's
            address
          type: string
        resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
      required:
      - account_address
      - network
      - resource_address
      type: object
    LtsStateAccountFungibleResourceBalanceResponse:
      example:
        state_version: 8008281904611
        account_address: account_address
        fungible_resource_balance:
          fungible_resource_address: fungible_resource_address
          amount: amount
        ledger_header_summary:
          epoch_round:
            round: 1465812980
            epoch: 6027456183
          proposer_timestamp:
            date_time: date_time
            unix_timestamp_ms: 60274561830704
          ledger_hashes:
            state_tree_hash: state_tree_hash
            transaction_tree_hash: transaction_tree_hash
            receipt_tree_hash: receipt_tree_hash
      properties:
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        ledger_header_summary:
          $ref: '#/components/schemas/LedgerHeaderSummary'
        account_address:
          description: The Bech32m-encoded human readable version of the account's
            address
          type: string
        fungible_resource_balance:
          $ref: '#/components/schemas/LtsFungibleResourceBalance'
      required:
      - account_address
      - fungible_resource_balance
      - ledger_header_summary
      - state_version
      type: object
    LtsStateAccountDepositBehaviourRequest:
      example:
        badge:
          type: null
          resource_address: resource_address
        account_address: account_address
        resource_addresses:
        - null
        - null
        - null
        - null
        - null
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        account_address:
          description: The Bech32m-encoded human readable version of the account's
            address.
          type: string
        resource_addresses:
          description: The resource addresses to check the deposit behaviours of.
          items:
            $ref: '#/components/schemas/ResourceAddress'
          maxItems: 20
          type: array
        badge:
          $ref: '#/components/schemas/PresentedBadge'
      required:
      - account_address
      - network
      type: object
    LtsStateAccountDepositBehaviourResponse:
      example:
        state_version: 8008281904611
        default_deposit_rule: null
        is_badge_authorized_depositor: true
        ledger_header_summary:
          epoch_round:
            round: 1465812980
            epoch: 6027456183
          proposer_timestamp:
            date_time: date_time
            unix_timestamp_ms: 60274561830704
          ledger_hashes:
            state_tree_hash: state_tree_hash
            transaction_tree_hash: transaction_tree_hash
            receipt_tree_hash: receipt_tree_hash
        resource_specific_behaviours:
          key:
            allows_try_deposit: true
            is_xrd: true
            vault_exists: true
            resource_preference: null
      properties:
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        ledger_header_summary:
          $ref: '#/components/schemas/LedgerHeaderSummary'
        default_deposit_rule:
          $ref: '#/components/schemas/DefaultDepositRule'
        is_badge_authorized_depositor:
          description: |
            Whether the input `badge` belongs to the account's set of authorized depositors.
            This field will only be present if any badge was passed in the request.
          type: boolean
        resource_specific_behaviours:
          additionalProperties:
            $ref: '#/components/schemas/ResourceSpecificDepositBehaviour'
          description: |
            A map from one of the input `resource_addresses` to its specific deposit behavior configured for this account.
            This field will only be present if an array of specific resource addresses was passed in the request (even if empty).
          type: object
      required:
      - default_deposit_rule
      - ledger_header_summary
      - state_version
      type: object
    ResourceSpecificDepositBehaviour:
      example:
        allows_try_deposit: true
        is_xrd: true
        vault_exists: true
        resource_preference: null
      properties:
        resource_preference:
          $ref: '#/components/schemas/ResourcePreference'
        vault_exists:
          description: |
            Whether the account contains a vault for the resource (even if 0 balance).
            This plays a role when `DefaultDepositRule` is `AllowExisting`.
          type: boolean
        is_xrd:
          description: |
            Whether the resource represents the native XRD fungible.
            XRD is a special case which does not require `vault_exists = true` to satisfy the `AllowExisting` rule.
          type: boolean
        allows_try_deposit:
          description: |
            The fully resolved `try_deposit_*` ability of this resource (which takes all the inputs
            into account, including the authorized depositor badge, the default deposit rule and
            the above resource-specific circumstances).
          type: boolean
      required:
      - allows_try_deposit
      - is_xrd
      - vault_exists
      type: object
    LtsStreamTransactionOutcomesRequest:
      description: |
        A request to retrieve a sublist of committed transactions from the ledger.
      example:
        limit: 6
        from_state_version: 8008281904611
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        from_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        limit:
          description: The maximum number of transactions that will be returned.
          type: integer
      required:
      - from_state_version
      - limit
      - network
      type: object
    LtsStreamTransactionOutcomesResponse:
      example:
        committed_transaction_outcomes:
        - user_transaction_identifiers:
            intent_hash: intent_hash
            intent_hash_bech32m: intent_hash_bech32m
            signed_intent_hash: signed_intent_hash
            payload_hash: payload_hash
            payload_hash_bech32m: payload_hash_bech32m
            signed_intent_hash_bech32m: signed_intent_hash_bech32m
          resultant_account_fungible_balances:
          - resultant_balances:
            - resultant_balance: resultant_balance
              resource_address: resource_address
            - resultant_balance: resultant_balance
              resource_address: resource_address
            account_address: account_address
          - resultant_balances:
            - resultant_balance: resultant_balance
              resource_address: resource_address
            - resultant_balance: resultant_balance
              resource_address: resource_address
            account_address: account_address
          state_version: 59621339166832
          fungible_entity_balance_changes:
          - entity_address: entity_address
            non_fee_balance_changes:
            - balance_change: balance_change
              resource_address: resource_address
            - balance_change: balance_change
              resource_address: resource_address
            fee_balance_change:
              balance_change: balance_change
              resource_address: resource_address
            fee_balance_changes:
            - balance_change: balance_change
              type: null
              resource_address: resource_address
            - balance_change: balance_change
              type: null
              resource_address: resource_address
          - entity_address: entity_address
            non_fee_balance_changes:
            - balance_change: balance_change
              resource_address: resource_address
            - balance_change: balance_change
              resource_address: resource_address
            fee_balance_change:
              balance_change: balance_change
              resource_address: resource_address
            fee_balance_changes:
            - balance_change: balance_change
              type: null
              resource_address: resource_address
            - balance_change: balance_change
              type: null
              resource_address: resource_address
          non_fungible_entity_balance_changes:
          - removed:
            - null
            - null
            added:
            - null
            - null
            entity_address: entity_address
            resource_address: resource_address
          - removed:
            - null
            - null
            added:
            - null
            - null
            entity_address: entity_address
            resource_address: resource_address
          total_fee: total_fee
          proposer_timestamp_ms: 56373766566333
          accumulator_hash: accumulator_hash
          status: null
        - user_transaction_identifiers:
            intent_hash: intent_hash
            intent_hash_bech32m: intent_hash_bech32m
            signed_intent_hash: signed_intent_hash
            payload_hash: payload_hash
            payload_hash_bech32m: payload_hash_bech32m
            signed_intent_hash_bech32m: signed_intent_hash_bech32m
          resultant_account_fungible_balances:
          - resultant_balances:
            - resultant_balance: resultant_balance
              resource_address: resource_address
            - resultant_balance: resultant_balance
              resource_address: resource_address
            account_address: account_address
          - resultant_balances:
            - resultant_balance: resultant_balance
              resource_address: resource_address
            - resultant_balance: resultant_balance
              resource_address: resource_address
            account_address: account_address
          state_version: 59621339166832
          fungible_entity_balance_changes:
          - entity_address: entity_address
            non_fee_balance_changes:
            - balance_change: balance_change
              resource_address: resource_address
            - balance_change: balance_change
              resource_address: resource_address
            fee_balance_change:
              balance_change: balance_change
              resource_address: resource_address
            fee_balance_changes:
            - balance_change: balance_change
              type: null
              resource_address: resource_address
            - balance_change: balance_change
              type: null
              resource_address: resource_address
          - entity_address: entity_address
            non_fee_balance_changes:
            - balance_change: balance_change
              resource_address: resource_address
            - balance_change: balance_change
              resource_address: resource_address
            fee_balance_change:
              balance_change: balance_change
              resource_address: resource_address
            fee_balance_changes:
            - balance_change: balance_change
              type: null
              resource_address: resource_address
            - balance_change: balance_change
              type: null
              resource_address: resource_address
          non_fungible_entity_balance_changes:
          - removed:
            - null
            - null
            added:
            - null
            - null
            entity_address: entity_address
            resource_address: resource_address
          - removed:
            - null
            - null
            added:
            - null
            - null
            entity_address: entity_address
            resource_address: resource_address
          total_fee: total_fee
          proposer_timestamp_ms: 56373766566333
          accumulator_hash: accumulator_hash
          status: null
        max_ledger_state_version: 14658129805030
        count: 6027
        from_state_version: 8008281904611
      properties:
        from_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        count:
          description: "An integer between `0` and `10000`, giving the total count\
            \ of transactions in the returned response"
          format: int32
          maximum: 10000
          minimum: 0
          type: integer
        max_ledger_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        committed_transaction_outcomes:
          description: A committed transaction outcomes list starting from the `from_state_version`
            (inclusive).
          items:
            $ref: '#/components/schemas/LtsCommittedTransactionOutcome'
          type: array
      required:
      - committed_transaction_outcomes
      - count
      - from_state_version
      - max_ledger_state_version
      type: object
    LtsCommittedTransactionStatus:
      description: The status of the transaction
      enum:
      - Success
      - Failure
      type: string
    LtsCommittedTransactionOutcome:
      description: |
        For the given transaction, contains the status, total fee summary and individual entity resource balance changes.
        The balance changes accounts for the fee payments as well.
        Current implementation does not take into account recalls, but this will change in a future update.
        For failed transactions, current implementation does not return any balance changes (not even the fee payments).
        This will also change in a future update.
      example:
        user_transaction_identifiers:
          intent_hash: intent_hash
          intent_hash_bech32m: intent_hash_bech32m
          signed_intent_hash: signed_intent_hash
          payload_hash: payload_hash
          payload_hash_bech32m: payload_hash_bech32m
          signed_intent_hash_bech32m: signed_intent_hash_bech32m
        resultant_account_fungible_balances:
        - resultant_balances:
          - resultant_balance: resultant_balance
            resource_address: resource_address
          - resultant_balance: resultant_balance
            resource_address: resource_address
          account_address: account_address
        - resultant_balances:
          - resultant_balance: resultant_balance
            resource_address: resource_address
          - resultant_balance: resultant_balance
            resource_address: resource_address
          account_address: account_address
        state_version: 59621339166832
        fungible_entity_balance_changes:
        - entity_address: entity_address
          non_fee_balance_changes:
          - balance_change: balance_change
            resource_address: resource_address
          - balance_change: balance_change
            resource_address: resource_address
          fee_balance_change:
            balance_change: balance_change
            resource_address: resource_address
          fee_balance_changes:
          - balance_change: balance_change
            type: null
            resource_address: resource_address
          - balance_change: balance_change
            type: null
            resource_address: resource_address
        - entity_address: entity_address
          non_fee_balance_changes:
          - balance_change: balance_change
            resource_address: resource_address
          - balance_change: balance_change
            resource_address: resource_address
          fee_balance_change:
            balance_change: balance_change
            resource_address: resource_address
          fee_balance_changes:
          - balance_change: balance_change
            type: null
            resource_address: resource_address
          - balance_change: balance_change
            type: null
            resource_address: resource_address
        non_fungible_entity_balance_changes:
        - removed:
          - null
          - null
          added:
          - null
          - null
          entity_address: entity_address
          resource_address: resource_address
        - removed:
          - null
          - null
          added:
          - null
          - null
          entity_address: entity_address
          resource_address: resource_address
        total_fee: total_fee
        proposer_timestamp_ms: 56373766566333
        accumulator_hash: accumulator_hash
        status: null
      properties:
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        proposer_timestamp_ms:
          description: "An integer between `0` and `10^14`, marking the proposer timestamp\
            \ in ms."
          format: int64
          maximum: 100000000000000
          minimum: 0
          type: integer
        accumulator_hash:
          description: |
            The hex-encoded transaction accumulator hash. This hash captures the order of all transactions on ledger.
            This hash is `ACC_{N+1} = combine(ACC_N, LEDGER_HASH_{N}))` (where `combine()` is an arbitrary deterministic function we use).
          maxLength: 64
          minLength: 64
          type: string
        user_transaction_identifiers:
          $ref: '#/components/schemas/TransactionIdentifiers'
        status:
          $ref: '#/components/schemas/LtsCommittedTransactionStatus'
        fungible_entity_balance_changes:
          description: |
            A list of all fungible balance updates which occurred in this transaction, aggregated by the global entity (such as account)
            which owns the vaults which were updated.
          items:
            $ref: '#/components/schemas/LtsEntityFungibleBalanceChanges'
          type: array
        non_fungible_entity_balance_changes:
          description: |
            Non fungible changes per entity and resource
          items:
            $ref: '#/components/schemas/LtsEntityNonFungibleBalanceChanges'
          type: array
        resultant_account_fungible_balances:
          description: |
            A list of the resultant fungible account balances for any balances which changed in this transaction.
            Only balances for accounts are returned, not any other kind of entity.
          items:
            $ref: '#/components/schemas/LtsResultantAccountFungibleBalances'
          type: array
        total_fee:
          description: |
            The string-encoded decimal representing the total amount of XRD payed as fee (execution, validator tip and royalties).
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - accumulator_hash
      - fungible_entity_balance_changes
      - non_fungible_entity_balance_changes
      - proposer_timestamp_ms
      - resultant_account_fungible_balances
      - state_version
      - status
      - total_fee
      type: object
    LtsEntityFungibleBalanceChanges:
      example:
        entity_address: entity_address
        non_fee_balance_changes:
        - balance_change: balance_change
          resource_address: resource_address
        - balance_change: balance_change
          resource_address: resource_address
        fee_balance_change:
          balance_change: balance_change
          resource_address: resource_address
        fee_balance_changes:
        - balance_change: balance_change
          type: null
          resource_address: resource_address
        - balance_change: balance_change
          type: null
          resource_address: resource_address
      properties:
        entity_address:
          description: The Bech32m-encoded human readable version of the entity's
            address
          type: string
        fee_balance_change:
          $ref: '#/components/schemas/LtsFungibleResourceBalanceChange'
        fee_balance_changes:
          description: |
            If present, this field indicates fee-related balance changes, for example:

            - Payment of the fee (including tip and royalty)
            - Distribution of royalties
            - Distribution of the fee and tip to the consensus-manager, for distributing to the relevant
              validator/s at end of epoch

            See https://www.radixdlt.com/blog/how-fees-work-in-babylon for further information on how
            fee payment works at Babylon.
          items:
            $ref: '#/components/schemas/LtsFeeFungibleResourceBalanceChange'
          type: array
        non_fee_balance_changes:
          items:
            $ref: '#/components/schemas/LtsFungibleResourceBalanceChange'
          type: array
      required:
      - entity_address
      - fee_balance_changes
      - non_fee_balance_changes
      type: object
    LtsFungibleResourceBalanceChange:
      example:
        balance_change: balance_change
        resource_address: resource_address
      properties:
        resource_address:
          description: |
            The Bech32m-encoded human readable version of the fungible resource's address
          type: string
        balance_change:
          description: |
            The string-encoded decimal representing the amount of change for the fungible resource.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - balance_change
      - resource_address
      type: object
    LtsFeeFungibleResourceBalanceChange:
      example:
        balance_change: balance_change
        type: null
        resource_address: resource_address
      properties:
        type:
          $ref: '#/components/schemas/LtsFeeFungibleResourceBalanceChangeType'
        resource_address:
          description: |
            The Bech32m-encoded human readable version of the fungible resource's address
          type: string
        balance_change:
          description: |
            The string-encoded decimal representing the amount of change for the fungible resource.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - balance_change
      - resource_address
      - type
      type: object
    LtsFeeFungibleResourceBalanceChangeType:
      enum:
      - FeePayment
      - FeeDistributed
      - TipDistributed
      - RoyaltyDistributed
      type: string
    LtsEntityNonFungibleBalanceChanges:
      example:
        removed:
        - null
        - null
        added:
        - null
        - null
        entity_address: entity_address
        resource_address: resource_address
      properties:
        entity_address:
          description: The Bech32m-encoded human readable version of the entity's
            address
          type: string
        resource_address:
          description: |
            The Bech32m-encoded human readable version of the non-fungible resource's address
          type: string
        added:
          items:
            $ref: '#/components/schemas/LtsNonFungibleLocalId'
          type: array
        removed:
          items:
            $ref: '#/components/schemas/LtsNonFungibleLocalId'
          type: array
      required:
      - added
      - entity_address
      - removed
      - resource_address
      type: object
    LtsNonFungibleLocalId:
      description: |
        The simple string representation of the non-fungible id.
        * For string ids, this is `<the-string-id>`
        * For integer ids, this is `#the-integer-id#`
        * For bytes ids, this is `[the-lower-case-hex-representation]`
        * For RUID ids, this is `{...-...-...-...}` where `...` are each 16 hex characters.
        A given non-fungible resource has a fixed local id kind, so this representation uniquely
        identifies this non-fungible under the given resource address.
      type: string
    LtsResultantAccountFungibleBalances:
      example:
        resultant_balances:
        - resultant_balance: resultant_balance
          resource_address: resource_address
        - resultant_balance: resultant_balance
          resource_address: resource_address
        account_address: account_address
      properties:
        account_address:
          description: The Bech32m-encoded human readable version of the account's
            address
          type: string
        resultant_balances:
          items:
            $ref: '#/components/schemas/LtsResultantFungibleBalance'
          type: array
      required:
      - account_address
      - resultant_balances
      type: object
    LtsResultantFungibleBalance:
      example:
        resultant_balance: resultant_balance
        resource_address: resource_address
      properties:
        resource_address:
          description: |
            The Bech32m-encoded human readable version of the fungible resource's address
          type: string
        resultant_balance:
          description: |
            The string-encoded decimal representing the resultant balance of the fungible resource.
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - resource_address
      - resultant_balance
      type: object
    LtsStreamAccountTransactionOutcomesRequest:
      description: |
        A request to retrieve a sublist of committed transactions from the ledger.
      example:
        limit: 6
        from_state_version: 8008281904611
        account_address: account_address
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        account_address:
          description: The Bech32m-encoded human readable version of the account's
            address
          type: string
        from_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        limit:
          description: The maximum number of transactions that will be returned.
          type: integer
      required:
      - account_address
      - from_state_version
      - limit
      - network
      type: object
    LtsStreamAccountTransactionOutcomesResponse:
      example:
        committed_transaction_outcomes:
        - user_transaction_identifiers:
            intent_hash: intent_hash
            intent_hash_bech32m: intent_hash_bech32m
            signed_intent_hash: signed_intent_hash
            payload_hash: payload_hash
            payload_hash_bech32m: payload_hash_bech32m
            signed_intent_hash_bech32m: signed_intent_hash_bech32m
          resultant_account_fungible_balances:
          - resultant_balances:
            - resultant_balance: resultant_balance
              resource_address: resource_address
            - resultant_balance: resultant_balance
              resource_address: resource_address
            account_address: account_address
          - resultant_balances:
            - resultant_balance: resultant_balance
              resource_address: resource_address
            - resultant_balance: resultant_balance
              resource_address: resource_address
            account_address: account_address
          state_version: 59621339166832
          fungible_entity_balance_changes:
          - entity_address: entity_address
            non_fee_balance_changes:
            - balance_change: balance_change
              resource_address: resource_address
            - balance_change: balance_change
              resource_address: resource_address
            fee_balance_change:
              balance_change: balance_change
              resource_address: resource_address
            fee_balance_changes:
            - balance_change: balance_change
              type: null
              resource_address: resource_address
            - balance_change: balance_change
              type: null
              resource_address: resource_address
          - entity_address: entity_address
            non_fee_balance_changes:
            - balance_change: balance_change
              resource_address: resource_address
            - balance_change: balance_change
              resource_address: resource_address
            fee_balance_change:
              balance_change: balance_change
              resource_address: resource_address
            fee_balance_changes:
            - balance_change: balance_change
              type: null
              resource_address: resource_address
            - balance_change: balance_change
              type: null
              resource_address: resource_address
          non_fungible_entity_balance_changes:
          - removed:
            - null
            - null
            added:
            - null
            - null
            entity_address: entity_address
            resource_address: resource_address
          - removed:
            - null
            - null
            added:
            - null
            - null
            entity_address: entity_address
            resource_address: resource_address
          total_fee: total_fee
          proposer_timestamp_ms: 56373766566333
          accumulator_hash: accumulator_hash
          status: null
        - user_transaction_identifiers:
            intent_hash: intent_hash
            intent_hash_bech32m: intent_hash_bech32m
            signed_intent_hash: signed_intent_hash
            payload_hash: payload_hash
            payload_hash_bech32m: payload_hash_bech32m
            signed_intent_hash_bech32m: signed_intent_hash_bech32m
          resultant_account_fungible_balances:
          - resultant_balances:
            - resultant_balance: resultant_balance
              resource_address: resource_address
            - resultant_balance: resultant_balance
              resource_address: resource_address
            account_address: account_address
          - resultant_balances:
            - resultant_balance: resultant_balance
              resource_address: resource_address
            - resultant_balance: resultant_balance
              resource_address: resource_address
            account_address: account_address
          state_version: 59621339166832
          fungible_entity_balance_changes:
          - entity_address: entity_address
            non_fee_balance_changes:
            - balance_change: balance_change
              resource_address: resource_address
            - balance_change: balance_change
              resource_address: resource_address
            fee_balance_change:
              balance_change: balance_change
              resource_address: resource_address
            fee_balance_changes:
            - balance_change: balance_change
              type: null
              resource_address: resource_address
            - balance_change: balance_change
              type: null
              resource_address: resource_address
          - entity_address: entity_address
            non_fee_balance_changes:
            - balance_change: balance_change
              resource_address: resource_address
            - balance_change: balance_change
              resource_address: resource_address
            fee_balance_change:
              balance_change: balance_change
              resource_address: resource_address
            fee_balance_changes:
            - balance_change: balance_change
              type: null
              resource_address: resource_address
            - balance_change: balance_change
              type: null
              resource_address: resource_address
          non_fungible_entity_balance_changes:
          - removed:
            - null
            - null
            added:
            - null
            - null
            entity_address: entity_address
            resource_address: resource_address
          - removed:
            - null
            - null
            added:
            - null
            - null
            entity_address: entity_address
            resource_address: resource_address
          total_fee: total_fee
          proposer_timestamp_ms: 56373766566333
          accumulator_hash: accumulator_hash
          status: null
        max_ledger_state_version: 14658129805030
        count: 6027
        from_state_version: 8008281904611
      properties:
        from_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        count:
          description: "An integer between `0` and `10000`, giving the total count\
            \ of transactions in the returned response"
          format: int32
          maximum: 10000
          minimum: 0
          type: integer
        max_ledger_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        committed_transaction_outcomes:
          description: A committed transaction outcomes list starting from the `from_state_version`
            (inclusive).
          items:
            $ref: '#/components/schemas/LtsCommittedTransactionOutcome'
          type: array
      required:
      - committed_transaction_outcomes
      - count
      - from_state_version
      - max_ledger_state_version
      type: object
    NetworkConfigurationResponse:
      example:
        well_known_addresses:
          secp256k1_signature_virtual_badge: secp256k1_signature_virtual_badge
          account_owner_badge: account_owner_badge
          access_controller_package: access_controller_package
          resource_package: resource_package
          package_package: package_package
          account_package: account_package
          system_transaction_badge: system_transaction_badge
          global_caller_virtual_badge: global_caller_virtual_badge
          metadata_module_package: metadata_module_package
          role_assignment_module_package: role_assignment_module_package
          transaction_processor_package: transaction_processor_package
          faucet: faucet
          ed25519_signature_virtual_badge: ed25519_signature_virtual_badge
          package_owner_badge: package_owner_badge
          consensus_manager: consensus_manager
          consensus_manager_package: consensus_manager_package
          genesis_helper_package: genesis_helper_package
          faucet_package: faucet_package
          xrd: xrd
          validator_owner_badge: validator_owner_badge
          royalty_module_package: royalty_module_package
          pool_package: pool_package
          identity_package: identity_package
          package_of_direct_caller_virtual_badge: package_of_direct_caller_virtual_badge
          genesis_helper: genesis_helper
          identity_owner_badge: identity_owner_badge
        address_types:
        - entity_type: null
          address_byte_prefix: 153
          hrp_prefix: hrp_prefix
          address_byte_length: 37
        - entity_type: null
          address_byte_prefix: 153
          hrp_prefix: hrp_prefix
          address_byte_length: 37
        network_id: 20
        network_hrp_suffix: network_hrp_suffix
        version:
          api_version: api_version
          core_version: core_version
        usd_price_in_xrd: usd_price_in_xrd
        network: "{{network}}"
      properties:
        version:
          $ref: '#/components/schemas/NetworkConfigurationResponse_version'
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        network_id:
          description: The logical id of the network
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        network_hrp_suffix:
          description: The network suffix used for Bech32m HRPs used for addressing.
          type: string
        usd_price_in_xrd:
          description: |
            The current value of the protocol-based USD/XRD multiplier (i.e. an amount of XRDs to be paid for 1 USD).
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        address_types:
          items:
            $ref: '#/components/schemas/AddressType'
          type: array
        well_known_addresses:
          $ref: '#/components/schemas/NetworkConfigurationResponse_well_known_addresses'
      required:
      - address_types
      - network
      - network_hrp_suffix
      - network_id
      - usd_price_in_xrd
      - version
      - well_known_addresses
      type: object
    AddressType:
      example:
        entity_type: null
        address_byte_prefix: 153
        hrp_prefix: hrp_prefix
        address_byte_length: 37
      properties:
        hrp_prefix:
          type: string
        entity_type:
          $ref: '#/components/schemas/EntityType'
        address_byte_prefix:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        address_byte_length:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
      required:
      - address_byte_length
      - address_byte_prefix
      - entity_type
      - hrp_prefix
      type: object
    NetworkStatusRequest:
      example:
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
      required:
      - network
      type: object
    NetworkStatusResponse:
      example:
        genesis_epoch_round:
          round: 1465812980
          epoch: 6027456183
        post_genesis_epoch_round:
          round: 1465812980
          epoch: 6027456183
        current_protocol_version: current_protocol_version
        current_state_identifier: null
        post_genesis_state_identifier: null
        current_epoch_round:
          round: 1465812980
          epoch: 6027456183
        pre_genesis_state_identifier: null
      properties:
        pre_genesis_state_identifier:
          $ref: '#/components/schemas/CommittedStateIdentifier'
        genesis_epoch_round:
          $ref: '#/components/schemas/EpochRound'
        post_genesis_state_identifier:
          $ref: '#/components/schemas/CommittedStateIdentifier'
        post_genesis_epoch_round:
          $ref: '#/components/schemas/EpochRound'
        current_state_identifier:
          $ref: '#/components/schemas/CommittedStateIdentifier'
        current_epoch_round:
          $ref: '#/components/schemas/EpochRound'
        current_protocol_version:
          description: |
            A descriptor for the current protocol version that the node is running.
          type: string
      required:
      - current_protocol_version
      - pre_genesis_state_identifier
      type: object
    EpochRound:
      example:
        round: 1465812980
        epoch: 6027456183
      properties:
        epoch:
          description: |
            An integer between `0` and `10^10`, marking the epoch.
            Only present if the rejection is temporary due to a header specifying a "from epoch" in the future.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        round:
          description: "An integer between `0` and `10^10`, marking the current round\
            \ in an epoch"
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
      required:
      - epoch
      - round
      type: object
    CommittedStateIdentifier:
      allOf:
      - $ref: '#/components/schemas/CommittedStateIdentifier_allOf'
      - $ref: '#/components/schemas/LedgerHashes'
    ScenariosRequest:
      example:
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
      required:
      - network
      type: object
    ScenariosResponse:
      example:
        executed_scenarios:
        - sequence_number: 80082
          logical_name: logical_name
          addresses:
            key: null
          committed_transactions:
          - intent_hash: intent_hash
            intent_hash_bech32m: intent_hash_bech32m
            logical_name: logical_name
            state_version: 60274561830704
          - intent_hash: intent_hash
            intent_hash_bech32m: intent_hash_bech32m
            logical_name: logical_name
            state_version: 60274561830704
        - sequence_number: 80082
          logical_name: logical_name
          addresses:
            key: null
          committed_transactions:
          - intent_hash: intent_hash
            intent_hash_bech32m: intent_hash_bech32m
            logical_name: logical_name
            state_version: 60274561830704
          - intent_hash: intent_hash
            intent_hash_bech32m: intent_hash_bech32m
            logical_name: logical_name
            state_version: 60274561830704
      properties:
        executed_scenarios:
          description: Scenarios executed as part of Genesis (in their execution order).
          items:
            $ref: '#/components/schemas/ExecutedGenesisScenario'
          type: array
      required:
      - executed_scenarios
      type: object
    ExecutedGenesisScenario:
      example:
        sequence_number: 80082
        logical_name: logical_name
        addresses:
          key: null
        committed_transactions:
        - intent_hash: intent_hash
          intent_hash_bech32m: intent_hash_bech32m
          logical_name: logical_name
          state_version: 60274561830704
        - intent_hash: intent_hash
          intent_hash_bech32m: intent_hash_bech32m
          logical_name: logical_name
          state_version: 60274561830704
      properties:
        sequence_number:
          description: |
            An index of the Scenario on the list of all Scenarios that were executed.
            Note: the stored sequence numbers do not necessarily have to be consecutive (e.g. in a
            case where some configured Scenario failed to execute or failed to write results to the
            database).
          format: int32
          maximum: 1000000
          minimum: 0
          type: integer
        logical_name:
          type: string
        committed_transactions:
          description: Transactions successfully committed by the Scenario.
          items:
            $ref: '#/components/schemas/ExecutedScenarioTransaction'
          type: array
        addresses:
          additionalProperties:
            $ref: '#/components/schemas/DescribedAddress'
          description: |
            Well-named addresses touched/created by the Scenario, keyed by their name.
          type: object
      required:
      - addresses
      - committed_transactions
      - logical_name
      - sequence_number
      type: object
    ExecutedScenarioTransaction:
      example:
        intent_hash: intent_hash
        intent_hash_bech32m: intent_hash_bech32m
        logical_name: logical_name
        state_version: 60274561830704
      properties:
        logical_name:
          type: string
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        intent_hash:
          description: |
            The hex-encoded intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core content "intent" of the transaction. Each intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
          maxLength: 64
          minLength: 64
          type: string
        intent_hash_bech32m:
          description: The Bech32m-encoded human readable `IntentHash`.
          type: string
      required:
      - intent_hash
      - intent_hash_bech32m
      - logical_name
      - state_version
      type: object
    DescribedAddress:
      description: An arbitrary Bech32m-encoded human readable address (its type should
        be inferred from `logical_name`).
      type: string
    MempoolListRequest:
      example:
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
      required:
      - network
      type: object
    MempoolListResponse:
      example:
        contents:
        - intent_hash: intent_hash
          intent_hash_bech32m: intent_hash_bech32m
          payload_hash: payload_hash
          payload_hash_bech32m: payload_hash_bech32m
        - intent_hash: intent_hash
          intent_hash_bech32m: intent_hash_bech32m
          payload_hash: payload_hash
          payload_hash_bech32m: payload_hash_bech32m
      properties:
        contents:
          items:
            $ref: '#/components/schemas/MempoolTransactionHashes'
          type: array
      required:
      - contents
      type: object
    MempoolTransactionHashes:
      example:
        intent_hash: intent_hash
        intent_hash_bech32m: intent_hash_bech32m
        payload_hash: payload_hash
        payload_hash_bech32m: payload_hash_bech32m
      properties:
        intent_hash:
          description: |
            The hex-encoded intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core content "intent" of the transaction. Each intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
          maxLength: 64
          minLength: 64
          type: string
        intent_hash_bech32m:
          description: The Bech32m-encoded human readable `IntentHash`.
          type: string
        payload_hash:
          description: |
            The hex-encoded notarized transaction hash for a user transaction.
            This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
          maxLength: 64
          minLength: 64
          type: string
        payload_hash_bech32m:
          description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
          type: string
      required:
      - intent_hash
      - intent_hash_bech32m
      - payload_hash
      - payload_hash_bech32m
      type: object
    MempoolTransactionRequest:
      example:
        payload_hashes:
        - null
        - null
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        payload_hashes:
          description: "A list of payload hashes to attempt to read. Each hash must\
            \ be either hex, or in Bech32m format."
          items:
            $ref: '#/components/schemas/NotarizedTransactionHashInput'
          type: array
      required:
      - network
      - payload_hashes
      type: object
    MempoolTransactionResponse:
      example:
        payloads:
        - hash_bech32m: hash_bech32m
          hex: hex
          error: error
          hash: hash
        - hash_bech32m: hash_bech32m
          hex: hex
          error: error
          hash: hash
        count: 0
      properties:
        count:
          description: An integer giving the total count of payload hashes checked
            in the returned response.
          format: int32
          type: integer
        payloads:
          description: |
            An array containing pairs of payload hash (query) and payload hex or error (response).
            Note that this response is bounded - this means it is not guaranteed all queries will be processed.
            Please query missing payload hashes again.
          items:
            $ref: '#/components/schemas/MempoolTransactionResponse_payloads_inner'
          type: array
      required:
      - count
      - payloads
      type: object
    TransactionParseRequest:
      example:
        transaction_format_options:
          blobs: true
          raw_notarized_transaction: true
          manifest: true
          raw_system_transaction: true
          message: true
          raw_ledger_transaction: true
        parse_mode: Any
        validation_mode: None
        payload_hex: payload_hex
        network: "{{network}}"
        response_mode: Basic
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        payload_hex:
          description: |
            A hex-encoded payload of a full transaction or a partial transaction - either a notarized transaction,
            a signed transaction intent an unsigned transaction intent, or a ledger payload.
          type: string
        parse_mode:
          description: |
            The type of transaction payload that should be assumed. If omitted, "Any" is used - where the payload is
            attempted to be parsed as each of the following in turn: Notarized, Signed, Unsigned, Ledger.
          enum:
          - Any
          - Notarized
          - Signed
          - Unsigned
          - Ledger
          type: string
        validation_mode:
          description: |
            The type of validation that should be performed, if the payload correctly decompiles as a Notarized Transaction.
            This is only relevant for Notarized payloads. If omitted, "Static" is used.
          enum:
          - None
          - Static
          - Full
          type: string
        response_mode:
          description: |
            The amount of information to return in the response.
            "Basic" includes the type, validity information, and any relevant identifiers.
            "Full" also includes the fully parsed information.
            If omitted, "Full" is used.
          enum:
          - Basic
          - Full
          type: string
        transaction_format_options:
          $ref: '#/components/schemas/TransactionFormatOptions'
      required:
      - network
      - payload_hex
      type: object
    TransactionParseResponse:
      example:
        parsed:
          type: null
      properties:
        parsed:
          $ref: '#/components/schemas/ParsedTransaction'
      required:
      - is_valid
      - parsed
      type: object
    ParsedTransactionType:
      description: The type of the parsed (partial) transaction payload
      enum:
      - NotarizedTransaction
      - SignedTransactionIntent
      - TransactionIntent
      - LedgerTransaction
      type: string
    ParsedTransaction:
      discriminator:
        mapping:
          NotarizedTransaction: '#/components/schemas/ParsedNotarizedTransaction'
          SignedTransactionIntent: '#/components/schemas/ParsedSignedTransactionIntent'
          TransactionIntent: '#/components/schemas/ParsedTransactionIntent'
          LedgerTransaction: '#/components/schemas/ParsedLedgerTransaction'
        propertyName: type
      example:
        type: null
      properties:
        type:
          $ref: '#/components/schemas/ParsedTransactionType'
      required:
      - type
      type: object
    ParsedNotarizedTransaction:
      allOf:
      - $ref: '#/components/schemas/ParsedTransaction'
      - $ref: '#/components/schemas/ParsedNotarizedTransaction_allOf'
    ParsedNotarizedTransactionIdentifiers:
      properties:
        intent_hash:
          description: |
            The hex-encoded intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core content "intent" of the transaction. Each intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
          maxLength: 64
          minLength: 64
          type: string
        intent_hash_bech32m:
          description: The Bech32m-encoded human readable `IntentHash`.
          type: string
        signed_intent_hash:
          description: |
            The hex-encoded signed intent hash for a user transaction.
            This hash identifies the transaction intent, plus additional signatures.
            This hash is signed by the notary, to create the submittable NotarizedTransaction.
          maxLength: 64
          minLength: 64
          type: string
        signed_intent_hash_bech32m:
          description: The Bech32m-encoded human readable `SignedIntentHash`.
          type: string
        payload_hash:
          description: |
            The hex-encoded notarized transaction hash for a user transaction.
            This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
          maxLength: 64
          minLength: 64
          type: string
        payload_hash_bech32m:
          description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
          type: string
        ledger_hash:
          description: |
            The hex-encoded ledger payload transaction hash.
            This is a wrapper for both user transactions, and system transactions such as genesis and round changes.
          maxLength: 64
          minLength: 64
          type: string
        ledger_hash_bech32m:
          description: The Bech32m-encoded human readable `LedgerPayloadHash`.
          type: string
      required:
      - intent_hash
      - intent_hash_bech32m
      - ledger_hash
      - ledger_hash_bech32m
      - payload_hash
      - payload_hash_bech32m
      - signed_intent_hash
      - signed_intent_hash_bech32m
      type: object
    ParsedSignedTransactionIntent:
      allOf:
      - $ref: '#/components/schemas/ParsedTransaction'
      - $ref: '#/components/schemas/ParsedSignedTransactionIntent_allOf'
    ParsedSignedTransactionIntentIdentifiers:
      properties:
        intent_hash:
          description: |
            The hex-encoded intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core content "intent" of the transaction. Each intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
          maxLength: 64
          minLength: 64
          type: string
        intent_hash_bech32m:
          description: The Bech32m-encoded human readable `IntentHash`.
          type: string
        signed_intent_hash:
          description: |
            The hex-encoded signed intent hash for a user transaction.
            This hash identifies the transaction intent, plus additional signatures.
            This hash is signed by the notary, to create the submittable NotarizedTransaction.
          maxLength: 64
          minLength: 64
          type: string
        signed_intent_hash_bech32m:
          description: The Bech32m-encoded human readable `SignedIntentHash`.
          type: string
      required:
      - intent_hash
      - intent_hash_bech32m
      - signed_intent_hash
      - signed_intent_hash_bech32m
      type: object
    ParsedTransactionIntent:
      allOf:
      - $ref: '#/components/schemas/ParsedTransaction'
      - $ref: '#/components/schemas/ParsedTransactionIntent_allOf'
    ParsedTransactionIntentIdentifiers:
      properties:
        intent_hash:
          description: |
            The hex-encoded intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core content "intent" of the transaction. Each intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
          maxLength: 64
          minLength: 64
          type: string
        intent_hash_bech32m:
          description: The Bech32m-encoded human readable `IntentHash`.
          type: string
      required:
      - intent_hash
      - intent_hash_bech32m
      type: object
    ParsedLedgerTransaction:
      allOf:
      - $ref: '#/components/schemas/ParsedTransaction'
      - $ref: '#/components/schemas/ParsedLedgerTransaction_allOf'
    ParsedLedgerTransactionIdentifiers:
      properties:
        intent_hash:
          description: |
            The hex-encoded intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core content "intent" of the transaction. Each intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
          maxLength: 64
          minLength: 64
          type: string
        intent_hash_bech32m:
          description: The Bech32m-encoded human readable `IntentHash`.
          type: string
        signed_intent_hash:
          description: |
            The hex-encoded signed intent hash for a user transaction.
            This hash identifies the transaction intent, plus additional signatures.
            This hash is signed by the notary, to create the submittable NotarizedTransaction.
          maxLength: 64
          minLength: 64
          type: string
        signed_intent_hash_bech32m:
          description: The Bech32m-encoded human readable `SignedIntentHash`.
          type: string
        payload_hash:
          description: |
            The hex-encoded notarized transaction hash for a user transaction.
            This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
          maxLength: 64
          minLength: 64
          type: string
        payload_hash_bech32m:
          description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
          type: string
        ledger_hash:
          description: |
            The hex-encoded ledger payload transaction hash.
            This is a wrapper for both user transactions, and system transactions such as genesis and round changes.
          maxLength: 64
          minLength: 64
          type: string
        ledger_hash_bech32m:
          description: The Bech32m-encoded human readable `LedgerPayloadHash`.
          type: string
      required:
      - ledger_hash
      - ledger_hash_bech32m
      type: object
    TransactionSubmitRequest:
      example:
        notarized_transaction_hex: notarized_transaction_hex
        force_recalculate: true
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        notarized_transaction_hex:
          description: "A hex-encoded, compiled notarized transaction."
          type: string
        force_recalculate:
          description: "If true, the transaction validity is freshly recalculated\
            \ without using any caches (defaults false)"
          type: boolean
      required:
      - network
      - notarized_transaction_hex
      type: object
    TransactionSubmitResponse:
      example:
        duplicate: true
      properties:
        duplicate:
          description: Is true if the transaction is a duplicate of an existing transaction
            in the mempool.
          type: boolean
      required:
      - duplicate
      type: object
    TransactionSubmitErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - $ref: '#/components/schemas/TransactionSubmitErrorResponse_allOf'
    TransactionSubmitErrorDetailsType:
      enum:
      - PriorityThresholdNotMet
      - IntentAlreadyCommitted
      - Rejected
      type: string
    TransactionSubmitErrorDetails:
      discriminator:
        mapping:
          PriorityThresholdNotMet: '#/components/schemas/TransactionSubmitPriorityThresholdNotMetErrorDetails'
          IntentAlreadyCommitted: '#/components/schemas/TransactionSubmitIntentAlreadyCommitted'
          Rejected: '#/components/schemas/TransactionSubmitRejectedErrorDetails'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/TransactionSubmitErrorDetailsType'
      required:
      - type
      type: object
    TransactionSubmitPriorityThresholdNotMetErrorDetails:
      allOf:
      - $ref: '#/components/schemas/TransactionSubmitErrorDetails'
      - $ref: '#/components/schemas/LtsTransactionSubmitPriorityThresholdNotMetErrorDetails_allOf'
    TransactionSubmitIntentAlreadyCommitted:
      allOf:
      - $ref: '#/components/schemas/TransactionSubmitErrorDetails'
      - $ref: '#/components/schemas/LtsTransactionSubmitIntentAlreadyCommitted_allOf'
    TransactionSubmitRejectedErrorDetails:
      allOf:
      - $ref: '#/components/schemas/TransactionSubmitErrorDetails'
      - $ref: '#/components/schemas/LtsTransactionSubmitRejectedErrorDetails_allOf'
    TransactionStatusRequest:
      example:
        intent_hash: intent_hash
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        intent_hash:
          description: |
            The intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core content "intent" of the transaction. Each intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
            Either hex or Bech32m-encoded strings are supported.
          type: string
      required:
      - intent_hash
      - network
      type: object
    TransactionStatusResponse:
      example:
        status_description: status_description
        invalid_from_epoch: 800828190
        known_payloads:
        - error_message: error_message
          state_version: 60274561830704
          payload_hash: payload_hash
          payload_hash_bech32m: payload_hash_bech32m
          status: null
        - error_message: error_message
          state_version: 60274561830704
          payload_hash: payload_hash
          payload_hash_bech32m: payload_hash_bech32m
          status: null
        intent_status: null
      properties:
        intent_status:
          $ref: '#/components/schemas/TransactionIntentStatus'
        status_description:
          description: |
            An explanation as to why the intent status is resolved as it is.
          type: string
        invalid_from_epoch:
          description: |
            An integer between `0` and `10^10`, marking the epoch from which the transaction will no longer be valid, and be permanently rejected.
            Only present if the intent status is InMempool or Unknown and we know about a payload.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        known_payloads:
          items:
            $ref: '#/components/schemas/TransactionPayloadDetails'
          type: array
      required:
      - intent_status
      - known_payloads
      - status_description
      type: object
    TransactionPayloadDetails:
      example:
        error_message: error_message
        state_version: 60274561830704
        payload_hash: payload_hash
        payload_hash_bech32m: payload_hash_bech32m
        status: null
      properties:
        payload_hash:
          description: |
            The hex-encoded notarized transaction hash for a user transaction.
            This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
          maxLength: 64
          minLength: 64
          type: string
        payload_hash_bech32m:
          description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
          type: string
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        status:
          $ref: '#/components/schemas/TransactionPayloadStatus'
        error_message:
          description: "An explanation for the error, if failed or rejected"
          type: string
      required:
      - payload_hash
      - payload_hash_bech32m
      - status
      type: object
    TransactionPayloadStatus:
      enum:
      - CommittedSuccess
      - CommittedFailure
      - PermanentlyRejected
      - TransientlyRejected
      - InMempool
      - NotInMempool
      type: string
    TransactionIntentStatus:
      description: |
        The status of the transaction intent, as determined by the node.
        FateUncertain or FateUncertainButLikelyRejection mean that it's still possible that a payload containing the transaction
      enum:
      - CommittedSuccess
      - CommittedFailure
      - PermanentRejection
      - InMempool
      - NotSeen
      - FateUncertain
      - FateUncertainButLikelyRejection
      type: string
    TransactionReceiptRequest:
      example:
        intent_hash: intent_hash
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        intent_hash:
          description: |
            The intent hash for a user transaction, also known as the transaction id.
            This hash identifies the core content "intent" of the transaction. Each intent can only be committed once.
            This hash gets signed by any signatories on the transaction, to create the signed intent.
            Either hex or Bech32m-encoded strings are supported.
          type: string
      required:
      - intent_hash
      - network
      type: object
    TransactionReceiptResponse:
      example:
        committed:
          ledger_transaction:
            payload_hex: payload_hex
            type: null
          resultant_state_identifiers: null
          receipt:
            output:
            - programmatic_json: ""
              hex: hex
            - programmatic_json: ""
              hex: hex
            error_message: error_message
            fee_summary:
              xrd_total_storage_cost: xrd_total_storage_cost
              xrd_total_execution_cost: xrd_total_execution_cost
              execution_cost_units_consumed: 343953088
              xrd_total_finalization_cost: xrd_total_finalization_cost
              finalization_cost_units_consumed: 2588772717
              xrd_total_royalty_cost: xrd_total_royalty_cost
              xrd_total_tipping_cost: xrd_total_tipping_cost
            next_epoch:
              validators:
              - stake: stake
                address: address
                key: null
              - stake: stake
                address: address
                key: null
              epoch: 3616076749
            fee_destination:
              to_burn: to_burn
              to_validator_set: to_validator_set
              to_proposer: to_proposer
              to_royalty_recipients:
              - royalty_recipient:
                  entity_type: null
                  entity_address: entity_address
                  is_global: true
                xrd_amount: xrd_amount
              - royalty_recipient:
                  entity_type: null
                  entity_address: entity_address
                  is_global: true
                xrd_amount: xrd_amount
            costing_parameters:
              finalization_cost_unit_price: finalization_cost_unit_price
              execution_cost_unit_loan: 2560717018
              finalization_cost_unit_limit: 2421234836
              execution_cost_unit_price: execution_cost_unit_price
              xrd_storage_price: xrd_storage_price
              xrd_usd_price: xrd_usd_price
              execution_cost_unit_limit: 629561881
              tip_percentage: 58
            state_updates:
              deleted_substates:
              - system_structure:
                  type: null
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id: null
              - system_structure:
                  type: null
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id: null
              deleted_partitions:
              - entity_type: null
                partition_kind: null
                partition_number: 180
                entity_address: entity_address
                entity_module: null
              - entity_type: null
                partition_kind: null
                partition_number: 180
                entity_address: entity_address
                entity_module: null
              created_substates:
              - system_structure:
                  type: null
                substate_id: null
                value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              - system_structure:
                  type: null
                substate_id: null
                value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              updated_substates:
              - system_structure:
                  type: null
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id: null
                new_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              - system_structure:
                  type: null
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id: null
                new_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              new_global_entities:
              - entity_type: null
                entity_address: entity_address
                is_global: true
              - entity_type: null
                entity_address: entity_address
                is_global: true
            fee_source:
              from_vaults:
              - xrd_amount: xrd_amount
                vault_entity:
                  entity_type: null
                  entity_address: entity_address
                  is_global: true
              - xrd_amount: xrd_amount
                vault_entity:
                  entity_type: null
                  entity_address: entity_address
                  is_global: true
            events:
            - data:
                programmatic_json: ""
                hex: hex
              type:
                name: name
                type_reference:
                  full_type_id:
                    schema_hash: schema_hash
                    entity_address: entity_address
                    local_type_id:
                      as_sbor:
                        programmatic_json: ""
                        hex: hex
                      kind: WellKnown
                      id: 3994939882
                emitter:
                  type: null
            - data:
                programmatic_json: ""
                hex: hex
              type:
                name: name
                type_reference:
                  full_type_id:
                    schema_hash: schema_hash
                    entity_address: entity_address
                    local_type_id:
                      as_sbor:
                        programmatic_json: ""
                        hex: hex
                      kind: WellKnown
                      id: 3994939882
                emitter:
                  type: null
            status: null
          proposer_timestamp_ms: 20271230230023
      properties:
        committed:
          $ref: '#/components/schemas/CommittedTransaction'
      required:
      - committed
      type: object
    TransactionCallPreviewRequest:
      example:
        arguments:
        - arguments
        - arguments
        network: "{{network}}"
        target:
          type: null
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        target:
          $ref: '#/components/schemas/TargetIdentifier'
        arguments:
          description: Argument list
          items:
            description: "SBOR-encoded argument, formatted as a hex-string"
            type: string
          type: array
      required:
      - arguments
      - network
      - target
      type: object
    TargetIdentifierType:
      enum:
      - Method
      - Function
      type: string
    TargetIdentifier:
      discriminator:
        mapping:
          Method: '#/components/schemas/ComponentMethodTargetIdentifier'
          Function: '#/components/schemas/BlueprintFunctionTargetIdentifier'
        propertyName: type
      example:
        type: null
      properties:
        type:
          $ref: '#/components/schemas/TargetIdentifierType'
      required:
      - type
      type: object
    ComponentMethodTargetIdentifier:
      allOf:
      - $ref: '#/components/schemas/TargetIdentifier'
      - $ref: '#/components/schemas/ComponentMethodTargetIdentifier_allOf'
    BlueprintFunctionTargetIdentifier:
      allOf:
      - $ref: '#/components/schemas/TargetIdentifier'
      - $ref: '#/components/schemas/BlueprintFunctionTargetIdentifier_allOf'
    TransactionCallPreviewResponse:
      example:
        output:
          programmatic_json: ""
          hex: hex
        error_message: error_message
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
        status: null
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        status:
          $ref: '#/components/schemas/TransactionStatus'
        output:
          $ref: '#/components/schemas/SborData'
        error_message:
          description: Error message (only present if status is Failed or Rejected)
          type: string
      required:
      - at_ledger_state
      - status
      type: object
    TransactionPreviewRequest:
      example:
        blobs_hex:
        - blobs_hex
        - blobs_hex
        end_epoch_exclusive: 6027456183
        manifest: manifest
        start_epoch_inclusive: 800828190
        signer_public_keys:
        - key_type: null
        - key_type: null
        flags:
          use_free_credit: true
          assume_all_signature_proofs: true
          skip_epoch_check: true
        notary_public_key:
          key_type: null
        message:
          type: null
        nonce: 2560717018
        notary_is_signatory: true
        network: "{{network}}"
        tip_percentage: 37
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        manifest:
          description: A text-representation of a transaction manifest
          type: string
        blobs_hex:
          description: An array of hex-encoded blob data (optional)
          items:
            type: string
          type: array
        start_epoch_inclusive:
          description: "An integer between `0` and `10^10`, marking the epoch at which\
            \ the transaction starts being valid"
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        end_epoch_exclusive:
          description: "An integer between `0` and `10^10`, marking the epoch at which\
            \ the transaction is no longer valid"
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        notary_public_key:
          $ref: '#/components/schemas/PublicKey'
        notary_is_signatory:
          description: "Whether the notary should count as a signatory (optional,\
            \ default false)"
          type: boolean
        tip_percentage:
          description: "An integer between `0` and `255`, giving the validator tip\
            \ as a percentage amount. A value of `1` corresponds to 1% of the fee."
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        nonce:
          description: |
            An integer between `0` and `2^32 - 1`, chosen to allow a unique intent to be created (to enable submitting an otherwise identical/duplicate intent).
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        signer_public_keys:
          description: A list of public keys to be used as transaction signers
          items:
            $ref: '#/components/schemas/PublicKey'
          type: array
        message:
          $ref: '#/components/schemas/TransactionMessage'
        flags:
          $ref: '#/components/schemas/TransactionPreviewRequest_flags'
      required:
      - cost_unit_limit
      - end_epoch_exclusive
      - flags
      - manifest
      - network
      - nonce
      - signer_public_keys
      - start_epoch_inclusive
      - tip_percentage
      type: object
    TransactionPreviewResponse:
      example:
        instruction_resource_changes:
        - resource_changes:
          - amount: amount
            component_entity:
              entity_type: null
              entity_address: entity_address
              is_global: true
            resource_address: resource_address
            vault_entity:
              entity_type: null
              entity_address: entity_address
              is_global: true
          - amount: amount
            component_entity:
              entity_type: null
              entity_address: entity_address
              is_global: true
            resource_address: resource_address
            vault_entity:
              entity_type: null
              entity_address: entity_address
              is_global: true
          index: 343953088
        - resource_changes:
          - amount: amount
            component_entity:
              entity_type: null
              entity_address: entity_address
              is_global: true
            resource_address: resource_address
            vault_entity:
              entity_type: null
              entity_address: entity_address
              is_global: true
          - amount: amount
            component_entity:
              entity_type: null
              entity_address: entity_address
              is_global: true
            resource_address: resource_address
            vault_entity:
              entity_type: null
              entity_address: entity_address
              is_global: true
          index: 343953088
        receipt:
          output:
          - programmatic_json: ""
            hex: hex
          - programmatic_json: ""
            hex: hex
          error_message: error_message
          fee_summary:
            xrd_total_storage_cost: xrd_total_storage_cost
            xrd_total_execution_cost: xrd_total_execution_cost
            execution_cost_units_consumed: 343953088
            xrd_total_finalization_cost: xrd_total_finalization_cost
            finalization_cost_units_consumed: 2588772717
            xrd_total_royalty_cost: xrd_total_royalty_cost
            xrd_total_tipping_cost: xrd_total_tipping_cost
          next_epoch:
            validators:
            - stake: stake
              address: address
              key: null
            - stake: stake
              address: address
              key: null
            epoch: 3616076749
          fee_destination:
            to_burn: to_burn
            to_validator_set: to_validator_set
            to_proposer: to_proposer
            to_royalty_recipients:
            - royalty_recipient:
                entity_type: null
                entity_address: entity_address
                is_global: true
              xrd_amount: xrd_amount
            - royalty_recipient:
                entity_type: null
                entity_address: entity_address
                is_global: true
              xrd_amount: xrd_amount
          costing_parameters:
            finalization_cost_unit_price: finalization_cost_unit_price
            execution_cost_unit_loan: 2560717018
            finalization_cost_unit_limit: 2421234836
            execution_cost_unit_price: execution_cost_unit_price
            xrd_storage_price: xrd_storage_price
            xrd_usd_price: xrd_usd_price
            execution_cost_unit_limit: 629561881
            tip_percentage: 58
          state_updates:
            deleted_substates:
            - system_structure:
                type: null
              previous_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
              substate_id: null
            - system_structure:
                type: null
              previous_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
              substate_id: null
            deleted_partitions:
            - entity_type: null
              partition_kind: null
              partition_number: 180
              entity_address: entity_address
              entity_module: null
            - entity_type: null
              partition_kind: null
              partition_number: 180
              entity_address: entity_address
              entity_module: null
            created_substates:
            - system_structure:
                type: null
              substate_id: null
              value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
            - system_structure:
                type: null
              substate_id: null
              value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
            updated_substates:
            - system_structure:
                type: null
              previous_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
              substate_id: null
              new_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
            - system_structure:
                type: null
              previous_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
              substate_id: null
              new_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
            new_global_entities:
            - entity_type: null
              entity_address: entity_address
              is_global: true
            - entity_type: null
              entity_address: entity_address
              is_global: true
          fee_source:
            from_vaults:
            - xrd_amount: xrd_amount
              vault_entity:
                entity_type: null
                entity_address: entity_address
                is_global: true
            - xrd_amount: xrd_amount
              vault_entity:
                entity_type: null
                entity_address: entity_address
                is_global: true
          events:
          - data:
              programmatic_json: ""
              hex: hex
            type:
              name: name
              type_reference:
                full_type_id:
                  schema_hash: schema_hash
                  entity_address: entity_address
                  local_type_id:
                    as_sbor:
                      programmatic_json: ""
                      hex: hex
                    kind: WellKnown
                    id: 3994939882
              emitter:
                type: null
          - data:
              programmatic_json: ""
              hex: hex
            type:
              name: name
              type_reference:
                full_type_id:
                  schema_hash: schema_hash
                  entity_address: entity_address
                  local_type_id:
                    as_sbor:
                      programmatic_json: ""
                      hex: hex
                    kind: WellKnown
                    id: 3994939882
              emitter:
                type: null
          status: null
        encoded_receipt: encoded_receipt
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
        logs:
        - level: level
          message: message
        - level: level
          message: message
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        encoded_receipt:
          description: The hex-sbor-encoded receipt
          type: string
        receipt:
          $ref: '#/components/schemas/TransactionReceipt'
        instruction_resource_changes:
          items:
            $ref: '#/components/schemas/InstructionResourceChanges'
          type: array
        logs:
          items:
            $ref: '#/components/schemas/TransactionPreviewResponse_logs_inner'
          type: array
      required:
      - at_ledger_state
      - encoded_receipt
      - instruction_resource_changes
      - logs
      - receipt
      type: object
    StreamTransactionsRequest:
      description: |
        A request to retrieve a sublist of committed transactions from the ledger.
      example:
        sbor_format_options:
          programmatic_json: true
          raw: true
        transaction_format_options:
          blobs: true
          raw_notarized_transaction: true
          manifest: true
          raw_system_transaction: true
          message: true
          raw_ledger_transaction: true
        limit: 6
        include_proofs: true
        from_state_version: 8008281904611
        substate_format_options:
          typed: true
          previous: true
          raw: true
          hash: true
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        from_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        limit:
          description: The maximum number of transactions that will be returned.
          type: integer
        sbor_format_options:
          $ref: '#/components/schemas/SborFormatOptions'
        transaction_format_options:
          $ref: '#/components/schemas/TransactionFormatOptions'
        substate_format_options:
          $ref: '#/components/schemas/SubstateFormatOptions'
        include_proofs:
          description: Whether to include LedgerProofs (default false)
          type: boolean
      required:
      - from_state_version
      - limit
      - network
      type: object
    StreamTransactionsResponse:
      example:
        previous_state_identifiers: null
        max_ledger_state_version: 14658129805030
        proofs:
        - opaque_hash: opaque_hash
          ledger_header:
            consensus_parent_round_timestamp_ms: 70614012415031
            next_epoch:
              validators:
              - stake: stake
                address: address
                key: null
              - stake: stake
                address: address
                key: null
              epoch: 3616076749
            round: 5637376656
            state_version: 23021358869348
            hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
            epoch: 5962133916
            proposer_timestamp_ms: 93014442439325
          timestamped_signatures:
          - signature: null
            validator_address: validator_address
            timestamp_ms: 36160767492519
            validator_key: null
          - signature: null
            validator_address: validator_address
            timestamp_ms: 36160767492519
            validator_key: null
        - opaque_hash: opaque_hash
          ledger_header:
            consensus_parent_round_timestamp_ms: 70614012415031
            next_epoch:
              validators:
              - stake: stake
                address: address
                key: null
              - stake: stake
                address: address
                key: null
              epoch: 3616076749
            round: 5637376656
            state_version: 23021358869348
            hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
            epoch: 5962133916
            proposer_timestamp_ms: 93014442439325
          timestamped_signatures:
          - signature: null
            validator_address: validator_address
            timestamp_ms: 36160767492519
            validator_key: null
          - signature: null
            validator_address: validator_address
            timestamp_ms: 36160767492519
            validator_key: null
        count: 6027
        from_state_version: 8008281904611
        transactions:
        - ledger_transaction:
            payload_hex: payload_hex
            type: null
          resultant_state_identifiers: null
          receipt:
            output:
            - programmatic_json: ""
              hex: hex
            - programmatic_json: ""
              hex: hex
            error_message: error_message
            fee_summary:
              xrd_total_storage_cost: xrd_total_storage_cost
              xrd_total_execution_cost: xrd_total_execution_cost
              execution_cost_units_consumed: 343953088
              xrd_total_finalization_cost: xrd_total_finalization_cost
              finalization_cost_units_consumed: 2588772717
              xrd_total_royalty_cost: xrd_total_royalty_cost
              xrd_total_tipping_cost: xrd_total_tipping_cost
            next_epoch:
              validators:
              - stake: stake
                address: address
                key: null
              - stake: stake
                address: address
                key: null
              epoch: 3616076749
            fee_destination:
              to_burn: to_burn
              to_validator_set: to_validator_set
              to_proposer: to_proposer
              to_royalty_recipients:
              - royalty_recipient:
                  entity_type: null
                  entity_address: entity_address
                  is_global: true
                xrd_amount: xrd_amount
              - royalty_recipient:
                  entity_type: null
                  entity_address: entity_address
                  is_global: true
                xrd_amount: xrd_amount
            costing_parameters:
              finalization_cost_unit_price: finalization_cost_unit_price
              execution_cost_unit_loan: 2560717018
              finalization_cost_unit_limit: 2421234836
              execution_cost_unit_price: execution_cost_unit_price
              xrd_storage_price: xrd_storage_price
              xrd_usd_price: xrd_usd_price
              execution_cost_unit_limit: 629561881
              tip_percentage: 58
            state_updates:
              deleted_substates:
              - system_structure:
                  type: null
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id: null
              - system_structure:
                  type: null
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id: null
              deleted_partitions:
              - entity_type: null
                partition_kind: null
                partition_number: 180
                entity_address: entity_address
                entity_module: null
              - entity_type: null
                partition_kind: null
                partition_number: 180
                entity_address: entity_address
                entity_module: null
              created_substates:
              - system_structure:
                  type: null
                substate_id: null
                value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              - system_structure:
                  type: null
                substate_id: null
                value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              updated_substates:
              - system_structure:
                  type: null
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id: null
                new_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              - system_structure:
                  type: null
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id: null
                new_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              new_global_entities:
              - entity_type: null
                entity_address: entity_address
                is_global: true
              - entity_type: null
                entity_address: entity_address
                is_global: true
            fee_source:
              from_vaults:
              - xrd_amount: xrd_amount
                vault_entity:
                  entity_type: null
                  entity_address: entity_address
                  is_global: true
              - xrd_amount: xrd_amount
                vault_entity:
                  entity_type: null
                  entity_address: entity_address
                  is_global: true
            events:
            - data:
                programmatic_json: ""
                hex: hex
              type:
                name: name
                type_reference:
                  full_type_id:
                    schema_hash: schema_hash
                    entity_address: entity_address
                    local_type_id:
                      as_sbor:
                        programmatic_json: ""
                        hex: hex
                      kind: WellKnown
                      id: 3994939882
                emitter:
                  type: null
            - data:
                programmatic_json: ""
                hex: hex
              type:
                name: name
                type_reference:
                  full_type_id:
                    schema_hash: schema_hash
                    entity_address: entity_address
                    local_type_id:
                      as_sbor:
                        programmatic_json: ""
                        hex: hex
                      kind: WellKnown
                      id: 3994939882
                emitter:
                  type: null
            status: null
          proposer_timestamp_ms: 20271230230023
        - ledger_transaction:
            payload_hex: payload_hex
            type: null
          resultant_state_identifiers: null
          receipt:
            output:
            - programmatic_json: ""
              hex: hex
            - programmatic_json: ""
              hex: hex
            error_message: error_message
            fee_summary:
              xrd_total_storage_cost: xrd_total_storage_cost
              xrd_total_execution_cost: xrd_total_execution_cost
              execution_cost_units_consumed: 343953088
              xrd_total_finalization_cost: xrd_total_finalization_cost
              finalization_cost_units_consumed: 2588772717
              xrd_total_royalty_cost: xrd_total_royalty_cost
              xrd_total_tipping_cost: xrd_total_tipping_cost
            next_epoch:
              validators:
              - stake: stake
                address: address
                key: null
              - stake: stake
                address: address
                key: null
              epoch: 3616076749
            fee_destination:
              to_burn: to_burn
              to_validator_set: to_validator_set
              to_proposer: to_proposer
              to_royalty_recipients:
              - royalty_recipient:
                  entity_type: null
                  entity_address: entity_address
                  is_global: true
                xrd_amount: xrd_amount
              - royalty_recipient:
                  entity_type: null
                  entity_address: entity_address
                  is_global: true
                xrd_amount: xrd_amount
            costing_parameters:
              finalization_cost_unit_price: finalization_cost_unit_price
              execution_cost_unit_loan: 2560717018
              finalization_cost_unit_limit: 2421234836
              execution_cost_unit_price: execution_cost_unit_price
              xrd_storage_price: xrd_storage_price
              xrd_usd_price: xrd_usd_price
              execution_cost_unit_limit: 629561881
              tip_percentage: 58
            state_updates:
              deleted_substates:
              - system_structure:
                  type: null
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id: null
              - system_structure:
                  type: null
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id: null
              deleted_partitions:
              - entity_type: null
                partition_kind: null
                partition_number: 180
                entity_address: entity_address
                entity_module: null
              - entity_type: null
                partition_kind: null
                partition_number: 180
                entity_address: entity_address
                entity_module: null
              created_substates:
              - system_structure:
                  type: null
                substate_id: null
                value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              - system_structure:
                  type: null
                substate_id: null
                value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              updated_substates:
              - system_structure:
                  type: null
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id: null
                new_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              - system_structure:
                  type: null
                previous_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
                substate_id: null
                new_value:
                  substate_data_hash: substate_data_hash
                  substate_data:
                    substate_type: null
                    is_locked: true
                  substate_hex: substate_hex
              new_global_entities:
              - entity_type: null
                entity_address: entity_address
                is_global: true
              - entity_type: null
                entity_address: entity_address
                is_global: true
            fee_source:
              from_vaults:
              - xrd_amount: xrd_amount
                vault_entity:
                  entity_type: null
                  entity_address: entity_address
                  is_global: true
              - xrd_amount: xrd_amount
                vault_entity:
                  entity_type: null
                  entity_address: entity_address
                  is_global: true
            events:
            - data:
                programmatic_json: ""
                hex: hex
              type:
                name: name
                type_reference:
                  full_type_id:
                    schema_hash: schema_hash
                    entity_address: entity_address
                    local_type_id:
                      as_sbor:
                        programmatic_json: ""
                        hex: hex
                      kind: WellKnown
                      id: 3994939882
                emitter:
                  type: null
            - data:
                programmatic_json: ""
                hex: hex
              type:
                name: name
                type_reference:
                  full_type_id:
                    schema_hash: schema_hash
                    entity_address: entity_address
                    local_type_id:
                      as_sbor:
                        programmatic_json: ""
                        hex: hex
                      kind: WellKnown
                      id: 3994939882
                emitter:
                  type: null
            status: null
          proposer_timestamp_ms: 20271230230023
      properties:
        previous_state_identifiers:
          $ref: '#/components/schemas/CommittedStateIdentifier'
        from_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        count:
          description: "An integer between `0` and `10000`, giving the total count\
            \ of transactions in the returned response"
          format: int32
          maximum: 10000
          minimum: 0
          type: integer
        max_ledger_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        transactions:
          description: A committed transactions list starting from the `from_state_version`
            (inclusive).
          items:
            $ref: '#/components/schemas/CommittedTransaction'
          type: array
        proofs:
          description: A ledger proof list starting from `from_state_version` (inclusive)
            stored by this node.
          items:
            $ref: '#/components/schemas/LedgerProof'
          type: array
      required:
      - count
      - from_state_version
      - max_ledger_state_version
      - transactions
      type: object
    StreamTransactionsErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - $ref: '#/components/schemas/StreamTransactionsErrorResponse_allOf'
    StreamTransactionsErrorDetailsType:
      enum:
      - RequestedStateVersionOutOfBounds
      type: string
    StreamTransactionsErrorDetails:
      discriminator:
        mapping:
          RequestedStateVersionOutOfBounds: '#/components/schemas/RequestedStateVersionOutOfBoundsErrorDetails'
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/StreamTransactionsErrorDetailsType'
      required:
      - type
      type: object
    RequestedStateVersionOutOfBoundsErrorDetails:
      allOf:
      - $ref: '#/components/schemas/StreamTransactionsErrorDetails'
      - $ref: '#/components/schemas/RequestedStateVersionOutOfBoundsErrorDetails_allOf'
    CommittedTransaction:
      example:
        ledger_transaction:
          payload_hex: payload_hex
          type: null
        resultant_state_identifiers: null
        receipt:
          output:
          - programmatic_json: ""
            hex: hex
          - programmatic_json: ""
            hex: hex
          error_message: error_message
          fee_summary:
            xrd_total_storage_cost: xrd_total_storage_cost
            xrd_total_execution_cost: xrd_total_execution_cost
            execution_cost_units_consumed: 343953088
            xrd_total_finalization_cost: xrd_total_finalization_cost
            finalization_cost_units_consumed: 2588772717
            xrd_total_royalty_cost: xrd_total_royalty_cost
            xrd_total_tipping_cost: xrd_total_tipping_cost
          next_epoch:
            validators:
            - stake: stake
              address: address
              key: null
            - stake: stake
              address: address
              key: null
            epoch: 3616076749
          fee_destination:
            to_burn: to_burn
            to_validator_set: to_validator_set
            to_proposer: to_proposer
            to_royalty_recipients:
            - royalty_recipient:
                entity_type: null
                entity_address: entity_address
                is_global: true
              xrd_amount: xrd_amount
            - royalty_recipient:
                entity_type: null
                entity_address: entity_address
                is_global: true
              xrd_amount: xrd_amount
          costing_parameters:
            finalization_cost_unit_price: finalization_cost_unit_price
            execution_cost_unit_loan: 2560717018
            finalization_cost_unit_limit: 2421234836
            execution_cost_unit_price: execution_cost_unit_price
            xrd_storage_price: xrd_storage_price
            xrd_usd_price: xrd_usd_price
            execution_cost_unit_limit: 629561881
            tip_percentage: 58
          state_updates:
            deleted_substates:
            - system_structure:
                type: null
              previous_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
              substate_id: null
            - system_structure:
                type: null
              previous_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
              substate_id: null
            deleted_partitions:
            - entity_type: null
              partition_kind: null
              partition_number: 180
              entity_address: entity_address
              entity_module: null
            - entity_type: null
              partition_kind: null
              partition_number: 180
              entity_address: entity_address
              entity_module: null
            created_substates:
            - system_structure:
                type: null
              substate_id: null
              value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
            - system_structure:
                type: null
              substate_id: null
              value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
            updated_substates:
            - system_structure:
                type: null
              previous_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
              substate_id: null
              new_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
            - system_structure:
                type: null
              previous_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
              substate_id: null
              new_value:
                substate_data_hash: substate_data_hash
                substate_data:
                  substate_type: null
                  is_locked: true
                substate_hex: substate_hex
            new_global_entities:
            - entity_type: null
              entity_address: entity_address
              is_global: true
            - entity_type: null
              entity_address: entity_address
              is_global: true
          fee_source:
            from_vaults:
            - xrd_amount: xrd_amount
              vault_entity:
                entity_type: null
                entity_address: entity_address
                is_global: true
            - xrd_amount: xrd_amount
              vault_entity:
                entity_type: null
                entity_address: entity_address
                is_global: true
          events:
          - data:
              programmatic_json: ""
              hex: hex
            type:
              name: name
              type_reference:
                full_type_id:
                  schema_hash: schema_hash
                  entity_address: entity_address
                  local_type_id:
                    as_sbor:
                      programmatic_json: ""
                      hex: hex
                    kind: WellKnown
                    id: 3994939882
              emitter:
                type: null
          - data:
              programmatic_json: ""
              hex: hex
            type:
              name: name
              type_reference:
                full_type_id:
                  schema_hash: schema_hash
                  entity_address: entity_address
                  local_type_id:
                    as_sbor:
                      programmatic_json: ""
                      hex: hex
                    kind: WellKnown
                    id: 3994939882
              emitter:
                type: null
          status: null
        proposer_timestamp_ms: 20271230230023
      properties:
        resultant_state_identifiers:
          $ref: '#/components/schemas/CommittedStateIdentifier'
        ledger_transaction:
          $ref: '#/components/schemas/LedgerTransaction'
        receipt:
          $ref: '#/components/schemas/TransactionReceipt'
        proposer_timestamp_ms:
          description: "An integer between `0` and `10^14`, marking the proposer timestamp\
            \ in ms."
          format: int64
          maximum: 100000000000000
          minimum: 0
          type: integer
      required:
      - ledger_transaction
      - proposer_timestamp_ms
      - receipt
      - resultant_state_identifiers
      type: object
    LedgerProof:
      example:
        opaque_hash: opaque_hash
        ledger_header:
          consensus_parent_round_timestamp_ms: 70614012415031
          next_epoch:
            validators:
            - stake: stake
              address: address
              key: null
            - stake: stake
              address: address
              key: null
            epoch: 3616076749
          round: 5637376656
          state_version: 23021358869348
          hashes:
            state_tree_hash: state_tree_hash
            transaction_tree_hash: transaction_tree_hash
            receipt_tree_hash: receipt_tree_hash
          epoch: 5962133916
          proposer_timestamp_ms: 93014442439325
        timestamped_signatures:
        - signature: null
          validator_address: validator_address
          timestamp_ms: 36160767492519
          validator_key: null
        - signature: null
          validator_address: validator_address
          timestamp_ms: 36160767492519
          validator_key: null
      properties:
        opaque_hash:
          description: "A hex-encoded 32-byte vertex VoteData hash on the consensus\
            \ side, opaque to ledger."
          maxLength: 64
          minLength: 64
          type: string
        ledger_header:
          $ref: '#/components/schemas/LedgerHeader'
        timestamped_signatures:
          items:
            $ref: '#/components/schemas/TimestampedValidatorSignature'
          type: array
      required:
      - ledger_header
      - opaque_hash
      - timestamped_signatures
      type: object
    LedgerHeader:
      example:
        consensus_parent_round_timestamp_ms: 70614012415031
        next_epoch:
          validators:
          - stake: stake
            address: address
            key: null
          - stake: stake
            address: address
            key: null
          epoch: 3616076749
        round: 5637376656
        state_version: 23021358869348
        hashes:
          state_tree_hash: state_tree_hash
          transaction_tree_hash: transaction_tree_hash
          receipt_tree_hash: receipt_tree_hash
        epoch: 5962133916
        proposer_timestamp_ms: 93014442439325
      properties:
        epoch:
          description: "An integer between `0` and `10^10`, marking the epoch."
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        round:
          description: "An integer between `0` and `10^10`, marking the current round\
            \ in an epoch"
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
        hashes:
          $ref: '#/components/schemas/LedgerHashes'
        consensus_parent_round_timestamp_ms:
          description: "An integer between `0` and `10^14`, marking the consensus\
            \ parent round timestamp in ms."
          format: int64
          maximum: 100000000000000
          minimum: 0
          type: integer
        proposer_timestamp_ms:
          description: "An integer between `0` and `10^14`, marking the proposer timestamp\
            \ in ms."
          format: int64
          maximum: 100000000000000
          minimum: 0
          type: integer
        next_epoch:
          $ref: '#/components/schemas/NextEpoch'
      required:
      - consensus_parent_round_timestamp_ms
      - epoch
      - hashes
      - proposer_timestamp_ms
      - round
      - state_version
      type: object
    TimestampedValidatorSignature:
      example:
        signature: null
        validator_address: validator_address
        timestamp_ms: 36160767492519
        validator_key: null
      properties:
        validator_key:
          $ref: '#/components/schemas/EcdsaSecp256k1PublicKey'
        validator_address:
          description: The Bech32m-encoded human readable version of the component
            address
          type: string
        timestamp_ms:
          description: "An integer between `0` and `10^14`, marking the unix timestamp\
            \ in ms."
          format: int64
          maximum: 100000000000000
          minimum: 0
          type: integer
        signature:
          $ref: '#/components/schemas/EcdsaSecp256k1Signature'
      required:
      - signature
      - timestamp_ms
      - validator_address
      - validator_key
      type: object
    OpaqueHash:
      description: "A hex-encoded 32-byte vertex VoteData hash on the consensus side,\
        \ opaque to ledger."
      maxLength: 64
      minLength: 64
      type: string
    LedgerTransactionType:
      description: The type of the ledger transaction
      enum:
      - Genesis
      - User
      - RoundUpdate
      type: string
    LedgerTransaction:
      discriminator:
        mapping:
          Genesis: '#/components/schemas/GenesisLedgerTransaction'
          User: '#/components/schemas/UserLedgerTransaction'
          RoundUpdate: '#/components/schemas/RoundUpdateLedgerTransaction'
        propertyName: type
      example:
        payload_hex: payload_hex
        type: null
      properties:
        type:
          $ref: '#/components/schemas/LedgerTransactionType'
        payload_hex:
          description: The hex-encoded full ledger transaction payload. Only returned
            if enabled in TransactionFormatOptions on your request.
          type: string
      required:
      - type
      type: object
    GenesisLedgerTransaction:
      allOf:
      - $ref: '#/components/schemas/LedgerTransaction'
      - $ref: '#/components/schemas/GenesisLedgerTransaction_allOf'
    UserLedgerTransaction:
      allOf:
      - $ref: '#/components/schemas/LedgerTransaction'
      - $ref: '#/components/schemas/UserLedgerTransaction_allOf'
    RoundUpdateLedgerTransaction:
      allOf:
      - $ref: '#/components/schemas/LedgerTransaction'
      - $ref: '#/components/schemas/RoundUpdateLedgerTransaction_allOf'
    RoundUpdateTransaction:
      properties:
        proposer_timestamp:
          $ref: '#/components/schemas/Instant'
        epoch:
          description: |
            An integer between `0` and `10^10`, marking the epoch.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        round_in_epoch:
          description: "An integer between `0` and `10^10`, marking the consensus\
            \ round in the epoch"
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        leader_proposal_history:
          $ref: '#/components/schemas/LeaderProposalHistory'
      required:
      - epoch
      - leader_proposal_history
      - proposer_timestamp
      - round_in_epoch
      type: object
    LeaderProposalHistory:
      properties:
        gap_round_leaders:
          description: The validators which were leaders of the "gap" rounds (i.e.
            since the previous `RoundUpdateValidatorTransaction` - which means that
            this list will contain exactly `current.round - previous.round - 1` elements).
            The validators on this list should be penalized during emissions at the
            end of the epoch.
          items:
            $ref: '#/components/schemas/ActiveValidatorIndex'
          type: array
        current_leader:
          $ref: '#/components/schemas/ActiveValidatorIndex'
        is_fallback:
          description: "Whether the concluded round was conducted in a \"fallback\"\
            \ mode (i.e. indicating a fault of the current leader). When `true`, the\
            \ `current_leader` should be penalized during emissions in the same way\
            \ as `gap_round_leaders`. When `false`, the `current_leader` is considered\
            \ to have made this round's proposal successfully."
          type: boolean
      required:
      - current_leader
      - gap_round_leaders
      - is_fallback
      type: object
    ActiveValidatorIndex:
      properties:
        index:
          description: An index of a validator within a specific active validator
            set (ordered by stake descending). This is the same ordering as used by
            other parts of the API which list active validators.
          format: int32
          maximum: 255
          minimum: 0
          type: integer
      required:
      - index
      type: object
    SystemTransaction:
      properties:
        payload_hex:
          description: The hex-encoded system transaction payload. Only returned if
            enabled in TransactionFormatOptions on your request.
          type: string
      type: object
    StateConsensusManagerRequest:
      example:
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
      required:
      - network
      type: object
    StateConsensusManagerResponse:
      example:
        current_validator_set:
          substate_type: null
          is_locked: true
        current_proposal_statistic:
          substate_type: null
          is_locked: true
        state:
          substate_type: null
          is_locked: true
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
        config:
          substate_type: null
          is_locked: true
        current_time:
          substate_type: null
          is_locked: true
        current_time_rounded_to_minutes:
          substate_type: null
          is_locked: true
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        config:
          $ref: '#/components/schemas/Substate'
        state:
          $ref: '#/components/schemas/Substate'
        current_proposal_statistic:
          $ref: '#/components/schemas/Substate'
        current_validator_set:
          $ref: '#/components/schemas/Substate'
        current_time:
          $ref: '#/components/schemas/Substate'
        current_time_rounded_to_minutes:
          $ref: '#/components/schemas/Substate'
      required:
      - at_ledger_state
      - config
      - current_proposal_statistic
      - current_time
      - current_time_rounded_to_minutes
      - current_validator_set
      - state
      type: object
    StateAccountRequest:
      example:
        account_address: account_address
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        account_address:
          description: The Bech32m-encoded human readable version of the account's
            global address
          type: string
      required:
      - account_address
      - network
      type: object
    StateAccountResponse:
      example:
        owner_role:
          substate_type: null
          is_locked: true
        vaults:
        - resource_amount:
            resource_type: null
            resource_address: resource_address
          vault_entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
        - resource_amount:
            resource_type: null
            resource_address: resource_address
          vault_entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
        state:
          substate_type: null
          is_locked: true
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
        info:
          substate_type: null
          is_locked: true
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        info:
          $ref: '#/components/schemas/Substate'
        owner_role:
          $ref: '#/components/schemas/Substate'
        state:
          $ref: '#/components/schemas/Substate'
        vaults:
          description: All of the account's vaults
          items:
            $ref: '#/components/schemas/VaultBalance'
          type: array
      required:
      - at_ledger_state
      - info
      - owner_role
      - state
      - vaults
      type: object
    VaultBalance:
      example:
        resource_amount:
          resource_type: null
          resource_address: resource_address
        vault_entity:
          entity_type: null
          entity_address: entity_address
          is_global: true
      properties:
        vault_entity:
          $ref: '#/components/schemas/EntityReference'
        resource_amount:
          $ref: '#/components/schemas/ResourceAmount'
      required:
      - resource_amount
      - vault_entity
      type: object
    StateComponentRequest:
      example:
        component_address: component_address
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        component_address:
          description: The Bech32m-encoded human readable version of the component's
            global address
          type: string
      required:
      - component_address
      - network
      type: object
    StateComponentResponse:
      example:
        royalty_accumulator:
          substate_type: null
          is_locked: true
        owner_role:
          substate_type: null
          is_locked: true
        descendent_nodes:
        - depth: 60
          parent_entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
          parent_partition_number: 20
          parent_substate_key_hex: parent_substate_key_hex
          parent_substate_db_sort_key_hex: parent_substate_db_sort_key_hex
          entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
        - depth: 60
          parent_entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
          parent_partition_number: 20
          parent_substate_key_hex: parent_substate_key_hex
          parent_substate_db_sort_key_hex: parent_substate_db_sort_key_hex
          entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
        vaults:
        - resource_amount:
            resource_type: null
            resource_address: resource_address
          vault_entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
        - resource_amount:
            resource_type: null
            resource_address: resource_address
          vault_entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
        state:
          substate_type: null
          is_locked: true
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
        info:
          substate_type: null
          is_locked: true
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        info:
          $ref: '#/components/schemas/Substate'
        state:
          $ref: '#/components/schemas/Substate'
        royalty_accumulator:
          $ref: '#/components/schemas/Substate'
        owner_role:
          $ref: '#/components/schemas/Substate'
        vaults:
          description: Any vaults owned directly or indirectly by the component
          items:
            $ref: '#/components/schemas/VaultBalance'
          type: array
        descendent_nodes:
          description: Any descendent nodes owned directly or indirectly by the component
          items:
            $ref: '#/components/schemas/StateComponentDescendentNode'
          type: array
      required:
      - at_ledger_state
      - descendent_nodes
      - info
      - owner_role
      - state
      - vaults
      type: object
    StateComponentDescendentNode:
      example:
        depth: 60
        parent_entity:
          entity_type: null
          entity_address: entity_address
          is_global: true
        parent_partition_number: 20
        parent_substate_key_hex: parent_substate_key_hex
        parent_substate_db_sort_key_hex: parent_substate_db_sort_key_hex
        entity:
          entity_type: null
          entity_address: entity_address
          is_global: true
      properties:
        parent_entity:
          $ref: '#/components/schemas/EntityReference'
        parent_partition_number:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        parent_substate_key_hex:
          description: "The hex-encoded bytes of the substate key, under the entity\
            \ partition"
          type: string
        parent_substate_db_sort_key_hex:
          description: "The hex-encoded bytes of the partially-hashed DB sort key,\
            \ under the given entity partition"
          type: string
        entity:
          $ref: '#/components/schemas/EntityReference'
        depth:
          description: Depth under component
          format: int32
          maximum: 100
          minimum: 0
          type: integer
      required:
      - depth
      - entity
      - parent_entity
      - parent_partition_number
      - parent_substate_db_sort_key_hex
      - parent_substate_key_hex
      type: object
    StateValidatorRequest:
      example:
        validator_address: validator_address
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        validator_address:
          description: The Bech32m-encoded human readable version of the component
            address
          type: string
      required:
      - network
      - validator_address
      type: object
    StateValidatorResponse:
      example:
        address: address
        owner_role:
          substate_type: null
          is_locked: true
        descendent_nodes:
        - depth: 60
          parent_entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
          parent_partition_number: 20
          parent_substate_key_hex: parent_substate_key_hex
          parent_substate_db_sort_key_hex: parent_substate_db_sort_key_hex
          entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
        - depth: 60
          parent_entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
          parent_partition_number: 20
          parent_substate_key_hex: parent_substate_key_hex
          parent_substate_db_sort_key_hex: parent_substate_db_sort_key_hex
          entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
        vaults:
        - resource_amount:
            resource_type: null
            resource_address: resource_address
          vault_entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
        - resource_amount:
            resource_type: null
            resource_address: resource_address
          vault_entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
        state:
          substate_type: null
          is_locked: true
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        address:
          description: The Bech32m-encoded human readable version of the component
            address
          type: string
        state:
          $ref: '#/components/schemas/Substate'
        owner_role:
          $ref: '#/components/schemas/Substate'
        vaults:
          description: Any vaults owned directly or indirectly by the component
          items:
            $ref: '#/components/schemas/VaultBalance'
          type: array
        descendent_nodes:
          description: Any descendent nodes owned directly or indirectly by the component
          items:
            $ref: '#/components/schemas/StateComponentDescendentNode'
          type: array
      required:
      - address
      - at_ledger_state
      - descendent_nodes
      - owner_role
      - state
      - vaults
      type: object
    StateAccessControllerRequest:
      example:
        controller_address: controller_address
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        controller_address:
          description: The Bech32m-encoded human readable version of the component
            address
          type: string
      required:
      - controller_address
      - network
      type: object
    StateAccessControllerResponse:
      example:
        owner_role:
          substate_type: null
          is_locked: true
        descendent_nodes:
        - depth: 60
          parent_entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
          parent_partition_number: 20
          parent_substate_key_hex: parent_substate_key_hex
          parent_substate_db_sort_key_hex: parent_substate_db_sort_key_hex
          entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
        - depth: 60
          parent_entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
          parent_partition_number: 20
          parent_substate_key_hex: parent_substate_key_hex
          parent_substate_db_sort_key_hex: parent_substate_db_sort_key_hex
          entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
        vaults:
        - resource_amount:
            resource_type: null
            resource_address: resource_address
          vault_entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
        - resource_amount:
            resource_type: null
            resource_address: resource_address
          vault_entity:
            entity_type: null
            entity_address: entity_address
            is_global: true
        state:
          substate_type: null
          is_locked: true
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        state:
          $ref: '#/components/schemas/Substate'
        owner_role:
          $ref: '#/components/schemas/Substate'
        vaults:
          description: Any vaults owned directly or indirectly by the component
          items:
            $ref: '#/components/schemas/VaultBalance'
          type: array
        descendent_nodes:
          description: Any descendent nodes owned directly or indirectly by the component
          items:
            $ref: '#/components/schemas/StateComponentDescendentNode'
          type: array
      required:
      - at_ledger_state
      - descendent_nodes
      - owner_role
      - state
      - vaults
      type: object
    StateResourceRequest:
      example:
        resource_address: resource_address
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        resource_address:
          description: The Bech32m-encoded human readable version of the resource's
            global address
          type: string
      required:
      - network
      - resource_address
      type: object
    StateResourceResponse:
      example:
        manager:
          resource_type: null
        owner_role:
          substate_type: null
          is_locked: true
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        manager:
          $ref: '#/components/schemas/StateResourceManager'
        owner_role:
          $ref: '#/components/schemas/Substate'
      required:
      - at_ledger_state
      - manager
      - owner_role
      type: object
    StateResourceManager:
      discriminator:
        mapping:
          Fungible: '#/components/schemas/StateFungibleResourceManager'
          NonFungible: '#/components/schemas/StateNonFungibleResourceManager'
        propertyName: resource_type
      example:
        resource_type: null
      properties:
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      required:
      - resource_type
      type: object
    StateFungibleResourceManager:
      allOf:
      - $ref: '#/components/schemas/StateResourceManager'
      - $ref: '#/components/schemas/StateFungibleResourceManager_allOf'
    StateNonFungibleResourceManager:
      allOf:
      - $ref: '#/components/schemas/StateResourceManager'
      - $ref: '#/components/schemas/StateNonFungibleResourceManager_allOf'
    StateNonFungibleRequest:
      example:
        non_fungible_id: non_fungible_id
        resource_address: resource_address
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        resource_address:
          description: The Bech32m-encoded human readable version of the resource's
            global address
          type: string
        non_fungible_id:
          description: |
            The simple string representation of the non-fungible id.
            * For string ids, this is `<the-string-id>`
            * For integer ids, this is `#the-integer-id#`
            * For bytes ids, this is `[the-lower-case-hex-representation]`
            * For RUID ids, this is `{...-...-...-...}` where `...` are each 16 hex characters.
            A given non-fungible resource has a fixed `NonFungibleIdType`, so this representation uniquely identifies this non-fungible
            under the given resource address.
          type: string
      required:
      - network
      - non_fungible_id
      - resource_address
      type: object
    StateNonFungibleResponse:
      example:
        non_fungible:
          substate_type: null
          is_locked: true
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        non_fungible:
          $ref: '#/components/schemas/Substate'
      required:
      - at_ledger_state
      - non_fungible
      type: object
    StatePackageRequest:
      example:
        package_address: package_address
        network: "{{network}}"
      properties:
        network:
          description: The logical name of the network
          example: "{{network}}"
          type: string
        package_address:
          description: The Bech32m-encoded human readable version of the package's
            global address
          type: string
      required:
      - network
      - package_address
      type: object
    StatePackageResponse:
      example:
        owner_role:
          substate_type: null
          is_locked: true
        royalty:
          substate_type: null
          is_locked: true
        at_ledger_state:
          state_version: 8008281904611
          header_summary:
            epoch_round:
              round: 1465812980
              epoch: 6027456183
            proposer_timestamp:
              date_time: date_time
              unix_timestamp_ms: 60274561830704
            ledger_hashes:
              state_tree_hash: state_tree_hash
              transaction_tree_hash: transaction_tree_hash
              receipt_tree_hash: receipt_tree_hash
      properties:
        at_ledger_state:
          $ref: '#/components/schemas/LedgerStateSummary'
        owner_role:
          $ref: '#/components/schemas/Substate'
        royalty:
          $ref: '#/components/schemas/Substate'
      required:
      - at_ledger_state
      - owner_role
      type: object
    PlaintextTransactionMessage_allOf:
      description: An unencrypted message.
      properties:
        mime_type:
          description: |
            Intended to represent the RFC 2046 MIME type of the `content`.
            A client cannot trust that this field is a valid mime type - in particular, the
            choice between `String` or `Binary` representation of the content is not enforced by
            this `mime_type`.
          type: string
        content:
          $ref: '#/components/schemas/PlaintextMessageContent'
      required:
      - content
      - mime_type
      type: object
      example: null
    StringPlaintextMessageContent_allOf:
      properties:
        value:
          description: The value of a message that the author decided to provide as
            a UTF-8 string.
          type: string
      required:
      - value
      type: object
      example: null
    BinaryPlaintextMessageContent_allOf:
      properties:
        value_hex:
          description: The hex-encoded value of a message that the author decided
            to provide as raw bytes.
          type: string
      required:
      - value_hex
      type: object
      example: null
    EncryptedTransactionMessage_allOf:
      description: A `PlaintextTransactionMessage` encrypted with "Multi-party ECIES"
        for a number of decryptors (public keys).
      properties:
        encrypted_hex:
          description: |
            The hex-encoded (128-bit) AES-GCM encrypted bytes of an SBOR-encoded `PlaintextTransactionMessage`.
            The bytes are serialized as the concatenation `Nonce/IV (12 bytes) || Cipher (variable length) || Tag/MAC (16 bytes)`:
          type: string
        curve_decryptor_sets:
          items:
            $ref: '#/components/schemas/EncryptedMessageCurveDecryptorSet'
          type: array
      required:
      - curve_decryptor_sets
      - encrypted_hex
      type: object
      example: null
    SubstateId_allOf:
      properties:
        substate_type:
          $ref: '#/components/schemas/SubstateType'
        substate_key:
          $ref: '#/components/schemas/SubstateKey'
      required:
      - substate_key
      - substate_type
      type: object
      example: null
    StaticBlueprintPayloadDef_allOf:
      properties:
        type_id:
          $ref: '#/components/schemas/ScopedTypeId'
      required:
      - type_id
      type: object
      example: null
    GenericBlueprintPayloadDef_allOf:
      properties:
        generic_index:
          description: An index within the list of generic type substitutions.
          format: int32
          maximum: 255
          minimum: 0
          type: integer
      required:
      - generic_index
      type: object
      example: null
    FieldSubstateKey_allOf:
      properties:
        id:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
      required:
      - id
      type: object
      example: null
    MapSubstateKey_allOf:
      properties:
        key_hex:
          description: The hex-encoded bytes of the substate key
          type: string
      required:
      - key_hex
      type: object
      example: null
    SortedSubstateKey_allOf:
      properties:
        sort_prefix_hex:
          description: The hex-encoded bytes of the sorted part of the key
          type: string
        key_hex:
          description: The hex-encoded remaining bytes of the key
          type: string
      required:
      - key_hex
      - sort_prefix_hex
      type: object
      example: null
    FunctionEventEmitterIdentifier_allOf:
      properties:
        package_address:
          description: The Bech32m-encoded human readable version of the package address
          type: string
        blueprint_name:
          description: The blueprint under the package which emitted the event.
          type: string
      required:
      - blueprint_name
      - package_address
      type: object
      example: null
    MethodEventEmitterIdentifier_allOf:
      properties:
        entity:
          $ref: '#/components/schemas/EntityReference'
        object_module_id:
          $ref: '#/components/schemas/ModuleId'
      required:
      - entity
      - object_module_id
      type: object
      example: null
    EcdsaSecp256k1PublicKey_allOf:
      properties:
        key_hex:
          description: The hex-encoded compressed ECDSA Secp256k1 public key (33 bytes)
          maxLength: 66
          minLength: 66
          type: string
      required:
      - key_hex
      type: object
      example: null
    EddsaEd25519PublicKey_allOf:
      properties:
        key_hex:
          description: The hex-encoded compressed EdDSA Ed25519 public key (32 bytes)
          maxLength: 64
          minLength: 64
          type: string
      required:
      - key_hex
      type: object
      example: null
    EcdsaSecp256k1Signature_allOf:
      properties:
        signature_hex:
          description: "A hex-encoded recoverable ECDSA Secp256k1 signature (65 bytes).\
            \ The first byte is the recovery id, the remaining 64 bytes are the compact\
            \ signature, ie `CONCAT(R, s)` where `R` and `s` are each 32-bytes in\
            \ padded big-endian format."
          maxLength: 130
          minLength: 130
          type: string
      required:
      - signature_hex
      type: object
      example: null
    EddsaEd25519Signature_allOf:
      properties:
        signature_hex:
          description: "A hex-encoded EdDSA Ed25519 signature (64 bytes). This is\
            \ `CONCAT(R, s)` where `R` and `s` are each 32-bytes in padded big-endian\
            \ format."
          maxLength: 128
          minLength: 128
          type: string
      required:
      - signature_hex
      type: object
      example: null
    EcdsaSecp256k1SignatureWithPublicKey_allOf:
      description: "Because ECDSA has recoverable signatures, this only includes a\
        \ signature"
      properties:
        recoverable_signature:
          $ref: '#/components/schemas/EcdsaSecp256k1Signature'
      required:
      - recoverable_signature
      type: object
      example: null
    EddsaEd25519SignatureWithPublicKey_allOf:
      description: The EdDSA public key and signature
      properties:
        public_key:
          $ref: '#/components/schemas/EddsaEd25519PublicKey'
        signature:
          $ref: '#/components/schemas/EddsaEd25519Signature'
      required:
      - public_key
      - signature
      type: object
      example: null
    ProtectedAccessRule_allOf:
      properties:
        access_rule:
          $ref: '#/components/schemas/AccessRuleNode'
      required:
      - access_rule
      type: object
      example: null
    ProofAccessRuleNode_allOf:
      properties:
        proof_rule:
          $ref: '#/components/schemas/ProofRule'
      required:
      - proof_rule
      type: object
      example: null
    AnyOfAccessRuleNode_allOf:
      properties:
        access_rules:
          items:
            $ref: '#/components/schemas/AccessRuleNode'
          type: array
      required:
      - access_rules
      type: object
      example: null
    RequireProofRule_allOf:
      properties:
        requirement:
          $ref: '#/components/schemas/Requirement'
      required:
      - requirement
      type: object
      example: null
    AmountOfProofRule_allOf:
      properties:
        amount:
          type: string
        resource:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
      required:
      - amount
      - resource
      type: object
      example: null
    AllOfProofRule_allOf:
      properties:
        list:
          items:
            $ref: '#/components/schemas/Requirement'
          type: array
      required:
      - list
      type: object
      example: null
    CountOfProofRule_allOf:
      properties:
        count:
          type: integer
        list:
          items:
            $ref: '#/components/schemas/Requirement'
          type: array
      required:
      - count
      - list
      type: object
      example: null
    ResourceRequirement_allOf:
      properties:
        resource:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
      required:
      - resource
      type: object
      example: null
    NonFungibleRequirement_allOf:
      properties:
        non_fungible:
          $ref: '#/components/schemas/NonFungibleGlobalId'
      required:
      - non_fungible
      type: object
      example: null
    FungibleResourceAmount_allOf:
      properties:
        amount:
          description: |
            The string-encoded decimal representing the amount of this resource (some decimal for fungible resources, a whole integer for non-fungible resources).
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
      required:
      - amount
      type: object
      example: null
    NonFungibleResourceAmount_allOf:
      properties:
        amount:
          description: |
            The string-encoded decimal representing the amount of this resource (some decimal for fungible resources, a whole integer for non-fungible resources).
            A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(192 - 1) <= m < 2^(192 - 1)`.
          type: string
        non_fungible_ids:
          items:
            $ref: '#/components/schemas/NonFungibleLocalId'
          type: array
      required:
      - amount
      - non_fungible_ids
      type: object
      example: null
    NonFungiblePresentedBadge_allOf:
      properties:
        local_id:
          description: |
            The simple string representation of the non-fungible id.
            * For string ids, this is `<the-string-id>`
            * For integer ids, this is `#the-integer-id#`
            * For bytes ids, this is `[the-lower-case-hex-representation]`
            * For RUID ids, this is `{...-...-...-...}` where `...` are each 16 hex characters.
            A given non-fungible resource has a fixed `NonFungibleIdType`, so this representation uniquely identifies this non-fungible
            under the given resource address.
          type: string
      required:
      - local_id
      type: object
      example: null
    SystemFieldStructure_allOf:
      properties:
        field_kind:
          $ref: '#/components/schemas/SystemFieldKind'
      required:
      - field_kind
      type: object
      example: null
    KeyValueStoreEntryStructure_allOf:
      properties:
        key_full_type_id:
          $ref: '#/components/schemas/FullyScopedTypeId'
        value_full_type_id:
          $ref: '#/components/schemas/FullyScopedTypeId'
      required:
      - key_full_type_id
      - value_full_type_id
      type: object
      example: null
    ObjectFieldStructure_allOf:
      properties:
        value_schema:
          $ref: '#/components/schemas/ObjectSubstateTypeReference'
      required:
      - value_schema
      type: object
      example: null
    ObjectInstanceTypeReference_allOf:
      properties:
        resolved_full_type_id:
          $ref: '#/components/schemas/FullyScopedTypeId'
        generic_index:
          description: |
            The index of the generic parameter in the instance definition.
            Was called the `instance_type_index`.
          format: int32
          maximum: 255
          minimum: 0
          type: integer
      required:
      - generic_index
      - resolved_full_type_id
      type: object
      example: null
    RoleProtectedMethodAccessibility_allOf:
      properties:
        allowed_roles:
          items:
            type: string
          type: array
      required:
      - allowed_roles
      type: object
      example: null
    FieldSchemaFeatureConditionIfOwnFeature_allOf:
      properties:
        feature_name:
          type: string
      required:
      - feature_name
      type: object
      example: null
    KeyValueBlueprintCollectionSchema_allOf:
      properties:
        key_type_ref:
          $ref: '#/components/schemas/BlueprintPayloadDef'
        value_type_ref:
          $ref: '#/components/schemas/BlueprintPayloadDef'
        allow_ownership:
          description: Whether the entries of the key-value partition are allowed
            to own child nodes.
          type: boolean
      required:
      - allow_ownership
      - key_type_ref
      - value_type_ref
      type: object
      example: null
    IndexBlueprintCollectionSchema_allOf:
      properties:
        key_type_ref:
          $ref: '#/components/schemas/BlueprintPayloadDef'
        value_type_ref:
          $ref: '#/components/schemas/BlueprintPayloadDef'
        allow_ownership:
          description: Whether the entries of the index partition are allowed to own
            child nodes.
          type: boolean
      required:
      - allow_ownership
      - key_type_ref
      - value_type_ref
      type: object
      example: null
    SortedIndexBlueprintCollectionSchema_allOf:
      properties:
        key_type_ref:
          $ref: '#/components/schemas/BlueprintPayloadDef'
        value_type_ref:
          $ref: '#/components/schemas/BlueprintPayloadDef'
        allow_ownership:
          description: Whether the entries of the sorted index partition are allowed
            to own child nodes.
          type: boolean
      required:
      - allow_ownership
      - key_type_ref
      - value_type_ref
      type: object
      example: null
    BlueprintSchemaBlueprintTypeReference_allOf:
      properties:
        local_type_id:
          $ref: '#/components/schemas/LocalTypeId'
      required:
      - local_type_id
      type: object
      example: null
    InstanceSchemaBlueprintTypeReference_allOf:
      properties:
        instance_provided_type_index:
          description: Provided by an instance's schema at the given index in its
            provided types array.
          format: int32
          maximum: 255
          minimum: 0
          type: integer
      required:
      - instance_provided_type_index
      type: object
      example: null
    ResourceAuthorizedDepositorBadge_allOf:
      properties:
        resource_address:
          description: The Bech32m-encoded human readable version of the resource
            address
          type: string
      required:
      - resource_address
      type: object
      example: null
    NonFungibleAuthorizedDepositorBadge_allOf:
      properties:
        non_fungible_global_id:
          $ref: '#/components/schemas/NonFungibleGlobalId'
      required:
      - non_fungible_global_id
      type: object
      example: null
    TypeInfoModuleFieldTypeInfoSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/TypeInfoModuleFieldTypeInfoValue'
      required:
      - value
      type: object
      example: null
    ObjectTypeInfoDetails_allOf:
      properties:
        module_versions:
          items:
            $ref: '#/components/schemas/ModuleVersion'
          type: array
        blueprint_info:
          $ref: '#/components/schemas/BlueprintInfo'
        global:
          type: boolean
      required:
      - blueprint_info
      - global
      - module_versions
      type: object
      example: null
    KeyValueStoreTypeInfoDetails_allOf:
      properties:
        key_value_store_info:
          $ref: '#/components/schemas/KeyValueStoreInfo'
      required:
      - key_value_store_info
      type: object
      example: null
    LocalGenericSubstitution_allOf:
      description: |
        The generic substitution is provided by the instance itself.
        The `scoped_type_id` can be expanded to a `FullyScopedTypeId` by including the current entity's address.
      properties:
        scoped_type_id:
          $ref: '#/components/schemas/ScopedTypeId'
      required:
      - scoped_type_id
      type: object
      example: null
    RemoteGenericSubstitution_allOf:
      description: |
        The generic substitution is provided remotely by a blueprint type.
        The `resolved_full_type_id` is added by the node, and is always present in the model returned from the transaction stream API.
        Other APIs may not resolve the type from the blueprint definition.
      properties:
        blueprint_type_identifier:
          $ref: '#/components/schemas/BlueprintTypeIdentifier'
        resolved_full_type_id:
          $ref: '#/components/schemas/FullyScopedTypeId'
      required:
      - blueprint_type_identifier
      type: object
      example: null
    RoleAssignmentModuleFieldOwnerRoleSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/RoleAssignmentModuleFieldOwnerRoleValue'
      required:
      - value
      type: object
      example: null
    RoleAssignmentModuleRuleEntrySubstate_allOf:
      properties:
        key:
          $ref: '#/components/schemas/ObjectRoleKey'
        value:
          $ref: '#/components/schemas/RoleAssignmentModuleRuleEntryValue'
      required:
      - key
      type: object
      example: null
    RoyaltyModuleFieldStateSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/RoyaltyModuleFieldStateValue'
      required:
      - value
      type: object
      example: null
    RoyaltyModuleMethodRoyaltyEntrySubstate_allOf:
      properties:
        key:
          $ref: '#/components/schemas/MainMethodKey'
        value:
          $ref: '#/components/schemas/RoyaltyModuleMethodRoyaltyEntryValue'
      required:
      - key
      type: object
      example: null
    MetadataModuleEntrySubstate_allOf:
      properties:
        key:
          $ref: '#/components/schemas/MetadataKey'
        value:
          $ref: '#/components/schemas/MetadataModuleEntryValue'
      required:
      - key
      type: object
      example: null
    TransactionTrackerFieldStateSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/TransactionTrackerFieldStateValue'
      required:
      - value
      type: object
      example: null
    TransactionTrackerCollectionEntrySubstate_allOf:
      properties:
        key:
          $ref: '#/components/schemas/TransactionIdKey'
        value:
          $ref: '#/components/schemas/TransactionTrackerCollectionEntryValue'
      required:
      - key
      - value
      type: object
      example: null
    PackageFieldRoyaltyAccumulatorSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/PackageFieldRoyaltyAccumulatorValue'
      required:
      - value
      type: object
      example: null
    PackageCodeVmTypeEntrySubstate_allOf:
      properties:
        key:
          $ref: '#/components/schemas/PackageCodeKey'
        value:
          $ref: '#/components/schemas/PackageCodeVmTypeEntryValue'
      required:
      - key
      - value
      type: object
      example: null
    PackageCodeOriginalCodeEntrySubstate_allOf:
      properties:
        key:
          $ref: '#/components/schemas/PackageCodeKey'
        value:
          $ref: '#/components/schemas/PackageCodeOriginalCodeEntryValue'
      required:
      - key
      - value
      type: object
      example: null
    PackageCodeInstrumentedCodeEntrySubstate_allOf:
      properties:
        key:
          $ref: '#/components/schemas/PackageCodeKey'
        value:
          $ref: '#/components/schemas/PackageCodeInstrumentedCodeEntryValue'
      required:
      - key
      - value
      type: object
      example: null
    SchemaEntrySubstate_allOf:
      properties:
        key:
          $ref: '#/components/schemas/SchemaKey'
        value:
          $ref: '#/components/schemas/SchemaEntryValue'
      required:
      - key
      - value
      type: object
      example: null
    PackageBlueprintDefinitionEntrySubstate_allOf:
      properties:
        key:
          $ref: '#/components/schemas/BlueprintVersionKey'
        value:
          $ref: '#/components/schemas/PackageBlueprintDefinitionEntryValue'
      required:
      - key
      - value
      type: object
      example: null
    PackageBlueprintDependenciesEntrySubstate_allOf:
      properties:
        key:
          $ref: '#/components/schemas/BlueprintVersionKey'
        value:
          $ref: '#/components/schemas/PackageBlueprintDependenciesEntryValue'
      required:
      - key
      - value
      type: object
      example: null
    PackageBlueprintRoyaltyEntrySubstate_allOf:
      properties:
        key:
          $ref: '#/components/schemas/BlueprintVersionKey'
        value:
          $ref: '#/components/schemas/PackageBlueprintRoyaltyEntryValue'
      required:
      - key
      - value
      type: object
      example: null
    PackageBlueprintAuthTemplateEntrySubstate_allOf:
      properties:
        key:
          $ref: '#/components/schemas/BlueprintVersionKey'
        value:
          $ref: '#/components/schemas/PackageBlueprintAuthTemplateEntryValue'
      required:
      - key
      - value
      type: object
      example: null
    FungibleResourceManagerFieldDivisibilitySubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/FungibleResourceManagerFieldDivisibilityValue'
      required:
      - value
      type: object
      example: null
    FungibleResourceManagerFieldTotalSupplySubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/FungibleResourceManagerFieldTotalSupplyValue'
      required:
      - value
      type: object
      example: null
    NonFungibleResourceManagerFieldIdTypeSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/NonFungibleResourceManagerFieldIdTypeValue'
      required:
      - value
      type: object
      example: null
    NonFungibleResourceManagerFieldTotalSupplySubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/NonFungibleResourceManagerFieldTotalSupplyValue'
      required:
      - value
      type: object
      example: null
    NonFungibleResourceManagerFieldMutableFieldsSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/NonFungibleResourceManagerFieldMutableFieldsValue'
      required:
      - value
      type: object
      example: null
    NonFungibleResourceManagerDataEntrySubstate_allOf:
      description: |
        If the NF has been burned, the value is deleted and empty.
      properties:
        key:
          $ref: '#/components/schemas/LocalNonFungibleKey'
        value:
          $ref: '#/components/schemas/NonFungibleResourceManagerDataEntryValue'
      required:
      - key
      type: object
      example: null
    FungibleVaultFieldBalanceSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/FungibleVaultFieldBalanceValue'
      required:
      - value
      type: object
      example: null
    FungibleVaultFieldFrozenStatusSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/FungibleVaultFieldFrozenStatusValue'
      required:
      - value
      type: object
      example: null
    NonFungibleVaultFieldBalanceSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/NonFungibleVaultFieldBalanceValue'
      required:
      - value
      type: object
      example: null
    NonFungibleVaultFieldFrozenStatusSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/NonFungibleVaultFieldFrozenStatusValue'
      required:
      - value
      type: object
      example: null
    NonFungibleVaultContentsIndexEntrySubstate_allOf:
      properties:
        key:
          $ref: '#/components/schemas/LocalNonFungibleKey'
        value:
          $ref: '#/components/schemas/NonFungibleVaultContentsIndexEntryValue'
      required:
      - key
      - value
      type: object
      example: null
    ConsensusManagerFieldConfigSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/ConsensusManagerFieldConfigValue'
      required:
      - value
      type: object
      example: null
    ConsensusManagerFieldValidatorRewardsSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/ConsensusManagerFieldValidatorRewardsValue'
      required:
      - value
      type: object
      example: null
    ConsensusManagerFieldStateSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/ConsensusManagerFieldStateValue'
      required:
      - value
      type: object
      example: null
    ConsensusManagerFieldCurrentProposalStatisticSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/ConsensusManagerFieldCurrentProposalStatisticValue'
      required:
      - value
      type: object
      example: null
    ConsensusManagerFieldCurrentValidatorSetSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/ConsensusManagerFieldCurrentValidatorSetValue'
      required:
      - value
      type: object
      example: null
    ConsensusManagerRegisteredValidatorsByStakeIndexEntrySubstate_allOf:
      properties:
        key:
          $ref: '#/components/schemas/ActiveValidatorKey'
        value:
          $ref: '#/components/schemas/ConsensusManagerRegisteredValidatorsByStakeIndexEntryValue'
      required:
      - key
      - value
      type: object
      example: null
    ConsensusManagerFieldCurrentTimeRoundedToMinutesSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/ConsensusManagerFieldCurrentTimeRoundedToMinutesValue'
      required:
      - value
      type: object
      example: null
    ConsensusManagerFieldCurrentTimeSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/ConsensusManagerFieldCurrentTimeValue'
      required:
      - value
      type: object
      example: null
    ValidatorFieldStateSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/ValidatorFieldStateValue'
      required:
      - value
      type: object
      example: null
    ValidatorFieldProtocolUpdateReadinessSignalSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/ValidatorFieldProtocolUpdateReadinessSignalValue'
      required:
      - value
      type: object
      example: null
    AccountFieldStateSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/AccountFieldStateValue'
      required:
      - value
      type: object
      example: null
    AccountVaultEntrySubstate_allOf:
      properties:
        key:
          $ref: '#/components/schemas/ResourceKey'
        value:
          $ref: '#/components/schemas/AccountVaultEntryValue'
      required:
      - key
      - value
      type: object
      example: null
    AccountResourcePreferenceEntrySubstate_allOf:
      properties:
        key:
          $ref: '#/components/schemas/ResourceKey'
        value:
          $ref: '#/components/schemas/AccountResourcePreferenceEntryValue'
      required:
      - key
      type: object
      example: null
    AccountAuthorizedDepositorEntrySubstate_allOf:
      properties:
        key:
          $ref: '#/components/schemas/AuthorizedDepositorKey'
        value:
          $ref: '#/components/schemas/AccountAuthorizedDepositorEntryValue'
      required:
      - key
      type: object
      example: null
    AccessControllerFieldStateSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/AccessControllerFieldStateValue'
      required:
      - value
      type: object
      example: null
    GenericScryptoComponentFieldStateSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/GenericScryptoComponentFieldStateValue'
      required:
      - value
      type: object
      example: null
    GenericKeyValueStoreEntrySubstate_allOf:
      properties:
        key:
          $ref: '#/components/schemas/GenericKey'
        value:
          $ref: '#/components/schemas/GenericKeyValueStoreEntryValue'
      required:
      - key
      type: object
      example: null
    OneResourcePoolFieldStateSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/OneResourcePoolFieldStateValue'
      required:
      - value
      type: object
      example: null
    TwoResourcePoolFieldStateSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/TwoResourcePoolFieldStateValue'
      required:
      - value
      type: object
      example: null
    MultiResourcePoolFieldStateSubstate_allOf:
      properties:
        value:
          $ref: '#/components/schemas/MultiResourcePoolFieldStateValue'
      required:
      - value
      type: object
      example: null
    LtsTransactionSubmitErrorResponse_allOf:
      properties:
        details:
          $ref: '#/components/schemas/LtsTransactionSubmitErrorDetails'
      type: object
      example: null
    LtsTransactionSubmitPriorityThresholdNotMetErrorDetails_allOf:
      properties:
        tip_percentage:
          description: |
            Tip percentage of the submitted (and rejected) transaction.
          format: int32
          maximum: 65535
          minimum: 0
          type: integer
        min_tip_percentage_required:
          description: |
            A lower bound for tip percentage at current mempool state. Anything lower than this will very likely result in a mempool rejection.
            A missing value means there is no tip that can guarantee submission.
          format: int32
          maximum: 65535
          minimum: 0
          type: integer
      required:
      - tip_percentage
      type: object
      example: null
    LtsTransactionSubmitIntentAlreadyCommitted_allOf:
      properties:
        committed_as:
          $ref: '#/components/schemas/CommittedIntentMetadata'
      required:
      - committed_as
      type: object
      example: null
    LtsTransactionSubmitRejectedErrorDetails_allOf:
      description: |
        Indicates that the transaction was executed and resulted in a rejection,
        therefore the transaction is not being added into the mempool.
      properties:
        error_message:
          description: An explanation of the error
          type: string
        is_fresh:
          description: |
            Whether (true) this rejected status has just been calculated fresh, or (false) the status is from the pending
            transaction result cache.
          type: boolean
        is_payload_rejection_permanent:
          description: |
            Whether the rejection of this payload is known to be permanent.
          type: boolean
        is_intent_rejection_permanent:
          description: |
            Whether the rejection of this intent is known to be permanent - this is a stronger statement than the payload rejection
            being permanent, as it implies any payloads containing the intent will also be permanently rejected.
          type: boolean
        retry_from_timestamp:
          $ref: '#/components/schemas/Instant'
        retry_from_epoch:
          description: |
            An integer between `0` and `10^10`, marking the epoch after which the node will consider recalculating the validity of the transaction.
            Only present if the rejection is temporary due to a header specifying a "from epoch" in the future.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
        invalid_from_epoch:
          description: |
            An integer between `0` and `10^10`, marking the epoch from which the transaction will no longer be valid, and be permanently rejected.
            Only present if the rejection isn't permanent.
          format: int64
          maximum: 10000000000
          minimum: 0
          type: integer
      required:
      - error_message
      - is_fresh
      - is_intent_rejection_permanent
      - is_payload_rejection_permanent
      type: object
      example: null
    NetworkConfigurationResponse_version:
      description: "Different versions regarding the node, network and api."
      example:
        api_version: api_version
        core_version: core_version
      properties:
        core_version:
          type: string
        api_version:
          type: string
      required:
      - api_version
      - core_version
      type: object
    NetworkConfigurationResponse_well_known_addresses:
      description: Key addresses for this network.
      example:
        secp256k1_signature_virtual_badge: secp256k1_signature_virtual_badge
        account_owner_badge: account_owner_badge
        access_controller_package: access_controller_package
        resource_package: resource_package
        package_package: package_package
        account_package: account_package
        system_transaction_badge: system_transaction_badge
        global_caller_virtual_badge: global_caller_virtual_badge
        metadata_module_package: metadata_module_package
        role_assignment_module_package: role_assignment_module_package
        transaction_processor_package: transaction_processor_package
        faucet: faucet
        ed25519_signature_virtual_badge: ed25519_signature_virtual_badge
        package_owner_badge: package_owner_badge
        consensus_manager: consensus_manager
        consensus_manager_package: consensus_manager_package
        genesis_helper_package: genesis_helper_package
        faucet_package: faucet_package
        xrd: xrd
        validator_owner_badge: validator_owner_badge
        royalty_module_package: royalty_module_package
        pool_package: pool_package
        identity_package: identity_package
        package_of_direct_caller_virtual_badge: package_of_direct_caller_virtual_badge
        genesis_helper: genesis_helper
        identity_owner_badge: identity_owner_badge
      properties:
        xrd:
          type: string
        secp256k1_signature_virtual_badge:
          type: string
        ed25519_signature_virtual_badge:
          type: string
        package_of_direct_caller_virtual_badge:
          type: string
        global_caller_virtual_badge:
          type: string
        system_transaction_badge:
          type: string
        package_owner_badge:
          type: string
        validator_owner_badge:
          type: string
        account_owner_badge:
          type: string
        identity_owner_badge:
          type: string
        package_package:
          type: string
        resource_package:
          type: string
        account_package:
          type: string
        identity_package:
          type: string
        consensus_manager_package:
          type: string
        access_controller_package:
          type: string
        transaction_processor_package:
          type: string
        metadata_module_package:
          type: string
        royalty_module_package:
          type: string
        role_assignment_module_package:
          type: string
        genesis_helper_package:
          type: string
        faucet_package:
          type: string
        pool_package:
          type: string
        consensus_manager:
          type: string
        genesis_helper:
          type: string
        faucet:
          type: string
      required:
      - access_controller_package
      - account_owner_badge
      - account_package
      - consensus_manager
      - consensus_manager_package
      - ed25519_signature_virtual_badge
      - faucet
      - faucet_package
      - genesis_helper
      - genesis_helper_package
      - global_caller_virtual_badge
      - identity_owner_badge
      - identity_package
      - metadata_module_package
      - package_of_direct_caller_virtual_badge
      - package_owner_badge
      - package_package
      - pool_package
      - resource_package
      - role_assignment_module_package
      - royalty_module_package
      - secp256k1_signature_virtual_badge
      - system_transaction_badge
      - transaction_processor_package
      - validator_owner_badge
      - xrd
      type: object
    CommittedStateIdentifier_allOf:
      properties:
        state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
      required:
      - state_version
      type: object
      example: null
    MempoolTransactionResponse_payloads_inner:
      example:
        hash_bech32m: hash_bech32m
        hex: hex
        error: error
        hash: hash
      properties:
        hash:
          description: |
            The hex-encoded notarized transaction hash for a user transaction.
            This hash identifies the full submittable notarized transaction - ie the signed intent, plus the notary signature.
          maxLength: 64
          minLength: 64
          type: string
        hash_bech32m:
          description: The Bech32m-encoded human readable `NotarizedTransactionHash`.
          type: string
        hex:
          description: The hex-encoded full notarized transaction payload - returned
            only if found in mempool.
          type: string
        error:
          description: |
            Error message why `hex` field is missing: the transaction was not found in the mempool or the provided hash is invalid.
          type: string
      required:
      - hash
      - hash_bech32m
      type: object
    ParsedNotarizedTransaction_allOf_validation_error:
      description: |
        If the transaction is known to not be valid, this gives a reason.
        Different levels of validation are performed, dependent on the validation mode.
        Note that, even if validation mode is Static or Full, the transaction may
        still be rejected or fail due to issues at runtime (eg if the loan cannot be repaid).
      properties:
        reason:
          description: |
            The error message.
          type: string
        is_permanent:
          description: |
            Whether the error is known to be permanent, or not.
            This relates to whether the transaction would be rejected permanently or temporarily if submitted.
          type: boolean
      required:
      - is_permanent
      - reason
      type: object
      example: null
    ParsedNotarizedTransaction_allOf:
      properties:
        notarized_transaction:
          $ref: '#/components/schemas/NotarizedTransaction'
        identifiers:
          $ref: '#/components/schemas/ParsedNotarizedTransactionIdentifiers'
        validation_error:
          $ref: '#/components/schemas/ParsedNotarizedTransaction_allOf_validation_error'
      required:
      - identifiers
      type: object
      example: null
    ParsedSignedTransactionIntent_allOf:
      properties:
        signed_intent:
          $ref: '#/components/schemas/SignedTransactionIntent'
        identifiers:
          $ref: '#/components/schemas/ParsedSignedTransactionIntentIdentifiers'
      required:
      - identifiers
      type: object
      example: null
    ParsedTransactionIntent_allOf:
      properties:
        intent:
          $ref: '#/components/schemas/TransactionIntent'
        identifiers:
          $ref: '#/components/schemas/ParsedTransactionIntentIdentifiers'
      required:
      - identifiers
      type: object
      example: null
    ParsedLedgerTransaction_allOf:
      properties:
        ledger_transaction:
          $ref: '#/components/schemas/LedgerTransaction'
        identifiers:
          $ref: '#/components/schemas/ParsedLedgerTransactionIdentifiers'
      required:
      - identifiers
      type: object
      example: null
    TransactionSubmitErrorResponse_allOf:
      properties:
        details:
          $ref: '#/components/schemas/TransactionSubmitErrorDetails'
      type: object
      example: null
    ComponentMethodTargetIdentifier_allOf:
      properties:
        component_address:
          description: The Bech32m-encoded human readable version of the component
            address
          type: string
        method_name:
          type: string
      required:
      - component_address
      - method_name
      type: object
      example: null
    BlueprintFunctionTargetIdentifier_allOf:
      properties:
        package_address:
          description: The Bech32m-encoded human readable version of the package address
          type: string
        blueprint_name:
          type: string
        function_name:
          type: string
      required:
      - blueprint_name
      - function_name
      - package_address
      type: object
      example: null
    TransactionPreviewRequest_flags:
      example:
        use_free_credit: true
        assume_all_signature_proofs: true
        skip_epoch_check: true
      properties:
        use_free_credit:
          type: boolean
        assume_all_signature_proofs:
          type: boolean
        skip_epoch_check:
          type: boolean
      required:
      - assume_all_signature_proofs
      - skip_epoch_check
      - use_free_credit
      type: object
    TransactionPreviewResponse_logs_inner:
      example:
        level: level
        message: message
      properties:
        level:
          type: string
        message:
          type: string
      required:
      - level
      - message
      type: object
    StreamTransactionsErrorResponse_allOf:
      properties:
        details:
          $ref: '#/components/schemas/StreamTransactionsErrorDetails'
      type: object
      example: null
    RequestedStateVersionOutOfBoundsErrorDetails_allOf:
      properties:
        max_ledger_state_version:
          format: int64
          maximum: 100000000000000
          minimum: 1
          type: integer
      required:
      - max_ledger_state_version
      type: object
      example: null
    GenesisLedgerTransaction_allOf:
      properties:
        is_flash:
          description: |
            The first genesis "transaction" flashes state into the database to prepare for the bootstrap transaction.
            Such a transaction does not have an associated `system_transaction`
          type: boolean
        system_transaction:
          $ref: '#/components/schemas/SystemTransaction'
      required:
      - is_flash
      type: object
      example: null
    UserLedgerTransaction_allOf:
      properties:
        notarized_transaction:
          $ref: '#/components/schemas/NotarizedTransaction'
      required:
      - notarized_transaction
      type: object
      example: null
    RoundUpdateLedgerTransaction_allOf:
      properties:
        round_update_transaction:
          $ref: '#/components/schemas/RoundUpdateTransaction'
      required:
      - round_update_transaction
      type: object
      example: null
    StateFungibleResourceManager_allOf:
      properties:
        divisibility:
          $ref: '#/components/schemas/Substate'
        total_supply:
          $ref: '#/components/schemas/Substate'
      required:
      - divisibility
      type: object
      example: null
    StateNonFungibleResourceManager_allOf:
      properties:
        id_type:
          $ref: '#/components/schemas/Substate'
        total_supply:
          $ref: '#/components/schemas/Substate'
        mutable_fields:
          $ref: '#/components/schemas/Substate'
      required:
      - id_type
      - mutable_fields
      type: object
      example: null
x-tagGroups:
- name: Overview
  tags:
  - SDKs
  - SubAPIs
  - Concepts
  - Construction
- name: Endpoints
  tags:
  - LTS
  - Status
  - Transaction
  - Mempool
  - State
  - Stream

